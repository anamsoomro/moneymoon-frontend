{"ast":null,"code":"var _jsxFileName = \"/Users/flatironstudent/Desktop/moneys/frontend/src/components/BalanceDonut.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport { Doughnut } from 'react-chartjs-2';\n\nconst BalanceDonut = props => {\n  // i just want to pass it different props\n  const calcData = () => {\n    // labels: [\"depository\", \"investments\", \"debt\"],\n    switch (props.typeView) {\n      case \"depository\":\n        return [calcDepository(), 0, 0];\n\n      case \"investments\":\n        return [0, calcInvestments, 0];\n\n      case \"debt\":\n        return [0, 0, calcDebt];\n\n      default:\n        return [calcDepository(), calcInvestments(), calcDebt()];\n    }\n  };\n\n  const calcDebt = () => {\n    let debt = props.accounts.reduce((acc, i) => {\n      if (i.type === \"credit\" || i.type === \"loan\") {\n        // debt\n        return acc - i.balances.current;\n      } else {\n        return acc + i.balances.current;\n      }\n    }, 0);\n    return debt;\n  };\n\n  const calcInvestments = () => {\n    let investments = props.accounts.reduce((acc, i) => {\n      if (i.type === \"investment\") {\n        //investment\n        return acc + i.balances.current;\n      } else {\n        return acc + i.balances.current;\n      }\n    }, 0);\n    return investments;\n  };\n\n  const calcDepository = () => {\n    let depository = props.accounts.reduce((acc, i) => {\n      if (i.type === \"depository\") {\n        //liquid\n        return acc + i.balances.current;\n      } else {\n        return acc + i.balances.current;\n      }\n    }, 0);\n    return depository;\n  };\n\n  const data = {\n    labels: [\"depository\", \"investments\", \"debt\"],\n    datasets: [{\n      label: 'out',\n      backgroundColor: ['#d8ea7c', '#93172a', '#2f00a8', '#3cef07', '#97d817', '#5aefcf', '#af09fd', '#751b74', '#3e6764', '#631a7c', '#af5e55', '#c2443d'],\n      // data: [1, 2, 1],\n      // data: [1,1,1],\n      data: calcData(),\n      borderWidth: 0\n    }]\n  };\n  const options = {\n    title: {\n      display: false,\n      fontSize: 20\n    },\n    legend: {\n      display: false,\n      position: 'right'\n    },\n    rotation: 1 * Math.PI,\n    circumference: 2 * Math.PI,\n    maintainAspectRatio: false\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Doughnut, {\n    data: data,\n    options: options,\n    width: 200,\n    height: 360,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 10\n    }\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    accounts: state.linkReducer.accounts,\n    type: state.linkReducer.typeView\n  };\n};\n\nconst mapDispacthToProps = dispatch => {\n  return {\n    dispatch\n  };\n};\n\nexport default connect(mapStateToProps, mapDispacthToProps)(BalanceDonut);","map":{"version":3,"sources":["/Users/flatironstudent/Desktop/moneys/frontend/src/components/BalanceDonut.js"],"names":["React","connect","Doughnut","BalanceDonut","props","calcData","typeView","calcDepository","calcInvestments","calcDebt","debt","accounts","reduce","acc","i","type","balances","current","investments","depository","data","labels","datasets","label","backgroundColor","borderWidth","options","title","display","fontSize","legend","position","rotation","Math","PI","circumference","maintainAspectRatio","mapStateToProps","state","linkReducer","mapDispacthToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { connect } from 'react-redux'\nimport { Doughnut } from 'react-chartjs-2'\n\nconst BalanceDonut = (props) => { // i just want to pass it different props\n\n  const calcData = () => {\n    // labels: [\"depository\", \"investments\", \"debt\"],\n    switch(props.typeView){\n      case \"depository\":\n        return [calcDepository(), 0, 0]\n      case \"investments\":\n        return [0, calcInvestments, 0]\n      case \"debt\":\n        return [0, 0, calcDebt]\n      default: \n        return [calcDepository(), calcInvestments(), calcDebt()]\n    }\n  }\n\n  const calcDebt = () => {\n    let debt = props.accounts.reduce( (acc, i) => { \n      if(i.type === \"credit\" || i.type === \"loan\" ){ // debt\n        return (acc - i.balances.current)\n      } else {\n        return (acc + i.balances.current) \n      }\n    }, 0)\n    return debt\n  }\n\n  const calcInvestments = () => {\n    let investments = props.accounts.reduce( (acc, i) => { \n      if (i.type === \"investment\"){ //investment\n        return (acc + i.balances.current) \n      } else {\n        return (acc + i.balances.current) \n      }\n    }, 0)\n    return investments\n  }\n\n  const calcDepository = () => {\n    let depository = props.accounts.reduce( (acc, i) => { \n      if (i.type === \"depository\" ){ //liquid\n        return (acc + i.balances.current) \n      } else {\n        return (acc + i.balances.current) \n      }\n    }, 0)\n    return depository\n  }\n\n\n\n  const data = {\n    labels: [\"depository\", \"investments\", \"debt\"],\n    datasets: [\n      {\n        label: 'out',\n        backgroundColor: ['#d8ea7c', '#93172a', '#2f00a8', '#3cef07', '#97d817', '#5aefcf', '#af09fd', '#751b74', '#3e6764', '#631a7c', '#af5e55', '#c2443d'],\n        // data: [1, 2, 1],\n        // data: [1,1,1],\n        data: calcData(),\n        borderWidth: 0\n      },\n    ]\n  }\n\n  const options = {\n    title:{\n      display: false,\n      fontSize:20\n    },\n    legend:{\n      display:false,\n      position:'right'\n    },\n    rotation: 1 * Math.PI, \n    circumference: 2 * Math.PI ,\n    maintainAspectRatio: false\n  }\n\n\n  return (\n      <div>\n         <Doughnut  data={data} options={options} width={200} height={360} />\n      </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    accounts: state.linkReducer.accounts,\n    type: state.linkReducer.typeView\n  }\n}\n\nconst mapDispacthToProps = (dispatch) => {\n  return {\n    dispatch\n  }\n}\n\nexport default connect(mapStateToProps, mapDispacthToProps)(BalanceDonut)"]},"metadata":{},"sourceType":"module"}