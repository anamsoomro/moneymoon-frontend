{"ast":null,"code":"const initialState = {\n  viewUser: null,\n  transactionsDisplay: state.transactions,\n  accountsDisplay: state.accounts\n};\nexport default function viewReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'setUserVew':\n      let username;\n\n      switch (action.data.user) {\n        case \"user1\":\n          username = state.accounts.users[0].username;\n          break;\n\n        case 'user2':\n          username = state.accounts.users[1].username;\n          break;\n\n        default:\n          // if it is both, userView is null\n          username = null;\n      }\n\n      let filteredAccounts;\n      let filteredTransactions;\n\n      if (username) {\n        filteredTransactions = state.transactions.filter(transaction => transaction.user.username === username);\n        filteredAccounts = state.accounts.filter(account => account.user.username === username);\n      }\n\n      debugger;\n      return { ...state,\n        viewUser: username,\n        transactionsDisplay: filteredTransactions,\n        accountsDisplay: filteredAccounts\n      };\n\n    case \"resetApp\":\n      return initialState;\n\n    default:\n      {\n        return state;\n      }\n  }\n}","map":{"version":3,"sources":["/Users/flatironstudent/Desktop/moneys/frontend/src/reducers/viewReducer.js"],"names":["initialState","viewUser","transactionsDisplay","state","transactions","accountsDisplay","accounts","viewReducer","action","type","username","data","user","users","filteredAccounts","filteredTransactions","filter","transaction","account"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,IADS;AAEnBC,EAAAA,mBAAmB,EAAEC,KAAK,CAACC,YAFR;AAGnBC,EAAAA,eAAe,EAAEF,KAAK,CAACG;AAHJ,CAArB;AAMA,eAAe,SAASC,WAAT,CAAqBJ,KAAK,GAACH,YAA3B,EAAyCQ,MAAzC,EAAgD;AAC7D,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,YAAL;AACE,UAAIC,QAAJ;;AACA,cAAQF,MAAM,CAACG,IAAP,CAAYC,IAApB;AACE,aAAK,OAAL;AACEF,UAAAA,QAAQ,GAAGP,KAAK,CAACG,QAAN,CAAeO,KAAf,CAAqB,CAArB,EAAwBH,QAAnC;AACA;;AACF,aAAK,OAAL;AACEA,UAAAA,QAAQ,GAAGP,KAAK,CAACG,QAAN,CAAeO,KAAf,CAAqB,CAArB,EAAwBH,QAAnC;AACA;;AACF;AAAS;AACPA,UAAAA,QAAQ,GAAG,IAAX;AARJ;;AAUA,UAAII,gBAAJ;AACA,UAAIC,oBAAJ;;AACA,UAAIL,QAAJ,EAAa;AACXK,QAAAA,oBAAoB,GAAGZ,KAAK,CAACC,YAAN,CAAmBY,MAAnB,CAA2BC,WAAW,IAAIA,WAAW,CAACL,IAAZ,CAAiBF,QAAjB,KAA8BA,QAAxE,CAAvB;AACAI,QAAAA,gBAAgB,GAAGX,KAAK,CAACG,QAAN,CAAeU,MAAf,CAAuBE,OAAO,IAAIA,OAAO,CAACN,IAAR,CAAaF,QAAb,KAA0BA,QAA5D,CAAnB;AACD;;AACD;AACA,aAAO,EACL,GAAGP,KADE;AAELF,QAAAA,QAAQ,EAAES,QAFL;AAGLR,QAAAA,mBAAmB,EAAEa,oBAHhB;AAILV,QAAAA,eAAe,EAAES;AAJZ,OAAP;;AAMF,SAAK,UAAL;AACE,aAAOd,YAAP;;AACF;AAAS;AACP,eAAOG,KAAP;AACD;AA9BH;AAgCD","sourcesContent":["const initialState = {\n  viewUser: null,\n  transactionsDisplay: state.transactions,\n  accountsDisplay: state.accounts\n}\n\nexport default function viewReducer(state=initialState, action){\n  switch(action.type){\n    case 'setUserVew':\n      let username\n      switch (action.data.user){\n        case \"user1\":\n          username = state.accounts.users[0].username\n          break \n        case 'user2': \n          username = state.accounts.users[1].username\n          break\n        default: // if it is both, userView is null\n          username = null\n      }\n      let filteredAccounts\n      let filteredTransactions\n      if (username){\n        filteredTransactions = state.transactions.filter( transaction => transaction.user.username === username)\n        filteredAccounts = state.accounts.filter( account => account.user.username === username)\n      }\n      debugger\n      return {\n        ...state,\n        viewUser: username,\n        transactionsDisplay: filteredTransactions,\n        accountsDisplay: filteredAccounts\n      }\n    case \"resetApp\":\n      return initialState;\n    default: {\n      return state\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}