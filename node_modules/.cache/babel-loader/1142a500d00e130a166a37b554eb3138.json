{"ast":null,"code":"var _jsxFileName = \"/Users/flatironstudent/development/code/05_mod/moneys/frontend/src/components/ToggleMonth.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport { trackPromise } from 'react-promise-tracker';\n\nconst ToggleMonth = props => {\n  let today = new Date();\n  let month = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n  const getMonthTrans = event => {\n    props.setMonthView(event.target.id);\n    trackPromise(fetch(\"http://localhost:3000/month_transactions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.token}`\n      },\n      body: JSON.stringify({\n        // month: event.target.value,\n        month: event.target.id,\n        account_id: props.account_id\n      })\n    }).then(resp => resp.json()).then(transactions => {\n      transactions = transactions.map(tran => {\n        let account = props.accounts.filter(acc => acc.account_id === tran.account_id);\n        return { ...tran,\n          account_name: account[0].name\n        };\n      });\n      props.storeMonth(transactions);\n      props.handleDisplay();\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group\",\n    style: {\n      padding: \"0px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary dropdown-toggle\",\n    \"data-toggle\": \"dropdown\",\n    style: {\n      color: \"white\",\n      backgroundColor: \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, month[props.monthView - 1]), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdown-menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdown-item\",\n    id: today.getMonth() + 1,\n    onClick: getMonthTrans,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, month[today.getMonth() + 1 - 1]), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdown-divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdown-item\",\n    id: today.getMonth() + 1 - 1,\n    onClick: getMonthTrans,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, month[today.getMonth() + 1 - 2]), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdown-divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdown-item\",\n    id: today.getMonth() + 1 - 2,\n    onClick: getMonthTrans,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, month[today.getMonth() + 1 - 3]), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdown-divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdown-item\",\n    id: today.getMonth() + 1 - 3,\n    onClick: getMonthTrans,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, month[today.getMonth() + 1 - 4]))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    accounts: state.linkReducer.accounts,\n    account_id: state.authReducer.account.id,\n    monthView: state.linkReducer.monthView\n  };\n};\n\nconst mapDispacthToProps = dispatch => {\n  return {\n    storeMonth: transactions => dispatch({\n      type: \"storeMonth\",\n      transactions: transactions\n    }),\n    setMonthView: month => dispatch({\n      type: \"setMonthView\",\n      month: month\n    }),\n    handleDisplay: () => dispatch({\n      type: \"handleDisplay\"\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispacthToProps)(ToggleMonth);","map":{"version":3,"sources":["/Users/flatironstudent/development/code/05_mod/moneys/frontend/src/components/ToggleMonth.js"],"names":["React","connect","trackPromise","ToggleMonth","props","today","Date","month","getMonthTrans","event","setMonthView","target","id","fetch","method","headers","Authorization","localStorage","token","body","JSON","stringify","account_id","then","resp","json","transactions","map","tran","account","accounts","filter","acc","account_name","name","storeMonth","handleDisplay","padding","color","backgroundColor","monthView","getMonth","mapStateToProps","state","linkReducer","authReducer","mapDispacthToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport {connect} from 'react-redux'\nimport { trackPromise } from 'react-promise-tracker'\n\n\nconst ToggleMonth = (props) => {\n  let today = new Date\n  let month = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n\n\n  const getMonthTrans = (event) => {\n    props.setMonthView(event.target.id)\n    trackPromise(\n    fetch(\"http://localhost:3000/month_transactions\",{\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.token}`\n      },\n      body: JSON.stringify({\n        // month: event.target.value,\n        month: event.target.id,\n        account_id: props.account_id\n      })\n    })\n    .then( resp => resp.json())\n    .then( transactions => {\n      transactions = transactions.map( tran => {\n        let account = props.accounts.filter( acc=> acc.account_id === tran.account_id )\n        return {...tran, account_name: account[0].name}\n      })\n      props.storeMonth(transactions)\n      props.handleDisplay()\n    })\n    )\n\n  }\n\n  return (\n    <div>\n      {/* <div className=\"btn-group dropright \" style={{padding: \"0px\"}}> */}\n      <div className=\"btn-group\" style={{padding: \"0px\"}}>\n\n        <button type=\"button\" className=\"btn btn-secondary dropdown-toggle\" data-toggle=\"dropdown\" style={{color: \"white\", backgroundColor: \"black\"}}>\n          {month[props.monthView - 1]}\n        </button>\n        <div className=\"dropdown-menu\">\n        <div className=\"dropdown-item\" id={today.getMonth() + 1} onClick={getMonthTrans}>{month[today.getMonth() + 1 - 1]}</div>\n          <div className=\"dropdown-divider\"></div>\n        <div className=\"dropdown-item\" id={today.getMonth() + 1 - 1} onClick={getMonthTrans}>{month[today.getMonth() + 1 - 2]}</div>\n          <div className=\"dropdown-divider\"></div>\n        <div className=\"dropdown-item\" id={today.getMonth() + 1 - 2} onClick={getMonthTrans}>{month[today.getMonth() + 1 - 3]}</div>\n          <div className=\"dropdown-divider\"></div>\n        <div className=\"dropdown-item\" id={today.getMonth() + 1 - 3} onClick={getMonthTrans}>{month[today.getMonth() + 1 - 4]}</div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    accounts: state.linkReducer.accounts,\n    account_id: state.authReducer.account.id,\n    monthView: state.linkReducer.monthView\n  }\n}\n\nconst mapDispacthToProps = (dispatch) => {\n  return {\n    storeMonth: ((transactions) => dispatch({type:\"storeMonth\", transactions: transactions})),\n    setMonthView: ((month)=>dispatch({type: \"setMonthView\", month: month})),\n    handleDisplay: () => dispatch({type: \"handleDisplay\"})\n  }\n}\n\nexport default connect(mapStateToProps, mapDispacthToProps)(ToggleMonth);\n\n\n"]},"metadata":{},"sourceType":"module"}