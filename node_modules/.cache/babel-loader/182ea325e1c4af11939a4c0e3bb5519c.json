{"ast":null,"code":"var _jsxFileName = \"/Users/flatironstudent/Desktop/moneys/frontend/src/containers/Month.js\";\nimport React, { useEffect } from \"react\";\nimport MonthPie from \"../components/MonthPie\";\nimport TransactionPanel from \"../components/TransactionPanel\";\nimport { connect } from 'react-redux';\nimport MonthGauge from \"../components/MonthGauge\";\nimport NoAccounts from \"../components/NoAccounts\";\nimport ToggleMonth from '../components/ToggleMonth';\nimport MonthSummary from '../components/MonthSummary';\nimport { usePromiseTracker } from \"react-promise-tracker\";\nimport PreLoader from \"../components/PreLoader\";\n\nconst Month = props => {\n  useEffect(() => {\n    props.handleMonthDisplay();\n  }, [props.userView]);\n  const {\n    promiseInProgress\n  } = usePromiseTracker(); // will return t or f. tracking promise in app useEffect \n\n  return promiseInProgress ? /*#__PURE__*/React.createElement(PreLoader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }) : props.accounts.length ? props.transactions.length ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"month-grid-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"month-summary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MonthSummary, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"month-chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, props.showCategories ? /*#__PURE__*/React.createElement(MonthPie, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(MonthGauge, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"month-transactions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TransactionPanel, {\n    transactions: props.transactions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }))) : /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"fixed\",\n      top: \"50%\",\n      left: \"50%\",\n      transform: \"translate(-50%, -50%)\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, \" no transactions for this month \"), /*#__PURE__*/React.createElement(ToggleMonth, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(NoAccounts, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  });\n};\n\nconst mapStateToProps = state => {\n  return {\n    // transactions: state.linkReducer.monthTransactions,\n    transactions: state.linkReducer.monthDisplay,\n    accounts: state.linkReducer.accounts,\n    account_id: state.authReducer.account.id,\n    accounts: state.linkReducer.accounts,\n    userView: state.linkReducer.userView,\n    showCategories: state.linkReducer.showCategories\n  };\n};\n\nconst mapDispacthToProps = dispatch => {\n  return {\n    storeMonth: transactions => dispatch({\n      type: \"storeMonth\",\n      transactions: transactions\n    }),\n    handleMonthDisplay: () => dispatch({\n      type: \"handleMonthDisplay\"\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispacthToProps)(Month);","map":{"version":3,"sources":["/Users/flatironstudent/Desktop/moneys/frontend/src/containers/Month.js"],"names":["React","useEffect","MonthPie","TransactionPanel","connect","MonthGauge","NoAccounts","ToggleMonth","MonthSummary","usePromiseTracker","PreLoader","Month","props","handleMonthDisplay","userView","promiseInProgress","accounts","length","transactions","showCategories","position","top","left","transform","textAlign","mapStateToProps","state","linkReducer","monthDisplay","account_id","authReducer","account","id","mapDispacthToProps","dispatch","storeMonth","type"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\"\nimport MonthPie from \"../components/MonthPie\";\nimport TransactionPanel from \"../components/TransactionPanel\";\nimport {connect} from 'react-redux'\nimport MonthGauge from \"../components/MonthGauge\";\nimport NoAccounts from \"../components/NoAccounts\"\nimport ToggleMonth from '../components/ToggleMonth'\nimport MonthSummary from '../components/MonthSummary'\nimport { usePromiseTracker } from \"react-promise-tracker\";\nimport PreLoader from \"../components/PreLoader\"\n\nconst Month = (props) => {\n\n  useEffect( () => {\n    props.handleMonthDisplay()\n  }, [props.userView])\n\n\n  const { promiseInProgress } = usePromiseTracker(); // will return t or f. tracking promise in app useEffect \n\n  return (\n    promiseInProgress\n    ? <PreLoader /> \n    : props.accounts.length\n      ? props.transactions.length\n        ? <div className=\"month-grid-container\">\n            <div className=\"month-summary\">\n              <MonthSummary />\n            </div>\n            <div className=\"month-chart\">\n              {\n              props.showCategories\n              ? <MonthPie />\n              : <MonthGauge />\n              }\n            </div>\n            <div className=\"month-transactions\">\n              <TransactionPanel transactions={props.transactions} />\n            </div>\n          </div>\n        :<div style={{position: \"fixed\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\", textAlign: \"center\"}}>\n          <h1> no transactions for this month </h1>\n          <ToggleMonth />\n        </div>\n      : <NoAccounts />\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    // transactions: state.linkReducer.monthTransactions,\n    transactions: state.linkReducer.monthDisplay,\n\n    accounts: state.linkReducer.accounts,\n    account_id: state.authReducer.account.id,\n    accounts: state.linkReducer.accounts,\n\n    userView: state.linkReducer.userView,\n\n    showCategories: state.linkReducer.showCategories\n  }\n}\n\nconst mapDispacthToProps = (dispatch) => {\n  return {\n    storeMonth: ((transactions) => dispatch({type:\"storeMonth\", transactions: transactions})),\n\n    handleMonthDisplay: () => dispatch({type: \"handleMonthDisplay\"})\n  }\n}\n\nexport default connect(mapStateToProps, mapDispacthToProps)(Month);\n\n\n"]},"metadata":{},"sourceType":"module"}