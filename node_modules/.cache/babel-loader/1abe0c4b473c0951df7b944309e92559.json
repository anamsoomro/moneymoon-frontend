{"ast":null,"code":"var _jsxFileName = \"/Users/flatironstudent/Desktop/moneys/frontend/src/containers/Trends.js\";\nimport React, { useEffect } from \"react\";\nimport LineChart from '../components/LineChart';\nimport { connect } from 'react-redux';\nimport NoAccounts from \"../components/NoAccounts\";\nimport AdjustTrends from \"../components/AdjustTrends\";\nimport { usePromiseTracker } from \"react-promise-tracker\";\nimport PreLoader from \"../components/PreLoader\";\nimport TrendSummary from '../components/TrendSummary';\n\nconst Trends = props => {\n  // useEffect(()=>{\n  //   console.log(\"useEffect\")\n  //   let user1 = null\n  //   let user2 = null\n  //   // if (props.account.users[0]){ // for one user\n  //   //   let u1Saving = [2000, 2200, 2400, 2600, 2600, 2650]\n  //   //   let u1Debt = [10000, 9500, 9000, 8500, 8000, 7500] \n  //   //   let u1Investment = [4000, 4100, 3900, 3700, 3750, 3800] \n  //   //   let u1Overall = []\n  //   //   for (let i = 0; i < u1Saving.length; i++){\n  //   //     u1Overall.push( u1Saving[i] + u1Investment[i] - u1Debt[i] )\n  //   //   }\n  //   //   user1 = {\n  //   //     saving: u1Saving, \n  //   //     debt: u1Debt, \n  //   //     investment: u1Investment, \n  //   //     overall: u1Overall,\n  //   //     mSaving: (u1Saving[5] - u1Saving[0]) / 5,\n  //   //     mDebt: (u1Debt[5] - u1Debt[0]) / 5,\n  //   //     mInvestment: (u1Investment[5] - u1Investment[0]) / 5,\n  //   //     mOverall: (u1Overall[5] - u1Overall[0]) / 5,\n  //   //   }\n  //   // } \n  //   if (props.account.users[1]){ // for second user\n  //     let u2Saving = [2000, 2200, 2400, 2600, 2600, 2650]\n  //     let u2Debt = [10000, 9500, 9000, 8500, 8000, 7500] \n  //     let u2Investment = [4000, 4100, 3900, 3700, 3750, 3800] \n  //     let u2Overall = []\n  //     for (let i = 0; i < u2Saving.length; i++){\n  //       u2Overall.push( u2Saving[i] + u2Investment[i] - u2Debt[i] )\n  //     }\n  //     user2 = {\n  //       saving: u2Saving, \n  //       debt: u2Debt, \n  //       investment: u2Investment, \n  //       overall: u2Overall,\n  //       mSaving: (u2Saving[5] - u2Saving[0]) / 5,\n  //       mDebt: (u2Debt[5] - u2Debt[0]) / 5,\n  //       mInvestment: (u2Investment[5] - u2Investment[0]) / 5,\n  //       mOverall: (u2Overall[5] - u2Overall[0]) / 5,\n  //     }\n  //   } \n  //   // props.storeHistory(user1, user2)  // in trendReducer, set data\n  //   // props.handleTrendDisplay(props.userView) // in trendReducer, set display \n  // }, [props.account]) // this should update if users get added\n  const handleTypeFilter = event => {\n    debugger;\n    console.log(event.target.id);\n    props.setTypeView(event.target.id);\n  };\n\n  const {\n    promiseInProgress\n  } = usePromiseTracker();\n  return promiseInProgress ? /*#__PURE__*/React.createElement(PreLoader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }) : props.accounts.length ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"trends-grid-container \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"trends-toggle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row justify-content-center mb-5\",\n    \"data-aos\": \"fade-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-toggle\",\n    \"data-toggle\": \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"btn btn-primary active overall \",\n    id: \"net-worth\",\n    onClick: handleTypeFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    checked: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }), \" overall\"), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"btn btn-primary net-worth\",\n    id: \"overall\",\n    onClick: handleTypeFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    checked: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }), \" net worth\"), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"btn btn-primary depository\",\n    id: \"depository\",\n    onClick: handleTypeFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }), \" liquid funds\"), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"btn btn-primary investment\",\n    id: \"investment\",\n    onClick: handleTypeFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }), \" investments\"), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"btn btn-primary debt\",\n    id: \"debt\",\n    onClick: handleTypeFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }), \" debt\"))), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"ON CURRENT TRENDS, IN 6 MONTHS YOU WILL HAVE... \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"trends-chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(LineChart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"trends-summary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TrendSummary, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"trends-controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AdjustTrends, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 12\n    }\n  }))) : /*#__PURE__*/React.createElement(NoAccounts, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  });\n};\n\nconst mapStateToProps = state => {\n  return {\n    accounts: state.linkReducer.accounts,\n    account: state.authReducer.account,\n    userView: state.linkReducer.userView\n  };\n};\n\nconst mapDispacthToProps = dispatch => {\n  return {\n    setTypeView: filter => dispatch({\n      type: \"setTypeView\",\n      filter: filter\n    }),\n    storeHistory: (user1, user2) => dispatch({\n      type: \"storeHistory\",\n      user1: user1,\n      user2: user2\n    }),\n    handleTrendDisplay: userView => dispatch({\n      type: \"handleTrendDisplay\",\n      userView: userView\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispacthToProps)(Trends);","map":{"version":3,"sources":["/Users/flatironstudent/Desktop/moneys/frontend/src/containers/Trends.js"],"names":["React","useEffect","LineChart","connect","NoAccounts","AdjustTrends","usePromiseTracker","PreLoader","TrendSummary","Trends","props","handleTypeFilter","event","console","log","target","id","setTypeView","promiseInProgress","accounts","length","mapStateToProps","state","linkReducer","account","authReducer","userView","mapDispacthToProps","dispatch","filter","type","storeHistory","user1","user2","handleTrendDisplay"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\"\nimport LineChart from '../components/LineChart'\nimport { connect } from 'react-redux'\nimport NoAccounts from \"../components/NoAccounts\"\nimport AdjustTrends from \"../components/AdjustTrends\"\nimport { usePromiseTracker } from \"react-promise-tracker\";\nimport PreLoader from \"../components/PreLoader\"\nimport TrendSummary from '../components/TrendSummary'\n\nconst Trends = (props) => {\n  // useEffect(()=>{\n  //   console.log(\"useEffect\")\n  //   let user1 = null\n  //   let user2 = null\n  //   // if (props.account.users[0]){ // for one user\n  //   //   let u1Saving = [2000, 2200, 2400, 2600, 2600, 2650]\n  //   //   let u1Debt = [10000, 9500, 9000, 8500, 8000, 7500] \n  //   //   let u1Investment = [4000, 4100, 3900, 3700, 3750, 3800] \n  //   //   let u1Overall = []\n  //   //   for (let i = 0; i < u1Saving.length; i++){\n  //   //     u1Overall.push( u1Saving[i] + u1Investment[i] - u1Debt[i] )\n  //   //   }\n  //   //   user1 = {\n  //   //     saving: u1Saving, \n  //   //     debt: u1Debt, \n  //   //     investment: u1Investment, \n  //   //     overall: u1Overall,\n  //   //     mSaving: (u1Saving[5] - u1Saving[0]) / 5,\n  //   //     mDebt: (u1Debt[5] - u1Debt[0]) / 5,\n  //   //     mInvestment: (u1Investment[5] - u1Investment[0]) / 5,\n  //   //     mOverall: (u1Overall[5] - u1Overall[0]) / 5,\n  //   //   }\n  //   // } \n  //   if (props.account.users[1]){ // for second user\n  //     let u2Saving = [2000, 2200, 2400, 2600, 2600, 2650]\n  //     let u2Debt = [10000, 9500, 9000, 8500, 8000, 7500] \n  //     let u2Investment = [4000, 4100, 3900, 3700, 3750, 3800] \n  //     let u2Overall = []\n  //     for (let i = 0; i < u2Saving.length; i++){\n  //       u2Overall.push( u2Saving[i] + u2Investment[i] - u2Debt[i] )\n  //     }\n  //     user2 = {\n  //       saving: u2Saving, \n  //       debt: u2Debt, \n  //       investment: u2Investment, \n  //       overall: u2Overall,\n  //       mSaving: (u2Saving[5] - u2Saving[0]) / 5,\n  //       mDebt: (u2Debt[5] - u2Debt[0]) / 5,\n  //       mInvestment: (u2Investment[5] - u2Investment[0]) / 5,\n  //       mOverall: (u2Overall[5] - u2Overall[0]) / 5,\n  //     }\n  //   } \n  //   // props.storeHistory(user1, user2)  // in trendReducer, set data\n  //   // props.handleTrendDisplay(props.userView) // in trendReducer, set display \n  // }, [props.account]) // this should update if users get added\n\n  const handleTypeFilter = (event) => {\n    debugger\n    console.log(event.target.id)\n    props.setTypeView(event.target.id)\n  }\n  const { promiseInProgress } = usePromiseTracker()\n\n  return (\n    promiseInProgress\n    ? <PreLoader />\n    : props.accounts.length \n      ? <div className=\"trends-grid-container \"> \n        <div className=\"trends-toggle\">\n          <div className=\"row justify-content-center mb-5\" data-aos=\"fade-up\">\n            <div className=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n              <label className=\"btn btn-primary active overall \" id=\"net-worth\" onClick={handleTypeFilter} >\n                {/* THIS ONE NEEDS TO HANDLE SHOWING no filter */}\n                <input type=\"radio\" checked /> overall\n              </label>\n              <label className=\"btn btn-primary net-worth\"  id=\"overall\" onClick={handleTypeFilter}>\n                <input type=\"radio\" checked /> net worth\n              </label>\n              <label className=\"btn btn-primary depository\" id=\"depository\" onClick={handleTypeFilter}>\n                <input type=\"radio\"  /> liquid funds\n              </label>\n              <label className=\"btn btn-primary investment\" id=\"investment\" onClick={handleTypeFilter}>\n                <input type=\"radio\"  /> investments\n              </label>\n              <label className=\"btn btn-primary debt\" id=\"debt\" onClick={handleTypeFilter}>\n                <input type=\"radio\"  /> debt\n              </label>\n            </div>\n            </div>\n            \n            <h4>ON CURRENT TRENDS, IN 6 MONTHS YOU WILL HAVE... </h4>\n\n          </div>\n\n          {/* <button id=\"depository\" onClick={handleTypeFilter}> liquid funds </button>\n          <button id=\"investment\" onClick={handleTypeFilter}> investments </button>\n          <button id=\"debt\" onClick={handleTypeFilter}> debt </button>\n          <button id=\"overall\" onClick={handleTypeFilter}> overall </button> */}\n          <div className=\"trends-chart\">\n            <LineChart />\n          </div>\n          <div className=\"trends-summary\">\n            <TrendSummary />\n          </div>\n          <div className=\"trends-controls\">\n           <AdjustTrends />\n          </div>\n        </div>\n      : <NoAccounts />\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    accounts: state.linkReducer.accounts,\n    account: state.authReducer.account,\n    userView: state.linkReducer.userView\n  }\n}\n\nconst mapDispacthToProps = (dispatch) => {\n  return {\n    setTypeView: ((filter) => dispatch({type: \"setTypeView\", filter: filter})),\n    storeHistory: (user1, user2) => dispatch({type: \"storeHistory\", user1: user1, user2: user2}),\n    handleTrendDisplay: (userView) => dispatch({type: \"handleTrendDisplay\", userView: userView})\n  }\n}\n\nexport default connect(mapStateToProps, mapDispacthToProps)(Trends)\n\n\n\n"]},"metadata":{},"sourceType":"module"}