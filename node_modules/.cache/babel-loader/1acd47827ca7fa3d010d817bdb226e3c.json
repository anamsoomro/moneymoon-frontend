{"ast":null,"code":"var _jsxFileName = \"/Users/flatironstudent/Desktop/moneys/frontend/src/containers/Trends.js\";\nimport React, { useEffect } from \"react\";\nimport LineChart from '../components/LineChart';\nimport { connect } from 'react-redux';\nimport NoAccounts from \"../components/NoAccounts\";\nimport AdjustTrends from \"../components/AdjustTrends\";\nimport { usePromiseTracker } from \"react-promise-tracker\";\nimport PreLoader from \"../components/PreLoader\";\n\nconst Trends = props => {\n  useEffect(() => {\n    props.account.usersst;\n    let saving = [];\n    let debt = [];\n    let investment = [];\n    let overall = [];\n\n    for (let i = 0; i < savingSeed.length; i++) {\n      overall.push(saving[i] + investment[i] - debt[i]);\n    }\n\n    let seed = {\n      saving: saving,\n      debt: debt,\n      investment: investment,\n      overall: overall\n    };\n    dispatch.storeHistory(seed);\n  }, []);\n\n  const handleTypeFilter = event => {\n    props.setTypeView(event.target.id);\n  };\n\n  const {\n    promiseInProgress\n  } = usePromiseTracker(); // will return t or f. tracking promise in app useEffect \n\n  return promiseInProgress ? /*#__PURE__*/React.createElement(PreLoader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }) : props.accounts.length ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    id: \"depository\",\n    onClick: handleTypeFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, \" liquid funds \"), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"investment\",\n    onClick: handleTypeFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, \" investments \"), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"debt\",\n    onClick: handleTypeFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \" debt \"), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"overall\",\n    onClick: handleTypeFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, \" overall \"), /*#__PURE__*/React.createElement(LineChart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(AdjustTrends, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(NoAccounts, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  });\n};\n\nconst mapStateToProps = state => {\n  return {\n    accounts: state.linkReducer.accounts\n  };\n};\n\nconst mapDispacthToProps = dispatch => {\n  return {\n    setTypeView: filter => dispatch({\n      type: \"setTypeView\",\n      filter: filter\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispacthToProps)(Trends);","map":{"version":3,"sources":["/Users/flatironstudent/Desktop/moneys/frontend/src/containers/Trends.js"],"names":["React","useEffect","LineChart","connect","NoAccounts","AdjustTrends","usePromiseTracker","PreLoader","Trends","props","account","usersst","saving","debt","investment","overall","i","savingSeed","length","push","seed","dispatch","storeHistory","handleTypeFilter","event","setTypeView","target","id","promiseInProgress","accounts","mapStateToProps","state","linkReducer","mapDispacthToProps","filter","type"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\"\nimport LineChart from '../components/LineChart'\nimport { connect } from 'react-redux'\nimport NoAccounts from \"../components/NoAccounts\"\nimport AdjustTrends from \"../components/AdjustTrends\"\nimport { usePromiseTracker } from \"react-promise-tracker\";\nimport PreLoader from \"../components/PreLoader\"\n\nconst Trends = (props) => {\n\n  useEffect(()=>{\n    props.account.usersst\n    let saving = []\n    let debt = []\n    let investment = []\n    let overall = []\n    for (let i = 0; i < savingSeed.length; i++){\n      overall.push( saving[i] + investment[i] - debt[i] )\n    }\n    let seed = {saving: saving, debt: debt, investment: investment, overall: overall}\n    dispatch.storeHistory(seed)\n  }, [])\n\n  const handleTypeFilter = (event) => {\n    props.setTypeView(event.target.id)\n  }\n  const { promiseInProgress } = usePromiseTracker(); // will return t or f. tracking promise in app useEffect \n\n  return (\n    promiseInProgress\n    ? <PreLoader />\n    : props.accounts.length \n      ? <div> \n          <button id=\"depository\" onClick={handleTypeFilter}> liquid funds </button>\n          <button id=\"investment\" onClick={handleTypeFilter}> investments </button>\n          <button id=\"debt\" onClick={handleTypeFilter}> debt </button>\n          <button id=\"overall\" onClick={handleTypeFilter}> overall </button>\n          <LineChart />\n          <AdjustTrends />\n        </div>\n      : <NoAccounts />\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    accounts: state.linkReducer.accounts\n  }\n}\n\nconst mapDispacthToProps = (dispatch) => {\n  return {\n    setTypeView: ((filter) => dispatch({type: \"setTypeView\", filter: filter})),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispacthToProps)(Trends)\n\n\n\n"]},"metadata":{},"sourceType":"module"}