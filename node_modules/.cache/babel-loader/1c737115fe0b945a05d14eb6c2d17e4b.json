{"ast":null,"code":"var _jsxFileName = \"/Users/flatironstudent/Desktop/moneys/frontend/src/components/Link.js\";\nimport React, { Component } from \"react\";\nimport { PlaidLink } from \"react-plaid-link\";\nimport { connect } from 'react-redux';\n\nclass Link extends Component {\n  handleOnSuccess(public_token, metadata) {\n    // fetch(\"http://localhost:8000/auth/public_token\", {\n    fetch(\"http://localhost:3000/get_access_token\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\" // this is going to need auth\n\n      },\n      body: JSON.stringify({\n        public_token: public_token,\n        user_id: localStorage.user_id // shouldnt this come from store\n\n      })\n    }).then(resp => resp.json()).then(response => {\n      console.log(\"sweet now you got a access token\");\n      console.log(response); // response has transactions and accounts\n      // i need to send transactions and accoounts to store\n\n      this.props.storeTransactions(response); // this props is undefined here\n    });\n  }\n\n  render(props) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(PlaidLink, {\n      clientName: \"front-end\" // env=\"development\"\n      ,\n      env: \"sandbox\",\n      product: [\"transactions\"] // product={[\"auth\", \"transactions\"]} what ddoes this actually do \n      ,\n      publicKey: \"38e9fa8478f20a384db53c1176e9b7\",\n      onExit: this.handleOnExit,\n      onSuccess: this.handleOnSuccess,\n      className: \"test\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, \"Open Link and connect your bank!\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    storeTransactions: transactions => dispatch({\n      type: \"storeTransactions\",\n      transactions: transactions\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Link);","map":{"version":3,"sources":["/Users/flatironstudent/Desktop/moneys/frontend/src/components/Link.js"],"names":["React","Component","PlaidLink","connect","Link","handleOnSuccess","public_token","metadata","fetch","method","headers","body","JSON","stringify","user_id","localStorage","then","resp","json","response","console","log","props","storeTransactions","render","handleOnExit","mapStateToProps","state","mapDispatchToProps","dispatch","transactions","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAAyB,kBAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAE3BI,EAAAA,eAAe,CAACC,YAAD,EAAeC,QAAf,EAAyB;AACtC;AACAC,IAAAA,KAAK,CAAC,wCAAD,EAA2C;AAC9CC,MAAAA,MAAM,EAAE,MADsC;AAE9CC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT,CAEP;;AAFO,OAFqC;AAM9CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBP,QAAAA,YAAY,EAAEA,YADK;AAEnBQ,QAAAA,OAAO,EAAEC,YAAY,CAACD,OAFH,CAEW;;AAFX,OAAf;AANwC,KAA3C,CAAL,CAWCE,IAXD,CAWMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAXd,EAYCF,IAZD,CAYMG,QAAQ,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAFgB,CAGhB;AACA;;AACA,WAAKG,KAAL,CAAWC,iBAAX,CAA6BJ,QAA7B,EALgB,CAKuB;AACxC,KAlBD;AAmBD;;AAEDK,EAAAA,MAAM,CAACF,KAAD,EAAQ;AACZ,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AACE,MAAA,UAAU,EAAC,WADb,CAEE;AAFF;AAGE,MAAA,GAAG,EAAC,SAHN;AAIE,MAAA,OAAO,EAAE,CAAC,cAAD,CAJX,CAKE;AALF;AAME,MAAA,SAAS,EAAC,gCANZ;AAOE,MAAA,MAAM,EAAE,KAAKG,YAPf;AAQE,MAAA,SAAS,EAAE,KAAKpB,eARlB;AASE,MAAA,SAAS,EAAC,MATZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADF,CADF;AAgBD;;AA1C0B;;AA6C7B,MAAMqB,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLA,IAAAA;AADK,GAAP;AAGD,CAJD;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAM;AACJN,IAAAA,iBAAiB,EAAKO,YAAD,IAAkBD,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAE,mBAAP;AAA4BD,MAAAA,YAAY,EAAEA;AAA1C,KAAD;AAD3C,GAAN;AAGD,CAJD;;AAMA,eAAe3B,OAAO,CAACuB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CxB,IAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { PlaidLink }from \"react-plaid-link\";\nimport {connect} from 'react-redux'\n\nclass Link extends Component {\n\n  handleOnSuccess(public_token, metadata) {\n    // fetch(\"http://localhost:8000/auth/public_token\", {\n    fetch(\"http://localhost:3000/get_access_token\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n        // this is going to need auth\n      },\n      body: JSON.stringify({\n        public_token: public_token,\n        user_id: localStorage.user_id // shouldnt this come from store\n      })\n    })\n    .then(resp => resp.json())\n    .then(response => {\n      console.log(\"sweet now you got a access token\")\n      console.log(response)\n      // response has transactions and accounts\n      // i need to send transactions and accoounts to store\n      this.props.storeTransactions(response) // this props is undefined here\n    })\n  }\n\n  render(props) {\n    return (\n      <div>\n        <PlaidLink\n          clientName=\"front-end\"\n          // env=\"development\"\n          env=\"sandbox\"\n          product={[\"transactions\"]}\n          // product={[\"auth\", \"transactions\"]} what ddoes this actually do \n          publicKey=\"38e9fa8478f20a384db53c1176e9b7\"\n          onExit={this.handleOnExit}\n          onSuccess={this.handleOnSuccess}\n          className=\"test\">\n          Open Link and connect your bank!\n        </PlaidLink>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { \n    state\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return{\n    storeTransactions: ( (transactions) => dispatch({type: \"storeTransactions\", transactions: transactions}) )\n  }\n} \n\nexport default connect(mapStateToProps, mapDispatchToProps)(Link);"]},"metadata":{},"sourceType":"module"}