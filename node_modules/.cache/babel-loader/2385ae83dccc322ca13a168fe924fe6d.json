{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport linkReducer from \"./linkReducer\";\nimport authReducer from \"./authReducer\";\nimport dashReducer from \"./dashReducer\";\nimport viewReducer from \"./viewReducer\";\nconst rootReducer = combineReducers({\n  linkReducer,\n  authReducer,\n  dashReducer,\n  viewReducer\n}); // const rootReducer = (state, action) => {\n//   if (action.type === 'RESET_APP') {\n//     state = undefined;\n//   }\n//   return appReducer(state, action);\n// }\n// This will require me to nest my rootReducer in another reducer \n// which will make me call state.rootReducer.linkReducer.whatever \n// i think i find that more ugly than putting RESET_APP in all the reducers\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/flatironstudent/Desktop/moneys/frontend/src/reducers/rootReducer.js"],"names":["combineReducers","linkReducer","authReducer","dashReducer","viewReducer","rootReducer"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,OAA9B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,MAAMC,WAAW,GAAGL,eAAe,CAAC;AAACC,EAAAA,WAAD;AAAcC,EAAAA,WAAd;AAA2BC,EAAAA,WAA3B;AAAwCC,EAAAA;AAAxC,CAAD,CAAnC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA,eAAeC,WAAf","sourcesContent":["import {combineReducers} from \"redux\"\nimport linkReducer from \"./linkReducer\"\nimport authReducer from \"./authReducer\"\nimport dashReducer from \"./dashReducer\"\nimport viewReducer from \"./viewReducer\"\n\nconst rootReducer = combineReducers({linkReducer, authReducer, dashReducer, viewReducer})\n\n// const rootReducer = (state, action) => {\n//   if (action.type === 'RESET_APP') {\n//     state = undefined;\n//   }\n//   return appReducer(state, action);\n// }\n// This will require me to nest my rootReducer in another reducer \n// which will make me call state.rootReducer.linkReducer.whatever \n// i think i find that more ugly than putting RESET_APP in all the reducers\n\n\n\n\n\nexport default rootReducer"]},"metadata":{},"sourceType":"module"}