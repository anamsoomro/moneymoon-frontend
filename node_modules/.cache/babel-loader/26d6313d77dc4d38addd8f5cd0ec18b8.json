{"ast":null,"code":"var _jsxFileName = \"/Users/flatironstudent/Desktop/moneys/frontend/src/containers/Trends.js\";\nimport React, { useEffect } from \"react\";\nimport LineChart from '../components/LineChart';\nimport { connect } from 'react-redux';\nimport NoAccounts from \"../components/NoAccounts\";\nimport AdjustTrends from \"../components/AdjustTrends\";\nimport { usePromiseTracker } from \"react-promise-tracker\";\nimport PreLoader from \"../components/PreLoader\";\n\nconst Trends = props => {\n  useEffect(() => {\n    let history = [];\n\n    if (props.account.users[0]) {\n      // for one user\n      let saving = [];\n      let debt = [];\n      let investment = [];\n      let overall = [];\n\n      for (let i = 0; i < savingSeed.length; i++) {\n        overall.push(saving[i] + investment[i] - debt[i]);\n      }\n\n      let user1 = {\n        saving: saving,\n        debt: debt,\n        investment: investment,\n        overall: overall\n      };\n      history.push(user1);\n    }\n\n    if (props.account.users[1]) {\n      // for second user\n      let saving = [];\n      let debt = [];\n      let investment = [];\n      let overall = [];\n\n      for (let i = 0; i < savingSeed.length; i++) {\n        overall.push(saving[i] + investment[i] - debt[i]);\n      }\n\n      let user2 = {\n        saving: saving,\n        debt: debt,\n        investment: investment,\n        overall: overall\n      };\n      history.push(user2);\n    } // dispatch.storeHistory(history)\n\n  }, []);\n\n  const handleTypeFilter = event => {\n    props.setTypeView(event.target.id);\n  };\n\n  const {\n    promiseInProgress\n  } = usePromiseTracker(); // will return t or f. tracking promise in app useEffect \n\n  return promiseInProgress ? /*#__PURE__*/React.createElement(PreLoader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }) : props.accounts.length ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    id: \"depository\",\n    onClick: handleTypeFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, \" liquid funds \"), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"investment\",\n    onClick: handleTypeFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \" investments \"), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"debt\",\n    onClick: handleTypeFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \" debt \"), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"overall\",\n    onClick: handleTypeFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \" overall \"), /*#__PURE__*/React.createElement(LineChart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(AdjustTrends, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(NoAccounts, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  });\n};\n\nconst mapStateToProps = state => {\n  return {\n    accounts: state.linkReducer.accounts\n  };\n};\n\nconst mapDispacthToProps = dispatch => {\n  return {\n    setTypeView: filter => dispatch({\n      type: \"setTypeView\",\n      filter: filter\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispacthToProps)(Trends);","map":{"version":3,"sources":["/Users/flatironstudent/Desktop/moneys/frontend/src/containers/Trends.js"],"names":["React","useEffect","LineChart","connect","NoAccounts","AdjustTrends","usePromiseTracker","PreLoader","Trends","props","history","account","users","saving","debt","investment","overall","i","savingSeed","length","push","user1","user2","handleTypeFilter","event","setTypeView","target","id","promiseInProgress","accounts","mapStateToProps","state","linkReducer","mapDispacthToProps","dispatch","filter","type"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\"\nimport LineChart from '../components/LineChart'\nimport { connect } from 'react-redux'\nimport NoAccounts from \"../components/NoAccounts\"\nimport AdjustTrends from \"../components/AdjustTrends\"\nimport { usePromiseTracker } from \"react-promise-tracker\";\nimport PreLoader from \"../components/PreLoader\"\n\nconst Trends = (props) => {\n  useEffect(()=>{\n    let history = []\n    if (props.account.users[0]){ // for one user\n    let saving = []\n    let debt = []\n    let investment = []\n    let overall = []\n    for (let i = 0; i < savingSeed.length; i++){\n      overall.push( saving[i] + investment[i] - debt[i] )\n    }\n    let user1 = {saving: saving, debt: debt, investment: investment, overall: overall}\n    history.push(user1)\n  } \n  if (props.account.users[1]){ // for second user\n    let saving = []\n    let debt = []\n    let investment = []\n    let overall = []\n    for (let i = 0; i < savingSeed.length; i++){\n      overall.push( saving[i] + investment[i] - debt[i] )\n    }\n    let user2 = {saving: saving, debt: debt, investment: investment, overall: overall}\n    history.push(user2)\n  } \n    // dispatch.storeHistory(history)\n  }, [])\n\n  const handleTypeFilter = (event) => {\n    props.setTypeView(event.target.id)\n  }\n  const { promiseInProgress } = usePromiseTracker(); // will return t or f. tracking promise in app useEffect \n\n  return (\n    promiseInProgress\n    ? <PreLoader />\n    : props.accounts.length \n      ? <div> \n          <button id=\"depository\" onClick={handleTypeFilter}> liquid funds </button>\n          <button id=\"investment\" onClick={handleTypeFilter}> investments </button>\n          <button id=\"debt\" onClick={handleTypeFilter}> debt </button>\n          <button id=\"overall\" onClick={handleTypeFilter}> overall </button>\n          <LineChart />\n          <AdjustTrends />\n        </div>\n      : <NoAccounts />\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    accounts: state.linkReducer.accounts\n  }\n}\n\nconst mapDispacthToProps = (dispatch) => {\n  return {\n    setTypeView: ((filter) => dispatch({type: \"setTypeView\", filter: filter})),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispacthToProps)(Trends)\n\n\n\n"]},"metadata":{},"sourceType":"module"}