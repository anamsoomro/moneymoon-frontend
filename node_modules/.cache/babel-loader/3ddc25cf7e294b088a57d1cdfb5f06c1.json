{"ast":null,"code":"var _jsxFileName = \"/Users/flatironstudent/Desktop/moneys/frontend/src/containers/Trends.js\";\nimport React, { useEffect } from \"react\";\nimport LineChart from '../components/LineChart';\nimport { connect } from 'react-redux';\nimport NoAccounts from \"../components/NoAccounts\";\nimport AdjustTrends from \"../components/AdjustTrends\";\nimport { usePromiseTracker } from \"react-promise-tracker\";\nimport PreLoader from \"../components/PreLoader\";\n\nconst Trends = props => {\n  useEffect(() => {\n    console.log(\"useEffect\");\n    let user1 = null;\n    let user2 = null; // if (props.account.users[0]){ // for one user\n    //   let u1Saving = [2000, 2200, 2400, 2600, 2600, 2650]\n    //   let u1Debt = [10000, 9500, 9000, 8500, 8000, 7500] \n    //   let u1Investment = [4000, 4100, 3900, 3700, 3750, 3800] \n    //   let u1Overall = []\n    //   for (let i = 0; i < u1Saving.length; i++){\n    //     u1Overall.push( u1Saving[i] + u1Investment[i] - u1Debt[i] )\n    //   }\n    //   user1 = {\n    //     saving: u1Saving, \n    //     debt: u1Debt, \n    //     investment: u1Investment, \n    //     overall: u1Overall,\n    //     mSaving: (u1Saving[5] - u1Saving[0]) / 5,\n    //     mDebt: (u1Debt[5] - u1Debt[0]) / 5,\n    //     mInvestment: (u1Investment[5] - u1Investment[0]) / 5,\n    //     mOverall: (u1Overall[5] - u1Overall[0]) / 5,\n    //   }\n    // } \n\n    if (props.account.users[1]) {\n      // for second user\n      let u2Saving = [2000, 2200, 2400, 2600, 2600, 2650];\n      let u2Debt = [10000, 9500, 9000, 8500, 8000, 7500];\n      let u2Investment = [4000, 4100, 3900, 3700, 3750, 3800];\n      let u2Overall = [];\n\n      for (let i = 0; i < u2Saving.length; i++) {\n        u2Overall.push(u2Saving[i] + u2Investment[i] - u2Debt[i]);\n      }\n\n      user2 = {\n        saving: u2Saving,\n        debt: u2Debt,\n        investment: u2Investment,\n        overall: u2Overall,\n        mSaving: (u2Saving[5] - u2Saving[0]) / 5,\n        mDebt: (u2Debt[5] - u2Debt[0]) / 5,\n        mInvestment: (u2Investment[5] - u2Investment[0]) / 5,\n        mOverall: (u2Overall[5] - u2Overall[0]) / 5\n      };\n    } // props.storeHistory(user1, user2)  // in trendReducer, set data\n    // props.handleTrendDisplay(props.userView) // in trendReducer, set display \n\n  }, [props.account]); // this should update if users get added\n\n  const handleTypeFilter = event => {\n    props.setTypeView(event.target.id);\n  };\n\n  const {\n    promiseInProgress\n  } = usePromiseTracker();\n  return promiseInProgress ? /*#__PURE__*/React.createElement(PreLoader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }) : props.accounts.length ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    id: \"depository\",\n    onClick: handleTypeFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, \" liquid funds \"), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"investment\",\n    onClick: handleTypeFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, \" investments \"), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"debt\",\n    onClick: handleTypeFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, \" debt \"), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"overall\",\n    onClick: handleTypeFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \" overall \"), /*#__PURE__*/React.createElement(LineChart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(AdjustTrends, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(NoAccounts, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  });\n};\n\nconst mapStateToProps = state => {\n  return {\n    accounts: state.linkReducer.accounts,\n    account: state.authReducer.account,\n    userView: state.linkReducer.userView\n  };\n};\n\nconst mapDispacthToProps = dispatch => {\n  return {\n    setTypeView: filter => dispatch({\n      type: \"setTypeView\",\n      filter: filter\n    }),\n    storeHistory: (user1, user2) => dispatch({\n      type: \"storeHistory\",\n      user1: user1,\n      user2: user2\n    }),\n    handleTrendDisplay: userView => dispatch({\n      type: \"handleTrendDisplay\",\n      userView: userView\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispacthToProps)(Trends);","map":{"version":3,"sources":["/Users/flatironstudent/Desktop/moneys/frontend/src/containers/Trends.js"],"names":["React","useEffect","LineChart","connect","NoAccounts","AdjustTrends","usePromiseTracker","PreLoader","Trends","props","console","log","user1","user2","account","users","u2Saving","u2Debt","u2Investment","u2Overall","i","length","push","saving","debt","investment","overall","mSaving","mDebt","mInvestment","mOverall","handleTypeFilter","event","setTypeView","target","id","promiseInProgress","accounts","mapStateToProps","state","linkReducer","authReducer","userView","mapDispacthToProps","dispatch","filter","type","storeHistory","handleTrendDisplay"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\"\nimport LineChart from '../components/LineChart'\nimport { connect } from 'react-redux'\nimport NoAccounts from \"../components/NoAccounts\"\nimport AdjustTrends from \"../components/AdjustTrends\"\nimport { usePromiseTracker } from \"react-promise-tracker\";\nimport PreLoader from \"../components/PreLoader\"\n\nconst Trends = (props) => {\n  useEffect(()=>{\n    console.log(\"useEffect\")\n    let user1 = null\n    let user2 = null\n    // if (props.account.users[0]){ // for one user\n    //   let u1Saving = [2000, 2200, 2400, 2600, 2600, 2650]\n    //   let u1Debt = [10000, 9500, 9000, 8500, 8000, 7500] \n    //   let u1Investment = [4000, 4100, 3900, 3700, 3750, 3800] \n    //   let u1Overall = []\n    //   for (let i = 0; i < u1Saving.length; i++){\n    //     u1Overall.push( u1Saving[i] + u1Investment[i] - u1Debt[i] )\n    //   }\n    //   user1 = {\n    //     saving: u1Saving, \n    //     debt: u1Debt, \n    //     investment: u1Investment, \n    //     overall: u1Overall,\n    //     mSaving: (u1Saving[5] - u1Saving[0]) / 5,\n    //     mDebt: (u1Debt[5] - u1Debt[0]) / 5,\n    //     mInvestment: (u1Investment[5] - u1Investment[0]) / 5,\n    //     mOverall: (u1Overall[5] - u1Overall[0]) / 5,\n    //   }\n    // } \n    if (props.account.users[1]){ // for second user\n      let u2Saving = [2000, 2200, 2400, 2600, 2600, 2650]\n      let u2Debt = [10000, 9500, 9000, 8500, 8000, 7500] \n      let u2Investment = [4000, 4100, 3900, 3700, 3750, 3800] \n      let u2Overall = []\n      for (let i = 0; i < u2Saving.length; i++){\n        u2Overall.push( u2Saving[i] + u2Investment[i] - u2Debt[i] )\n      }\n      user2 = {\n        saving: u2Saving, \n        debt: u2Debt, \n        investment: u2Investment, \n        overall: u2Overall,\n        mSaving: (u2Saving[5] - u2Saving[0]) / 5,\n        mDebt: (u2Debt[5] - u2Debt[0]) / 5,\n        mInvestment: (u2Investment[5] - u2Investment[0]) / 5,\n        mOverall: (u2Overall[5] - u2Overall[0]) / 5,\n      }\n    } \n    // props.storeHistory(user1, user2)  // in trendReducer, set data\n    // props.handleTrendDisplay(props.userView) // in trendReducer, set display \n  }, [props.account]) // this should update if users get added\n\n  const handleTypeFilter = (event) => {\n    props.setTypeView(event.target.id)\n  }\n  const { promiseInProgress } = usePromiseTracker()\n\n  return (\n    promiseInProgress\n    ? <PreLoader />\n    : props.accounts.length \n      ? <div> \n          <button id=\"depository\" onClick={handleTypeFilter}> liquid funds </button>\n          <button id=\"investment\" onClick={handleTypeFilter}> investments </button>\n          <button id=\"debt\" onClick={handleTypeFilter}> debt </button>\n          <button id=\"overall\" onClick={handleTypeFilter}> overall </button>\n          <LineChart />\n          <AdjustTrends />\n        </div>\n      : <NoAccounts />\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    accounts: state.linkReducer.accounts,\n    account: state.authReducer.account,\n    userView: state.linkReducer.userView\n\n  }\n}\n\nconst mapDispacthToProps = (dispatch) => {\n  return {\n    setTypeView: ((filter) => dispatch({type: \"setTypeView\", filter: filter})),\n    storeHistory: (user1, user2) => dispatch({type: \"storeHistory\", user1: user1, user2: user2}),\n    handleTrendDisplay: (userView) => dispatch({type: \"handleTrendDisplay\", userView: userView})\n  }\n}\n\nexport default connect(mapStateToProps, mapDispacthToProps)(Trends)\n\n\n\n"]},"metadata":{},"sourceType":"module"}