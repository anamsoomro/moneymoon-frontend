{"ast":null,"code":"var _jsxFileName = \"/Users/flatironstudent/Desktop/moneys/frontend/src/containers/Settings.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from 'react-redux';\n\nconst Settings = props => {\n  useEffect(() => {\n    fetch(\"someroutetogettheir items\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.token}`\n      },\n      body: JSON.stringify({\n        account_id: props.account.id\n      })\n    }).then(resp => resp.json()).then(plaidItems => {\n      console.log(plaidItems);\n    });\n  }, []);\n\n  const showUser = user => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, \"user.username\"), showAccounts(user));\n  };\n\n  const showAccounts = user => {\n    console.log(\"accounts\", props.accounts);\n\n    if (!props.accounts.length) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 14\n        }\n      }, \" no accounts linked \");\n    } else {\n      //  I need all their plaid items. \n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 14\n        }\n      }, \" show accounts\");\n    }\n  };\n\n  console.log(props);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Here show users and their accounts\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"option to delete users\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"option to delete institutions\"), props.users.map(user => user ? showUser(user) : null));\n};\n\nconst mapStateToProps = state => {\n  return {\n    users: state.authReducer.account.users,\n    accounts: state.linkReducer.accounts\n  };\n};\n\nconst mapDispacthToProps = dispatch => {\n  return {\n    dispatch\n  };\n};\n\nexport default connect(mapStateToProps, mapDispacthToProps)(Settings);","map":{"version":3,"sources":["/Users/flatironstudent/Desktop/moneys/frontend/src/containers/Settings.js"],"names":["React","useEffect","connect","Settings","props","fetch","method","headers","Authorization","localStorage","token","body","JSON","stringify","account_id","account","id","then","resp","json","plaidItems","console","log","showUser","user","showAccounts","accounts","length","users","map","mapStateToProps","state","authReducer","linkReducer","mapDispacthToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAE1BH,EAAAA,SAAS,CAAE,MAAM;AACfI,IAAAA,KAAK,CAAC,2BAAD,EAA6B;AAChCC,MAAAA,MAAM,EAAE,KADwB;AAEhCC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAELC,QAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,KAAM;AAFvC,OAFuB;AAMhCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,UAAU,EAAEV,KAAK,CAACW,OAAN,CAAcC;AADP,OAAf;AAN0B,KAA7B,CAAL,CAUCC,IAVD,CAUMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAVd,EAWCF,IAXD,CAWMG,UAAU,IAAI;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACD,KAbD;AAcD,GAfQ,EAeN,EAfM,CAAT;;AAiBA,QAAMG,QAAQ,GAAIC,IAAD,IAAU;AACzB,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEGC,YAAY,CAACD,IAAD,CAFf,CADF;AAMD,GAPD;;AASA,QAAMC,YAAY,GAAID,IAAD,IAAU;AAC7BH,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBlB,KAAK,CAACsB,QAA9B;;AACA,QAAI,CAACtB,KAAK,CAACsB,QAAN,CAAeC,MAApB,EAA2B;AACzB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAP;AACF,KAFA,MAEM;AACN;AACE,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAP;AACF;AACD,GARD;;AAUAN,EAAAA,OAAO,CAACC,GAAR,CAAYlB,KAAZ;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAHF,EAIGA,KAAK,CAACwB,KAAN,CAAYC,GAAZ,CAAgBL,IAAI,IAAIA,IAAI,GAAGD,QAAQ,CAACC,IAAD,CAAX,GAAoB,IAAhD,CAJH,CADF;AAQD,CA/CD;;AAiDA,MAAMM,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLH,IAAAA,KAAK,EAAGG,KAAK,CAACC,WAAN,CAAkBjB,OAAlB,CAA0Ba,KAD7B;AAELF,IAAAA,QAAQ,EAAEK,KAAK,CAACE,WAAN,CAAkBP;AAFvB,GAAP;AAID,CALD;;AAOA,MAAMQ,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLA,IAAAA;AADK,GAAP;AAGD,CAJD;;AAMA,eAAejC,OAAO,CAAC4B,eAAD,EAAkBI,kBAAlB,CAAP,CAA6C/B,QAA7C,CAAf","sourcesContent":["import React, { useEffect } from \"react\"\nimport { connect } from 'react-redux'\n\nconst Settings = (props) => {\n\n  useEffect( () => {\n    fetch(\"someroutetogettheir items\",{\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.token}`\n      },\n      body: JSON.stringify({\n        account_id: props.account.id\n      })\n    })\n    .then(resp => resp.json())\n    .then(plaidItems => {\n      console.log(plaidItems)\n    })\n  }, [])\n\n  const showUser = (user) => {\n    return (\n      <div>\n        <h1>user.username</h1>\n        {showAccounts(user)}\n      </div>\n    )\n  }\n\n  const showAccounts = (user) => {\n    console.log(\"accounts\", props.accounts)\n    if (!props.accounts.length){\n      return <p> no accounts linked </p>\n   } else {\n    //  I need all their plaid items. \n      return <p> show accounts</p>\n   }\n  }\n\n  console.log(props)\n  return (\n    <div>\n      <h3>Here show users and their accounts</h3>\n      <h3>option to delete users</h3>\n      <h3>option to delete institutions</h3>\n      {props.users.map(user => user ? showUser(user) : null )}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    users : state.authReducer.account.users,\n    accounts: state.linkReducer.accounts\n  }\n}\n\nconst mapDispacthToProps = (dispatch) => {\n  return {\n    dispatch\n  }\n}\n\nexport default connect(mapStateToProps, mapDispacthToProps)(Settings)\n\n\n\n"]},"metadata":{},"sourceType":"module"}