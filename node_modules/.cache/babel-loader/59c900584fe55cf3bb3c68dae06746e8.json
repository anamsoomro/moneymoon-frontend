{"ast":null,"code":"var _jsxFileName = \"/Users/flatironstudent/Desktop/moneys/frontend/src/components/ToggleMonth.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport { trackPromise } from 'react-promise-tracker';\n\nconst ToggleMonth = props => {\n  let today = new Date();\n  let month = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n  const getMonthTrans = event => {\n    props.setMonthView(event.target.value);\n    trackPromise(fetch(\"http://localhost:3000/month_transactions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.token}`\n      },\n      body: JSON.stringify({\n        // month: event.target.value,\n        month: event.target.id,\n        account_id: props.account_id\n      })\n    }).then(resp => resp.json()).then(transactions => {\n      transactions = transactions.map(tran => {\n        let account = props.accounts.filter(acc => acc.account_id === tran.account_id);\n        return { ...tran,\n          account_name: account[0].name\n        };\n      });\n      props.storeMonth(transactions);\n      props.handleDisplay();\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"btn-group dropright\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    class: \"btn btn-secondary dropdown-toggle\",\n    \"data-toggle\": \"dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, month[props.monthView - 1]), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"dropdown-menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"dropdown-item\",\n    id: today.getMonth() + 1,\n    onClick: getMonthTrans,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, month[today.getMonth() + 1 - 1]), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"dropdown-divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"dropdown-item\",\n    id: today.getMonth() + 1 - 1,\n    onClick: getMonthTrans,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, month[today.getMonth() + 1 - 2]), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"dropdown-divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"dropdown-item\",\n    id: today.getMonth() + 1 - 2,\n    onClick: getMonthTrans,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, month[today.getMonth() + 1 - 3]), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"dropdown-divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"dropdown-item\",\n    id: today.getMonth() + 1 - 3,\n    onClick: getMonthTrans,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, month[today.getMonth() + 1 - 4]))), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"month\",\n    name: \"asdfasd\",\n    style: {\n      display: \"block\"\n    },\n    onChange: getMonthTrans,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: today.getMonth() + 1 - 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \" \", month[today.getMonth() + 1 - 3], \" \"), /*#__PURE__*/React.createElement(\"option\", {\n    value: today.getMonth() + 1 - 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \" \", month[today.getMonth() + 1 - 4], \" \"), /*#__PURE__*/React.createElement(\"option\", {\n    value: today.getMonth() + 1 - 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \" \", month[today.getMonth() + 1 - 5], \" \")));\n};\n\nconst mapStateToProps = state => {\n  return {\n    accounts: state.linkReducer.accounts,\n    account_id: state.authReducer.account.id,\n    monthView: state.linkReducer.monthView\n  };\n};\n\nconst mapDispacthToProps = dispatch => {\n  return {\n    storeMonth: transactions => dispatch({\n      type: \"storeMonth\",\n      transactions: transactions\n    }),\n    setMonthView: month => dispatch({\n      type: \"setMonthView\",\n      month: month\n    }),\n    handleDisplay: () => dispatch({\n      type: \"handleDisplay\"\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispacthToProps)(ToggleMonth);","map":{"version":3,"sources":["/Users/flatironstudent/Desktop/moneys/frontend/src/components/ToggleMonth.js"],"names":["React","connect","trackPromise","ToggleMonth","props","today","Date","month","getMonthTrans","event","setMonthView","target","value","fetch","method","headers","Authorization","localStorage","token","body","JSON","stringify","id","account_id","then","resp","json","transactions","map","tran","account","accounts","filter","acc","account_name","name","storeMonth","handleDisplay","monthView","getMonth","display","mapStateToProps","state","linkReducer","authReducer","mapDispacthToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport {connect} from 'react-redux'\nimport { trackPromise } from 'react-promise-tracker'\n\n\nconst ToggleMonth = (props) => {\n  let today = new Date\n  let month = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n\n\n  const getMonthTrans = (event) => {\n    props.setMonthView(event.target.value)\n    trackPromise(\n    fetch(\"http://localhost:3000/month_transactions\",{\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.token}`\n      },\n      body: JSON.stringify({\n        // month: event.target.value,\n        month: event.target.id,\n        account_id: props.account_id\n      })\n    })\n    .then( resp => resp.json())\n    .then( transactions => {\n      transactions = transactions.map( tran => {\n        let account = props.accounts.filter( acc=> acc.account_id === tran.account_id )\n        return {...tran, account_name: account[0].name}\n      })\n      props.storeMonth(transactions)\n      props.handleDisplay()\n    })\n    )\n  }\n\n  return (\n    <div>\n    <div class=\"btn-group dropright\">\n      <button type=\"button\" class=\"btn btn-secondary dropdown-toggle\" data-toggle=\"dropdown\">\n        {month[props.monthView - 1]}\n      </button>\n      <div class=\"dropdown-menu\">\n      <div class=\"dropdown-item\" id={today.getMonth() + 1} onClick={getMonthTrans}>{month[today.getMonth() + 1 - 1]}</div>\n        <div class=\"dropdown-divider\"></div>\n      <div class=\"dropdown-item\" id={today.getMonth() + 1 - 1} onClick={getMonthTrans}>{month[today.getMonth() + 1 - 2]}</div>\n        <div class=\"dropdown-divider\"></div>\n      <div class=\"dropdown-item\" id={today.getMonth() + 1 - 2} onClick={getMonthTrans}>{month[today.getMonth() + 1 - 3]}</div>\n        <div class=\"dropdown-divider\"></div>\n      <div class=\"dropdown-item\" id={today.getMonth() + 1 - 3} onClick={getMonthTrans}>{month[today.getMonth() + 1 - 4]}</div>\n      </div>\n    </div>\n\n\n    <select id=\"month\" name=\"asdfasd\" style={{display: \"block\"}} onChange={getMonthTrans}> \n      {/* <option value={today.getMonth() + 1}> {month[today.getMonth() - 1]} </option> */}\n      {/* <option value={today.getMonth() + 1 - 1}> {month[today.getMonth() + 1 - 2]}  </option> */}\n      <option value={today.getMonth() + 1 - 2}> {month[today.getMonth() + 1 - 3]} </option>\n      <option value={today.getMonth() + 1 - 3}> {month[today.getMonth() + 1 - 4]} </option>\n      <option value={today.getMonth() + 1 - 4}> {month[today.getMonth() + 1 - 5]} </option>\n    </select>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    accounts: state.linkReducer.accounts,\n    account_id: state.authReducer.account.id,\n    monthView: state.linkReducer.monthView\n  }\n}\n\nconst mapDispacthToProps = (dispatch) => {\n  return {\n    storeMonth: ((transactions) => dispatch({type:\"storeMonth\", transactions: transactions})),\n    setMonthView: ((month)=>dispatch({type: \"setMonthView\", month: month})),\n    handleDisplay: () => dispatch({type: \"handleDisplay\"})\n  }\n}\n\nexport default connect(mapStateToProps, mapDispacthToProps)(ToggleMonth);\n\n\n"]},"metadata":{},"sourceType":"module"}