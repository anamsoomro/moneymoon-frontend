{"ast":null,"code":"var _jsxFileName = \"/Users/flatironstudent/Desktop/moneys/frontend/src/components/ToggleMonth.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\n\nconst ToggleMonth = props => {\n  const getMonthTrans = event => {\n    props.setMonthView(event.target.value);\n    fetch(\"http://localhost:3000/month_transactions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.token}`\n      },\n      body: JSON.stringify({\n        month: event.target.value,\n        account_id: props.account_id\n      })\n    }).then(resp => resp.json()).then(transactions => {\n      let allTransactions = transactions[0]; // figure out why this comes back twice\n\n      allTransactions = allTransactions.map(tran => {\n        let account = props.accounts.filter(acc => acc.account_id === tran.account_id);\n        return { ...tran,\n          account_name: account[0].name\n        };\n      });\n      props.storeMonth(allTransactions);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"select\", {\n    id: \"month\",\n    name: \"asdfasd\",\n    style: {\n      display: \"block\"\n    },\n    onChange: getMonthTrans,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \" Current Month \"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \" April  \"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \" March \"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \" February \"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \" January \"));\n};\n\nconst mapStateToProps = state => {\n  return {\n    accounts: state.linkReducer.accounts,\n    account_id: state.authReducer.account.id,\n    accounts: state.linkReducer.accounts\n  };\n};\n\nconst mapDispacthToProps = dispatch => {\n  return {\n    storeMonth: transactions => dispatch({\n      type: \"storeMonth\",\n      transactions: transactions\n    }),\n    setMonthView: month => dispatch({\n      type: \"setMonthView\"\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispacthToProps)(ToggleMonth);","map":{"version":3,"sources":["/Users/flatironstudent/Desktop/moneys/frontend/src/components/ToggleMonth.js"],"names":["React","connect","ToggleMonth","props","getMonthTrans","event","setMonthView","target","value","fetch","method","headers","Authorization","localStorage","token","body","JSON","stringify","month","account_id","then","resp","json","transactions","allTransactions","map","tran","account","accounts","filter","acc","account_name","name","storeMonth","display","mapStateToProps","state","linkReducer","authReducer","id","mapDispacthToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport {connect} from 'react-redux'\n\nconst ToggleMonth = (props) => {\n\n  const getMonthTrans = (event) => {\n    props.setMonthView(event.target.value)\n    fetch(\"http://localhost:3000/month_transactions\",{\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.token}`\n      },\n      body: JSON.stringify({\n        month: event.target.value,\n        account_id: props.account_id\n      })\n    })\n    .then( resp => resp.json())\n    .then( transactions => {\n      let allTransactions = transactions[0] // figure out why this comes back twice\n      allTransactions = allTransactions.map( tran => {\n        let account = props.accounts.filter( acc=> acc.account_id === tran.account_id )\n        return {...tran, account_name: account[0].name}\n      })\n      props.storeMonth(allTransactions)\n    })\n  }\n\n  return (\n    <select id=\"month\" name=\"asdfasd\" style={{display: \"block\"}} onChange={getMonthTrans}> \n      <option value={5}> Current Month </option>\n      <option value={4}> April  </option>\n      <option value={3}> March </option>\n      <option value={2}> February </option>\n      <option value={1}> January </option>\n    </select>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    accounts: state.linkReducer.accounts,\n    account_id: state.authReducer.account.id,\n    accounts: state.linkReducer.accounts\n  }\n}\n\nconst mapDispacthToProps = (dispatch) => {\n  return {\n    storeMonth: ((transactions) => dispatch({type:\"storeMonth\", transactions: transactions})),\n    setMonthView: ((month)=>dispatch({type: \"setMonthView\"}))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispacthToProps)(ToggleMonth);\n\n\n"]},"metadata":{},"sourceType":"module"}