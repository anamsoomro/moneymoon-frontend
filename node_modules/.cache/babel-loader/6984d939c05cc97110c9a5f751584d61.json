{"ast":null,"code":"var _jsxFileName = \"/Users/flatironstudent/Desktop/moneys/frontend/src/components/MonthPie.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport { Pie } from 'react-chartjs-2';\n\nconst MonthPie = props => {\n  // i just want to pass it different props \n  let today = new Date();\n  let month = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  let currentMonth = month[today.getMonth()];\n  let eachCategory = props.transactions.map(transaction => transaction.category[0]);\n  let distinctCategories = [...new Set(eachCategory)];\n  let amounts = distinctCategories.map(category => props.transactions.reduce((acc, i) => {\n    if (i.category[0] === category) {\n      return acc + i.amount;\n    } else {\n      return acc;\n    }\n  }, 0));\n  const piedata = {\n    labels: distinctCategories,\n    datasets: [{\n      label: 'out',\n      backgroundColor: ['#d8ea7c', '#93172a', '#2f00a8', '#3cef07', '#97d817', '#5aefcf', '#af09fd', '#751b74', '#3e6764', '#631a7c', '#af5e55', '#c2443d'],\n      data: amounts,\n      borderWidth: 0\n    }]\n  };\n  const pieoptions = {\n    title: {\n      display: true,\n      text: currentMonth,\n      fontSize: 20\n    },\n    legend: {\n      display: true,\n      position: 'right'\n    },\n    rotation: 1 * Math.PI,\n    circumference: 2 * Math.PI,\n    maintainAspectRatio: false\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      \"float\": \"bottom\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Pie, {\n    data: piedata,\n    options: pieoptions,\n    width: 200,\n    height: 300,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    transactions: state.linkReducer.monthTransactions\n  };\n};\n\nconst mapDispacthToProps = dispatch => {\n  return {\n    dispatch\n  };\n};\n\nexport default connect(mapStateToProps, mapDispacthToProps)(MonthPie);","map":{"version":3,"sources":["/Users/flatironstudent/Desktop/moneys/frontend/src/components/MonthPie.js"],"names":["React","connect","Pie","MonthPie","props","today","Date","month","currentMonth","getMonth","eachCategory","transactions","map","transaction","category","distinctCategories","Set","amounts","reduce","acc","i","amount","piedata","labels","datasets","label","backgroundColor","data","borderWidth","pieoptions","title","display","text","fontSize","legend","position","rotation","Math","PI","circumference","maintainAspectRatio","mapStateToProps","state","linkReducer","monthTransactions","mapDispacthToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { connect } from 'react-redux'\nimport { Pie } from 'react-chartjs-2'\n\nconst MonthPie = (props) => { // i just want to pass it different props \n  let today = new Date\n  let month = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n  let currentMonth = month[today.getMonth()]\n\n  let eachCategory = props.transactions.map(transaction => transaction.category[0])\n  let distinctCategories = [...new Set(eachCategory)]\n  let amounts = distinctCategories.map(category => \n    props.transactions.reduce((acc, i) => {\n      if(i.category[0] === category){\n        return (acc + i.amount)\n      } else { \n        return acc\n      }\n    }, 0)\n  )\n\n  const piedata = {\n    labels: distinctCategories,\n    datasets: [\n      {\n        label: 'out',\n        backgroundColor: ['#d8ea7c', '#93172a', '#2f00a8', '#3cef07', '#97d817', '#5aefcf', '#af09fd', '#751b74', '#3e6764', '#631a7c', '#af5e55', '#c2443d'],\n        data: amounts,\n        borderWidth: 0\n      },\n    ]\n  }\n\n  const pieoptions = {\n    title:{\n      display:true,\n      text: currentMonth,\n      fontSize:20\n    },\n    legend:{\n      display:true,\n      position:'right'\n    },\n    rotation: 1 * Math.PI, \n    circumference: 2 * Math.PI ,\n    maintainAspectRatio: false\n  }\n\n  return (\n      <div style={{\"float\": \"bottom\"}}>\n        <Pie data={piedata} options={pieoptions} width={200} height={300} />\n      </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    transactions: state.linkReducer.monthTransactions\n  }\n}\n\nconst mapDispacthToProps = (dispatch) => {\n  return {\n    dispatch\n  }\n}\n\nexport default connect(mapStateToProps, mapDispacthToProps)(MonthPie)"]},"metadata":{},"sourceType":"module"}