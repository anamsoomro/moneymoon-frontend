{"ast":null,"code":"var _jsxFileName = \"/Users/flatironstudent/Desktop/moneys/frontend/src/components/Link.js\";\nimport React, { Component } from \"react\";\nimport { PlaidLink, usePlaidLink } from \"react-plaid-link\";\nimport { connect } from 'react-redux';\n\nclass Link extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleOnSuccess = (public_token, metadata) => {\n      fetch(\"http://localhost:3000/get_access_token\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.token}`\n        },\n        body: JSON.stringify({\n          public_token: public_token,\n          // user_id: this.props.user_id \n          user_id: localStorage.user_id\n        })\n      }).then(resp => resp.json()).then(data => {\n        console.log(\"sweet now you got a access token and some data\");\n\n        if (data.error) {\n          alert(data.error);\n        } else {\n          this.props.addData({\n            transactions: data.transactions,\n            accounts: data.accounts\n          });\n          this.props.handleDisplay();\n        }\n      });\n    };\n  }\n\n  render(props) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(PlaidLink, {\n      clientName: \"front-end\",\n      env: \"sandbox\" // \"development\"\n      ,\n      product: [\"transactions\"] // product={[\"auth\", \"transactions\"]} what ddoes this actually do \n      ,\n      publicKey: \"38e9fa8478f20a384db53c1176e9b7\",\n      onExit: this.handleOnExit,\n      onSuccess: this.handleOnSuccess,\n      className: \"test\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, props.text));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user_id: state.authReducer.user.id\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addData: data => dispatch({\n      type: \"addData\",\n      data: data\n    }),\n    handleDisplay: () => dispatch({\n      type: \"handleDisplay\"\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Link);","map":{"version":3,"sources":["/Users/flatironstudent/Desktop/moneys/frontend/src/components/Link.js"],"names":["React","Component","PlaidLink","usePlaidLink","connect","Link","handleOnSuccess","public_token","metadata","fetch","method","headers","Authorization","localStorage","token","body","JSON","stringify","user_id","then","resp","json","data","console","log","error","alert","props","addData","transactions","accounts","handleDisplay","render","handleOnExit","text","mapStateToProps","state","authReducer","user","id","mapDispatchToProps","dispatch","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAuC,kBAAvC;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AAAA;AAAA;;AAAA,SAE3BK,eAF2B,GAET,CAACC,YAAD,EAAeC,QAAf,KAA4B;AAC5CC,MAAAA,KAAK,CAAC,wCAAD,EAA2C;AAC9CC,QAAAA,MAAM,EAAE,MADsC;AAE9CC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,KAAM;AAFrC,SAFqC;AAM9CC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBV,UAAAA,YAAY,EAAEA,YADK;AAEnB;AACAW,UAAAA,OAAO,EAAEL,YAAY,CAACK;AAHH,SAAf;AANwC,OAA3C,CAAL,CAYCC,IAZD,CAYMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAZd,EAaCF,IAbD,CAaMG,IAAI,IAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAY,gDAAZ;;AACA,YAAIF,IAAI,CAACG,KAAT,EAAe;AACbC,UAAAA,KAAK,CAACJ,IAAI,CAACG,KAAN,CAAL;AACD,SAFD,MAEO;AACL,eAAKE,KAAL,CAAWC,OAAX,CAAmB;AACjBC,YAAAA,YAAY,EAAEP,IAAI,CAACO,YADF;AAEjBC,YAAAA,QAAQ,EAAER,IAAI,CAACQ;AAFE,WAAnB;AAIA,eAAKH,KAAL,CAAWI,aAAX;AACD;AACF,OAxBD;AAyBD,KA5B0B;AAAA;;AAgC3BC,EAAAA,MAAM,CAACL,KAAD,EAAQ;AACZ,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AACE,MAAA,UAAU,EAAC,WADb;AAEE,MAAA,GAAG,EAAC,SAFN,CAEgB;AAFhB;AAGE,MAAA,OAAO,EAAE,CAAC,cAAD,CAHX,CAG6B;AAH7B;AAIE,MAAA,SAAS,EAAC,gCAJZ;AAKE,MAAA,MAAM,EAAE,KAAKM,YALf;AAME,MAAA,SAAS,EAAE,KAAK3B,eANlB;AAOE,MAAA,SAAS,EAAC,MAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQGqB,KAAK,CAACO,IART,CADF,CADF;AAcD;;AA/C0B;;AAkD7B,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLlB,IAAAA,OAAO,EAAEkB,KAAK,CAACC,WAAN,CAAkBC,IAAlB,CAAuBC;AAD3B,GAAP;AAGD,CAJD;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLb,IAAAA,OAAO,EAAKN,IAAD,IAAUmB,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE,SAAP;AAAkBpB,MAAAA,IAAI,EAAEA;AAAxB,KAAD,CADxB;AAELS,IAAAA,aAAa,EAAI,MAAMU,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAD;AAF1B,GAAP;AAID,CALD;;AAOA,eAAetC,OAAO,CAAC+B,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CnC,IAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { PlaidLink, usePlaidLink }from \"react-plaid-link\";\nimport {connect} from 'react-redux'\n\nclass Link extends Component {\n\n  handleOnSuccess = (public_token, metadata) => {\n    fetch(\"http://localhost:3000/get_access_token\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.token}`\n      },\n      body: JSON.stringify({\n        public_token: public_token,\n        // user_id: this.props.user_id \n        user_id: localStorage.user_id\n      })\n    })\n    .then(resp => resp.json())\n    .then(data => {\n      console.log(\"sweet now you got a access token and some data\")\n      if (data.error){\n        alert(data.error)\n      } else {\n        this.props.addData({ \n          transactions: data.transactions, \n          accounts: data.accounts\n        })\n        this.props.handleDisplay()\n      }\n    })\n  }\n\n  \n\n  render(props) {\n    return (\n      <div>\n        <PlaidLink\n          clientName=\"front-end\"\n          env=\"sandbox\" // \"development\"\n          product={[\"transactions\"]} // product={[\"auth\", \"transactions\"]} what ddoes this actually do \n          publicKey=\"38e9fa8478f20a384db53c1176e9b7\"\n          onExit={this.handleOnExit}\n          onSuccess={this.handleOnSuccess}\n          className=\"test\">\n          {props.text}\n        </PlaidLink>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { \n    user_id: state.authReducer.user.id\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addData: ( (data) => dispatch({type: \"addData\", data: data})),\n    handleDisplay: ( () => dispatch({type: \"handleDisplay\"}))\n  }\n} \n\nexport default connect(mapStateToProps, mapDispatchToProps)(Link);\n"]},"metadata":{},"sourceType":"module"}