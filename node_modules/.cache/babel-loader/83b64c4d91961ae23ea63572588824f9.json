{"ast":null,"code":"const initialState = {\n  transactions: [],\n  accounts: [],\n  monthTransactions: []\n};\nexport default function linkReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'storeData':\n      // action.data = {transacton: [{trans}, {trans} ... ]}, accounts: [{acc}, {acc} ...]}\n      return { ...state,\n        transactions: action.data.transactions,\n        transactionsDisplay: action.data.transactions,\n        accounts: action.data.accounts,\n        accountsDisplay: action.data.accounts\n      };\n\n    case 'addData':\n      return { ...state,\n        transactions: [...state.transactions, ...action.data.transactions],\n        transactionsDisplay: [...state.transactions, ...action.data.transactions],\n        accounts: [...state.accounts, ...action.data.accounts],\n        accountsDisplay: [...state.accounts, ...action.data.accounts]\n      };\n\n    case 'storeMonth':\n      return { ...state,\n        monthTransactions: action.transactions.transactions\n      };\n\n    case 'setUserVew':\n      let username;\n\n      switch (action.data.user) {\n        case \"user1\":\n          username = state.accounts.users[0].username;\n          break;\n\n        case 'user2':\n          username = state.accounts.users[1].username;\n          break;\n\n        default:\n          // if it is both, userView is null\n          username = null;\n      }\n\n      let filteredAccounts;\n      let filteredTransactions;\n\n      if (username) {\n        filteredTransactions = state.transactions.filter(transaction => transaction.user.username === username);\n        filteredAccounts = state.accounts.filter(account => account.user.username === username);\n      } // debugger\n\n\n      return { ...state,\n        viewUser: username,\n        transactionsDisplay: filteredTransactions,\n        accountsDisplay: filteredAccounts\n      };\n\n    case \"resetApp\":\n      return initialState;\n\n    default:\n      {\n        return state;\n      }\n  }\n}","map":{"version":3,"sources":["/Users/flatironstudent/Desktop/moneys/frontend/src/reducers/linkReducer.js"],"names":["initialState","transactions","accounts","monthTransactions","linkReducer","state","action","type","data","transactionsDisplay","accountsDisplay","username","user","users","filteredAccounts","filteredTransactions","filter","transaction","account","viewUser"],"mappings":"AACA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,YAAY,EAAE,EADK;AAEnBC,EAAAA,QAAQ,EAAE,EAFS;AAGnBC,EAAAA,iBAAiB,EAAE;AAHA,CAArB;AAMA,eAAe,SAASC,WAAT,CAAqBC,KAAK,GAACL,YAA3B,EAAyCM,MAAzC,EAAgD;AAE7D,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,WAAL;AAAkB;AAChB,aAAM,EACJ,GAAGF,KADC;AAEJJ,QAAAA,YAAY,EAAEK,MAAM,CAACE,IAAP,CAAYP,YAFtB;AAGJQ,QAAAA,mBAAmB,EAAEH,MAAM,CAACE,IAAP,CAAYP,YAH7B;AAIJC,QAAAA,QAAQ,EAAEI,MAAM,CAACE,IAAP,CAAYN,QAJlB;AAKJQ,QAAAA,eAAe,EAAEJ,MAAM,CAACE,IAAP,CAAYN;AALzB,OAAN;;AAOF,SAAK,SAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELJ,QAAAA,YAAY,EAAE,CAAC,GAAGI,KAAK,CAACJ,YAAV,EAAwB,GAAGK,MAAM,CAACE,IAAP,CAAYP,YAAvC,CAFT;AAGLQ,QAAAA,mBAAmB,EAAE,CAAC,GAAGJ,KAAK,CAACJ,YAAV,EAAwB,GAAGK,MAAM,CAACE,IAAP,CAAYP,YAAvC,CAHhB;AAILC,QAAAA,QAAQ,EAAE,CAAC,GAAGG,KAAK,CAACH,QAAV,EAAoB,GAAGI,MAAM,CAACE,IAAP,CAAYN,QAAnC,CAJL;AAKLQ,QAAAA,eAAe,EAAE,CAAC,GAAGL,KAAK,CAACH,QAAV,EAAoB,GAAGI,MAAM,CAACE,IAAP,CAAYN,QAAnC;AALZ,OAAP;;AAOF,SAAK,YAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELF,QAAAA,iBAAiB,EAAEG,MAAM,CAACL,YAAP,CAAoBA;AAFlC,OAAP;;AAIF,SAAK,YAAL;AACE,UAAIU,QAAJ;;AACA,cAAQL,MAAM,CAACE,IAAP,CAAYI,IAApB;AACE,aAAK,OAAL;AACED,UAAAA,QAAQ,GAAGN,KAAK,CAACH,QAAN,CAAeW,KAAf,CAAqB,CAArB,EAAwBF,QAAnC;AACA;;AACF,aAAK,OAAL;AACEA,UAAAA,QAAQ,GAAGN,KAAK,CAACH,QAAN,CAAeW,KAAf,CAAqB,CAArB,EAAwBF,QAAnC;AACA;;AACF;AAAS;AACPA,UAAAA,QAAQ,GAAG,IAAX;AARJ;;AAUA,UAAIG,gBAAJ;AACA,UAAIC,oBAAJ;;AACA,UAAIJ,QAAJ,EAAa;AACXI,QAAAA,oBAAoB,GAAGV,KAAK,CAACJ,YAAN,CAAmBe,MAAnB,CAA2BC,WAAW,IAAIA,WAAW,CAACL,IAAZ,CAAiBD,QAAjB,KAA8BA,QAAxE,CAAvB;AACAG,QAAAA,gBAAgB,GAAGT,KAAK,CAACH,QAAN,CAAec,MAAf,CAAuBE,OAAO,IAAIA,OAAO,CAACN,IAAR,CAAaD,QAAb,KAA0BA,QAA5D,CAAnB;AACD,OAjBH,CAkBE;;;AACA,aAAO,EACL,GAAGN,KADE;AAELc,QAAAA,QAAQ,EAAER,QAFL;AAGLF,QAAAA,mBAAmB,EAAEM,oBAHhB;AAILL,QAAAA,eAAe,EAAEI;AAJZ,OAAP;;AAMF,SAAK,UAAL;AACE,aAAOd,YAAP;;AACF;AAAS;AACP,eAAOK,KAAP;AACD;AAnDH;AAqDD","sourcesContent":["\nconst initialState = {\n  transactions: [],\n  accounts: [],\n  monthTransactions: []\n}\n\nexport default function linkReducer(state=initialState, action){\n\n  switch(action.type){\n    case 'storeData': // action.data = {transacton: [{trans}, {trans} ... ]}, accounts: [{acc}, {acc} ...]}\n      return{\n        ...state,\n        transactions: action.data.transactions,\n        transactionsDisplay: action.data.transactions,\n        accounts: action.data.accounts,\n        accountsDisplay: action.data.accounts,\n      }\n    case 'addData':\n      return {\n        ...state,\n        transactions: [...state.transactions, ...action.data.transactions],\n        transactionsDisplay: [...state.transactions, ...action.data.transactions],\n        accounts: [...state.accounts, ...action.data.accounts],\n        accountsDisplay: [...state.accounts, ...action.data.accounts],\n      }\n    case 'storeMonth':\n      return {\n        ...state,\n        monthTransactions: action.transactions.transactions\n      }\n    case 'setUserVew':\n      let username\n      switch (action.data.user){\n        case \"user1\":\n          username = state.accounts.users[0].username\n          break \n        case 'user2': \n          username = state.accounts.users[1].username\n          break\n        default: // if it is both, userView is null\n          username = null\n      }\n      let filteredAccounts\n      let filteredTransactions\n      if (username){\n        filteredTransactions = state.transactions.filter( transaction => transaction.user.username === username)\n        filteredAccounts = state.accounts.filter( account => account.user.username === username)\n      }\n      // debugger\n      return {\n        ...state,\n        viewUser: username,\n        transactionsDisplay: filteredTransactions,\n        accountsDisplay: filteredAccounts\n      }\n    case \"resetApp\":\n      return initialState;\n    default: {\n      return state\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}