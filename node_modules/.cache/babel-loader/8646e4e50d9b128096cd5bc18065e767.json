{"ast":null,"code":"var _jsxFileName = \"/Users/flatironstudent/Desktop/moneys/frontend/src/components/LineChart.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport { Line } from 'react-chartjs-2';\nimport { useState } from 'react';\n\nconst LineChart = props => {\n  const [display, setDisplay] = useState('');\n  let today = new Date();\n  let month = [\"July\", \"August\", \"September\", \"October\", \"November\", \"December\", \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\", \"January\", \"February\", \"March\", \"April\", \"May\"];\n  let lastSix = month.slice(today.getMonth() + 6 - 6, today.getMonth() + 6);\n  let nextSix = month.slice(today.getMonth() + 6, today.getMonth() + 6 + 6);\n\n  const project = (arr, m) => {\n    let projected = [];\n    let x;\n\n    for (x = 0; x < 7; x++) {\n      projected.push(arr[5] + x * m);\n    }\n\n    return projected;\n  };\n\n  const depository = () => [{\n    label: 'Savings',\n    fill: false,\n    backgroundColor: '#ffc400',\n    borderColor: '#ffc400',\n    borderWidth: 5,\n    hoverRadius: 8,\n    hitRadius: 10,\n    data: props.savings,\n    // on reset not iterable. why is it iterable the first time then \n    lineTension: 0\n  }, {\n    label: 'Savings Projected',\n    borderDash: [10, 5],\n    fill: false,\n    backgroundColor: '#ffc400',\n    borderColor: '#808080',\n    borderWidth: 5,\n    hoverRadius: 8,\n    hitRadius: 10,\n    data: [null, null, null, null, null, ...project(props.savings, props.mSaving)],\n    lineTension: 0\n  }];\n\n  const debt = () => [{\n    label: 'Debt',\n    fill: false,\n    backgroundColor: '#d84315',\n    borderColor: '#d84315',\n    borderWidth: 5,\n    hoverRadius: 8,\n    hitRadius: 10,\n    data: props.debt,\n    lineTension: 0\n  }, {\n    label: 'Debt Projected',\n    borderDash: [10, 5],\n    fill: false,\n    backgroundColor: '#d84315',\n    borderColor: '#808080',\n    borderWidth: 5,\n    hoverRadius: 8,\n    hitRadius: 10,\n    data: [null, null, null, null, null, ...project(props.debt, props.mDebt)],\n    lineTension: 0\n  }];\n\n  const investment = () => [{\n    label: 'Investments',\n    fill: false,\n    backgroundColor: '#0055ff',\n    borderColor: '#0055ff',\n    borderWidth: 5,\n    hoverRadius: 8,\n    hitRadius: 10,\n    data: props.investments,\n    lineTension: 0\n  }, {\n    label: 'Investments Projected',\n    borderDash: [10, 5],\n    fill: false,\n    backgroundColor: '#0055ff',\n    borderColor: '#808080',\n    borderWidth: 5,\n    hoverRadius: 8,\n    hitRadius: 10,\n    data: [null, null, null, null, null, ...project(props.investments, props.mInvestment)],\n    lineTension: 0\n  }];\n\n  const overall = () => [{\n    label: 'Overall',\n    fill: false,\n    backgroundColor: '\t#99cc00',\n    borderColor: '#99cc00',\n    borderWidth: 5,\n    hoverRadius: 8,\n    hitRadius: 10,\n    data: props.overall,\n    lineTension: 0\n  }, {\n    label: 'Overall Projected',\n    borderDash: [10, 5],\n    fill: false,\n    backgroundColor: '#99cc00',\n    borderColor: '#808080',\n    borderWidth: 5,\n    hoverRadius: 8,\n    hitRadius: 10,\n    data: [null, null, null, null, null, ...project(props.overall, props.mOverall)],\n    lineTension: 0\n  }];\n\n  const displayData = () => {\n    switch (props.filter) {\n      case \"depository\":\n        return depository();\n\n      case \"investment\":\n        return investment();\n\n      case \"debt\":\n        return debt();\n\n      case \"overall\":\n        return overall();\n\n      default:\n        return [...depository(), ...investment(), ...debt(), ...overall()];\n    }\n  };\n\n  const data = {\n    labels: [...lastSix, ...nextSix],\n    datasets: displayData()\n  };\n  const options = {\n    title: {\n      display: false,\n      text: \"trends\",\n      fontSize: 20\n    },\n    legend: {\n      display: false,\n      position: 'right'\n    },\n    elements: {\n      point: {\n        radius: 2\n      }\n    },\n    maintainAspectRatio: false\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    data: data,\n    options: options,\n    width: 200,\n    height: 400,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 8\n    }\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    filter: state.linkReducer.typeView,\n    savings: state.trendReducer.display.saving,\n    debt: state.trendReducer.display.debt,\n    investments: state.trendReducer.display.investment,\n    overall: state.trendReducer.display.overall,\n    mSaving: state.trendReducer.display.mSaving,\n    mDebt: state.trendReducer.display.mDebt,\n    mInvestment: state.trendReducer.display.mInvestment,\n    mOverall: state.trendReducer.display.mOverall\n  };\n};\n\nconst mapDispacthToProps = dispatch => {\n  return {\n    dispatch\n  };\n};\n\nexport default connect(mapStateToProps, mapDispacthToProps)(LineChart);","map":{"version":3,"sources":["/Users/flatironstudent/Desktop/moneys/frontend/src/components/LineChart.js"],"names":["React","connect","Line","useState","LineChart","props","display","setDisplay","today","Date","month","lastSix","slice","getMonth","nextSix","project","arr","m","projected","x","push","depository","label","fill","backgroundColor","borderColor","borderWidth","hoverRadius","hitRadius","data","savings","lineTension","borderDash","mSaving","debt","mDebt","investment","investments","mInvestment","overall","mOverall","displayData","filter","labels","datasets","options","title","text","fontSize","legend","position","elements","point","radius","maintainAspectRatio","mapStateToProps","state","linkReducer","typeView","trendReducer","saving","mapDispacthToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { connect } from 'react-redux'\nimport {Line} from 'react-chartjs-2'\nimport {useState} from 'react'\n\n\nconst LineChart = (props) => { \n\n  const[display, setDisplay] = useState('')\n\n\n  let today = new Date\n  let month = [ \"July\", \"August\", \"September\", \"October\", \"November\", \"December\", \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\", \"January\", \"February\", \"March\", \"April\", \"May\"]\n  let lastSix = month.slice( today.getMonth() + 6 - 6 , today.getMonth() + 6)\n  let nextSix = month.slice( today.getMonth() + 6, today.getMonth() + 6 + 6)  \n\n  const project = (arr, m) => {\n    let projected = []\n    let x\n    for (x =0; x < 7; x++) { \n      projected.push(arr[5] + x * m)\n    }\n    return projected\n  }\n\n\n\n  const depository = () =>  [\n    {label: 'Savings',\n     fill: false,\n     backgroundColor: '#ffc400',\n     borderColor: '#ffc400',\n     borderWidth: 5,\n     hoverRadius: 8,\n     hitRadius: 10,\n     data: props.savings, // on reset not iterable. why is it iterable the first time then \n     lineTension: 0}, \n    {label: 'Savings Projected',\n     borderDash: [10,5],\n     fill: false,\n     backgroundColor: '#ffc400',\n     borderColor: '#808080',\n     borderWidth: 5,\n     hoverRadius: 8,\n     hitRadius: 10,\n     data: [null,null,null,null,null, ...project(props.savings, props.mSaving)],\n     lineTension: 0}\n  ]\n  const debt = () => [\n    {label: 'Debt',\n     fill: false,\n     backgroundColor: '#d84315',\n     borderColor: '#d84315',\n     borderWidth: 5,\n     hoverRadius: 8,\n     hitRadius: 10,\n     data: props.debt,\n     lineTension: 0}, \n    {label: 'Debt Projected',\n     borderDash: [10,5],\n     fill: false,\n     backgroundColor: '#d84315',\n     borderColor: '#808080',\n     borderWidth: 5,\n     hoverRadius: 8,\n     hitRadius: 10,\n     data: [null,null,null,null,null, ...project(props.debt, props.mDebt)],\n     lineTension: 0}\n  ]\n  const investment = () => [\n    {label: 'Investments',\n     fill: false,\n     backgroundColor: '#0055ff',\n     borderColor: '#0055ff',\n     borderWidth: 5,\n     hoverRadius: 8,\n     hitRadius: 10,\n     data: props.investments,\n     lineTension: 0}, \n    {label: 'Investments Projected',\n     borderDash: [10,5],\n     fill: false,\n     backgroundColor: '#0055ff',\n     borderColor: '#808080',\n     borderWidth: 5,\n     hoverRadius: 8,\n     hitRadius: 10,\n     data: [null,null,null,null,null, ...project(props.investments, props.mInvestment)],\n     lineTension: 0}\n  ]\n  const overall = () => \n  [\n    {label: 'Overall',\n     fill: false,\n     backgroundColor: '\t#99cc00',\n     borderColor: '#99cc00',\n     borderWidth: 5,\n     hoverRadius: 8,\n     hitRadius: 10,\n     data: props.overall,\n     lineTension: 0}, \n    {label: 'Overall Projected',\n    borderDash: [10,5],\n     fill: false,\n     backgroundColor: '#99cc00',\n     borderColor: '#808080',\n     borderWidth: 5,\n     hoverRadius: 8,\n     hitRadius: 10,\n     data: [null,null,null,null,null, ...project(props.overall, props.mOverall)],\n     lineTension: 0}\n  ]\n\n  const displayData = () => {\n    switch(props.filter){\n      case \"depository\":\n        return depository()\n      case \"investment\":\n        return investment()\n      case \"debt\":\n        return debt()\n      case \"overall\":\n        return overall()\n      default: \n        return [...depository(), ...investment(), ...debt(), ...overall()]\n    }\n  }\n\n  const data = {\n    labels: [...lastSix, ...nextSix],\n    datasets: displayData()\n  }\n\n  const options = {\n    title:{\n      display:false,\n      text: \"trends\",\n      fontSize:20\n    },\n    legend:{\n      display:false,\n      position:'right'\n    },\n    elements: {\n      point:{radius: 2},\n    },\n    maintainAspectRatio: false\n  }\n  return (\n    <div>\n       <Line data={data} options={options} width={200} height={400} /> \n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    filter: state.linkReducer.typeView,\n\n    savings: state.trendReducer.display.saving,\n    debt: state.trendReducer.display.debt,\n    investments: state.trendReducer.display.investment,\n    overall: state.trendReducer.display.overall, \n\n    mSaving: state.trendReducer.display.mSaving,\n    mDebt: state.trendReducer.display.mDebt,\n    mInvestment: state.trendReducer.display.mInvestment,\n    mOverall: state.trendReducer.display.mOverall\n\n  }\n}\n\nconst mapDispacthToProps = (dispatch) => {\n  return {\n    dispatch\n  }\n}\n\nexport default connect(mapStateToProps, mapDispacthToProps)(LineChart)\n\n\n\n"]},"metadata":{},"sourceType":"module"}