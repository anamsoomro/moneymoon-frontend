{"ast":null,"code":"var _jsxFileName = \"/Users/flatironstudent/Desktop/moneys/frontend/src/components/LineChart.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport { Line } from 'react-chartjs-2';\n\nconst LineChart = props => {\n  // i just want to pass it different props \n  let today = new Date(); // let month = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n\n  let month = [\"July\", \"August\", \"September\", \"October\", \"November\", \"December\", \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\", \"January\", \"February\", \"March\", \"April\", \"May\"];\n  let lastSix = month.slice(today.getMonth() + 6 - 6, today.getMonth() + 6);\n  let nextSix = month.slice(today.getMonth() + 6, today.getMonth() + 6 + 6);\n  const data = {\n    // labels: ['January', 'February', 'March', 'April', 'May'],\n    labels: [...lastSix, ...nextSix],\n    datasets: [{\n      label: 'Savings',\n      fill: false,\n      lineTension: 0.5,\n      backgroundColor: 'rgb(51, 153, 102)',\n      borderColor: 'rgb(51, 153, 102)',\n      borderWidth: 2,\n      data: [65, 59, 80, 81, 56]\n    }, {\n      label: 'Debt',\n      fill: false,\n      lineTension: 0.5,\n      backgroundColor: 'rgb(102, 153, 255)',\n      borderColor: 'rgb(102, 153, 255)',\n      borderWidth: 2,\n      data: [67, 64, 62, 60, 58]\n    }, {\n      label: 'Investments',\n      fill: false,\n      lineTension: 0.5,\n      backgroundColor: 'rgb(230, 184, 0)',\n      borderColor: 'rgb(230, 184, 0)',\n      borderWidth: 2,\n      data: [12, 15, 17, 12, 12]\n    }]\n  };\n  const options = {\n    title: {\n      display: true,\n      text: \"trends\",\n      fontSize: 20\n    },\n    legend: {\n      display: true,\n      position: 'right'\n    },\n    maintainAspectRatio: false\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    data: data,\n    options: options,\n    width: 200,\n    height: 400,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    transactions: state.linkReducer.monthTransactions\n  };\n};\n\nconst mapDispacthToProps = dispatch => {\n  return {\n    dispatch\n  };\n};\n\nexport default connect(mapStateToProps, mapDispacthToProps)(LineChart);","map":{"version":3,"sources":["/Users/flatironstudent/Desktop/moneys/frontend/src/components/LineChart.js"],"names":["React","connect","Line","LineChart","props","today","Date","month","lastSix","slice","getMonth","nextSix","data","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderWidth","options","title","display","text","fontSize","legend","position","maintainAspectRatio","mapStateToProps","state","transactions","linkReducer","monthTransactions","mapDispacthToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,IAAR,QAAmB,iBAAnB;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAE;AAE7B,MAAIC,KAAK,GAAG,IAAIC,IAAJ,EAAZ,CAF2B,CAG3B;;AACA,MAAIC,KAAK,GAAG,CAAE,MAAF,EAAU,QAAV,EAAoB,WAApB,EAAiC,SAAjC,EAA4C,UAA5C,EAAwD,UAAxD,EAAoE,SAApE,EAA+E,UAA/E,EAA2F,OAA3F,EAAoG,OAApG,EAA6G,KAA7G,EAAoH,MAApH,EAA4H,MAA5H,EAAoI,QAApI,EAA8I,WAA9I,EAA2J,SAA3J,EAAsK,UAAtK,EAAkL,UAAlL,EAA8L,SAA9L,EAAyM,UAAzM,EAAqN,OAArN,EAA8N,OAA9N,EAAuO,KAAvO,CAAZ;AACA,MAAIC,OAAO,GAAGD,KAAK,CAACE,KAAN,CAAaJ,KAAK,CAACK,QAAN,KAAmB,CAAnB,GAAuB,CAApC,EAAwCL,KAAK,CAACK,QAAN,KAAmB,CAA3D,CAAd;AACA,MAAIC,OAAO,GAAGJ,KAAK,CAACE,KAAN,CAAaJ,KAAK,CAACK,QAAN,KAAmB,CAAhC,EAAmCL,KAAK,CAACK,QAAN,KAAmB,CAAnB,GAAuB,CAA1D,CAAd;AAEA,QAAME,IAAI,GAAG;AACX;AACAC,IAAAA,MAAM,EAAE,CAAC,GAAGL,OAAJ,EAAa,GAAGG,OAAhB,CAFG;AAIXG,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAE,SADT;AAEEC,MAAAA,IAAI,EAAE,KAFR;AAGEC,MAAAA,WAAW,EAAE,GAHf;AAIEC,MAAAA,eAAe,EAAE,mBAJnB;AAKEC,MAAAA,WAAW,EAAE,mBALf;AAMEC,MAAAA,WAAW,EAAE,CANf;AAOER,MAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB;AAPR,KADQ,EAUR;AACEG,MAAAA,KAAK,EAAE,MADT;AAEEC,MAAAA,IAAI,EAAE,KAFR;AAGEC,MAAAA,WAAW,EAAE,GAHf;AAIEC,MAAAA,eAAe,EAAE,oBAJnB;AAKEC,MAAAA,WAAW,EAAE,oBALf;AAMEC,MAAAA,WAAW,EAAE,CANf;AAOER,MAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB;AAPR,KAVQ,EAmBR;AACEG,MAAAA,KAAK,EAAE,aADT;AAEEC,MAAAA,IAAI,EAAE,KAFR;AAGEC,MAAAA,WAAW,EAAE,GAHf;AAIEC,MAAAA,eAAe,EAAE,kBAJnB;AAKEC,MAAAA,WAAW,EAAE,kBALf;AAMEC,MAAAA,WAAW,EAAE,CANf;AAOER,MAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB;AAPR,KAnBQ;AAJC,GAAb;AAoCA,QAAMS,OAAO,GAAG;AACdC,IAAAA,KAAK,EAAC;AACJC,MAAAA,OAAO,EAAC,IADJ;AAEJC,MAAAA,IAAI,EAAE,QAFF;AAGJC,MAAAA,QAAQ,EAAC;AAHL,KADQ;AAMdC,IAAAA,MAAM,EAAC;AACLH,MAAAA,OAAO,EAAC,IADH;AAELI,MAAAA,QAAQ,EAAC;AAFJ,KANO;AAUdC,IAAAA,mBAAmB,EAAE;AAVP,GAAhB;AAaA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEhB,IAAZ;AAAkB,IAAA,OAAO,EAAES,OAA3B;AAAoC,IAAA,KAAK,EAAE,GAA3C;AAAgD,IAAA,MAAM,EAAE,GAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADF;AAKD,CA9DD;;AAgEA,MAAMQ,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,YAAY,EAAED,KAAK,CAACE,WAAN,CAAkBC;AAD3B,GAAP;AAGD,CAJD;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLA,IAAAA;AADK,GAAP;AAGD,CAJD;;AAMA,eAAelC,OAAO,CAAC4B,eAAD,EAAkBK,kBAAlB,CAAP,CAA6C/B,SAA7C,CAAf","sourcesContent":["import React from \"react\"\nimport { connect } from 'react-redux'\nimport {Line} from 'react-chartjs-2'\n\nconst LineChart = (props) => { // i just want to pass it different props \n\n  let today = new Date\n  // let month = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n  let month = [ \"July\", \"August\", \"September\", \"October\", \"November\", \"December\", \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\", \"January\", \"February\", \"March\", \"April\", \"May\"]\n  let lastSix = month.slice( today.getMonth() + 6 - 6 , today.getMonth() + 6)\n  let nextSix = month.slice( today.getMonth() + 6, today.getMonth() + 6 + 6)  \n\n  const data = {\n    // labels: ['January', 'February', 'March', 'April', 'May'],\n    labels: [...lastSix, ...nextSix],\n\n    datasets: [\n      {\n        label: 'Savings',\n        fill: false,\n        lineTension: 0.5,\n        backgroundColor: 'rgb(51, 153, 102)',\n        borderColor: 'rgb(51, 153, 102)',\n        borderWidth: 2,\n        data: [65, 59, 80, 81, 56]\n      }, \n      {\n        label: 'Debt',\n        fill: false,\n        lineTension: 0.5,\n        backgroundColor: 'rgb(102, 153, 255)',\n        borderColor: 'rgb(102, 153, 255)',\n        borderWidth: 2,\n        data: [67, 64, 62, 60, 58]\n      }, \n      {\n        label: 'Investments',\n        fill: false,\n        lineTension: 0.5,\n        backgroundColor: 'rgb(230, 184, 0)',\n        borderColor: 'rgb(230, 184, 0)',\n        borderWidth: 2,\n        data: [12, 15, 17, 12, 12]\n      }, \n\n    ]\n  }\n\n  const options = {\n    title:{\n      display:true,\n      text: \"trends\",\n      fontSize:20\n    },\n    legend:{\n      display:true,\n      position:'right'\n    },\n    maintainAspectRatio: false\n  }\n\n  return (\n    <div>\n    <Line data={data} options={options} width={200} height={400} />\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    transactions: state.linkReducer.monthTransactions\n  }\n}\n\nconst mapDispacthToProps = (dispatch) => {\n  return {\n    dispatch\n  }\n}\n\nexport default connect(mapStateToProps, mapDispacthToProps)(LineChart)"]},"metadata":{},"sourceType":"module"}