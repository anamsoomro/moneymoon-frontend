{"ast":null,"code":"var _jsxFileName = \"/Users/flatironstudent/Desktop/moneys/frontend/src/components/Link.js\";\nimport React, { Component } from \"react\";\nimport { PlaidLink } from \"react-plaid-link\";\nimport { connect } from 'react-redux';\n\nclass Link extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.showTransaction = transaction => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 12\n        }\n      }, transaction.name)), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }\n      }, \"account_id: \", transaction.account_id), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }\n      }, \" amount: \", transaction.amount), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }\n      }, \" category: \", transaction.category), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }, \" date: \", transaction.date));\n    };\n  }\n\n  handleOnSuccess(public_token, metadata) {\n    // fetch(\"http://localhost:8000/auth/public_token\", {\n    fetch(\"http://localhost:3000/get_access_token\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        public_token: public_token,\n        user_id: localStorage.user_id\n      })\n    }).then(resp => resp.json()).then(accessTokenAndItemId => {\n      // {access_token: \"access-sandbox-bef691d6-406d-4691-8fba-d9cd98de2727\", item_id: \"kn7qgzy89QcKqQvMZdG3cDy93VAMwBtWKlLRy\"}\n      console.log(\"sweet now you got a access token\");\n    });\n  }\n\n  handleOnExit() {// handle the case when your user exits Link\n  }\n\n  handleClickTransactions(res) {\n    fetch(\"http://localhost:3000/transactions\", {\n      headers: {\n        Authorization: `Bearer ${localStorage.token}`\n      }\n    }) // fetch(\"http://localhost:8000/transactions\")\n    .then(resp => resp.json()).then(transactions => {\n      // this.props.storeTransactions(transactions) // Unhandled Rejection (TypeError): Cannot read property 'props' of undefined\n      console.log(transactions);\n    });\n  }\n\n  handleClickAccounts(res) {\n    fetch(\"http://localhost:3000/accounts\", {\n      headers: {\n        Authorization: `Bearer ${localStorage.token}`\n      }\n    }) // fetch(\"http://localhost:8000/accounts\")\n    .then(resp => resp.json()).then(accounts => {\n      debugger;\n      console.log(accounts);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(PlaidLink, {\n      clientName: \"front-end\" // env=\"development\"\n      ,\n      env: \"sandbox\",\n      product: [\"transactions\"] // product={[\"auth\", \"transactions\"]} what ddoes this actually do \n      ,\n      publicKey: \"38e9fa8478f20a384db53c1176e9b7\",\n      onExit: this.handleOnExit,\n      onSuccess: this.handleOnSuccess,\n      className: \"test\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, \"Open Link and connect your bank!\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleClickTransactions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, \"Get Transactions\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleClickAccounts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, \"Get Accounts\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    storeTransactions: transactions => dispatch({\n      type: \"storeTransactions\",\n      transactions: transactions\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Link);","map":{"version":3,"sources":["/Users/flatironstudent/Desktop/moneys/frontend/src/components/Link.js"],"names":["React","Component","PlaidLink","connect","Link","showTransaction","transaction","name","account_id","amount","category","date","handleOnSuccess","public_token","metadata","fetch","method","headers","body","JSON","stringify","user_id","localStorage","then","resp","json","accessTokenAndItemId","console","log","handleOnExit","handleClickTransactions","res","Authorization","token","transactions","handleClickAccounts","accounts","render","mapStateToProps","state","mapDispatchToProps","dispatch","storeTransactions","type"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { PlaidLink }from \"react-plaid-link\";\nimport {connect} from 'react-redux'\n\nclass Link extends Component {\n\n  handleOnSuccess(public_token, metadata) {\n    // fetch(\"http://localhost:8000/auth/public_token\", {\n    fetch(\"http://localhost:3000/get_access_token\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        public_token: public_token,\n        user_id: localStorage.user_id\n      })\n    })\n    .then(resp => resp.json())\n    .then(accessTokenAndItemId => {\n      // {access_token: \"access-sandbox-bef691d6-406d-4691-8fba-d9cd98de2727\", item_id: \"kn7qgzy89QcKqQvMZdG3cDy93VAMwBtWKlLRy\"}\n      console.log(\"sweet now you got a access token\")\n    })\n  }\n\n  handleOnExit() {\n    // handle the case when your user exits Link\n  }\n\n  handleClickTransactions(res) {\n    fetch(\"http://localhost:3000/transactions\",{\n      headers: {Authorization: `Bearer ${localStorage.token}`}\n    })\n    // fetch(\"http://localhost:8000/transactions\")\n    .then(resp => resp.json())\n    .then(transactions => {\n      // this.props.storeTransactions(transactions) // Unhandled Rejection (TypeError): Cannot read property 'props' of undefined\n      console.log(transactions)\n    })\n  }\n\n  handleClickAccounts(res){\n    fetch(\"http://localhost:3000/accounts\", {\n      headers: {Authorization: `Bearer ${localStorage.token}`}\n    })\n    // fetch(\"http://localhost:8000/accounts\")\n    .then(resp => resp.json())\n    .then(accounts => {\n      debugger\n      console.log(accounts)\n    })\n  }\n\n\n  showTransaction = (transaction) => {\n    return(\n      <div>\n        <p><strong>{transaction.name}</strong></p>\n        <p>account_id: {transaction.account_id}</p>\n        {/* so i need to save account and account ids to give it account names  */}\n        <p> amount: {transaction.amount}</p>\n        <p> category: {transaction.category}</p>\n        <p> date: {transaction.date}</p>\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <div>\n        <PlaidLink\n          clientName=\"front-end\"\n          // env=\"development\"\n          env=\"sandbox\"\n          product={[\"transactions\"]}\n          // product={[\"auth\", \"transactions\"]} what ddoes this actually do \n          publicKey=\"38e9fa8478f20a384db53c1176e9b7\"\n          onExit={this.handleOnExit}\n          onSuccess={this.handleOnSuccess}\n          className=\"test\"\n        >\n          Open Link and connect your bank!\n        </PlaidLink>\n        <div>\n          <button onClick={this.handleClickTransactions}>Get Transactions</button>\n          <button onClick={this.handleClickAccounts}>Get Accounts</button>\n          {/* {this.state.transactions.map (transaction => this.showTransaction(transaction))} */}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { \n    state\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return{\n    storeTransactions: ( (transactions) => dispatch({type: \"storeTransactions\", transactions: transactions}) )\n  }\n} \n\nexport default connect(mapStateToProps, mapDispatchToProps)(Link);"]},"metadata":{},"sourceType":"module"}