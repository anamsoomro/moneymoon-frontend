{"ast":null,"code":"var _jsxFileName = \"/Users/flatironstudent/Desktop/moneys/frontend/src/containers/Month.js\";\nimport React from \"react\";\nimport MonthPie from \"../components/MonthPie\";\nimport TransactionPanel from \"../components/TransactionPanel\";\nimport { connect } from 'react-redux';\nimport MonthGauge from \"../components/MonthGauge\";\nimport NoAccounts from \"../components/NoAccounts\";\n\nconst Month = props => {\n  const getMonthTrans = event => {\n    fetch(\"http://localhost:3000/month_transactions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.token}`\n      },\n      body: JSON.stringify({\n        month: event.target.value,\n        account_id: props.account_id\n      })\n    }).then(resp => resp.json()).then(transactions => {\n      let allTransactions = transactions[0]; // figure out why this comes back twice\n\n      allTransactions = allTransactions.map(tran => {\n        let account = props.accounts.filter(acc => acc.account_id === tran.account_id);\n        return { ...tran,\n          account_name: account[0].name\n        };\n      });\n      props.storeMonth(allTransactions);\n    });\n  };\n\n  return props.accounts.length ? props.transactions.length ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"month-grid-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"month-gauge\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MonthGauge, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"month-pie\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MonthPie, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"month-transactions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TransactionPanel, {\n    transactions: props.transactions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 8\n    }\n  }, \" no transactioins \"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"month\",\n    name: \"asdfasd\",\n    style: {\n      display: \"block\"\n    },\n    onChange: getMonthTrans,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \" Current Month \"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \" April  \"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \" March \"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \" February \"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, \" January \"))) : /*#__PURE__*/React.createElement(NoAccounts, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }) // props.accounts.length\n  // ? <div className=\"month-grid-container\">\n  //     <div > \n  //       <div className=\"month-gauge\">\n  //         <MonthGauge />\n  //       </div>\n  //       <div className=\"month-pie\">\n  //         <MonthPie  />\n  //       </div>\n  //     </div>\n  //     <div className=\"month-transactions\">\n  //       <TransactionPanel transactions={props.transactions} />\n  //     </div>\n  //   </div>\n  // : <NoAccounts />\n  ;\n};\n\nconst mapStateToProps = state => {\n  return {\n    transactions: state.linkReducer.monthTransactions,\n    accounts: state.linkReducer.accounts\n  };\n};\n\nexport default connect(mapStateToProps)(Month);","map":{"version":3,"sources":["/Users/flatironstudent/Desktop/moneys/frontend/src/containers/Month.js"],"names":["React","MonthPie","TransactionPanel","connect","MonthGauge","NoAccounts","Month","props","getMonthTrans","event","fetch","method","headers","Authorization","localStorage","token","body","JSON","stringify","month","target","value","account_id","then","resp","json","transactions","allTransactions","map","tran","account","accounts","filter","acc","account_name","name","storeMonth","length","display","mapStateToProps","state","linkReducer","monthTransactions"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport MonthPie from \"../components/MonthPie\";\nimport TransactionPanel from \"../components/TransactionPanel\";\nimport {connect} from 'react-redux'\nimport MonthGauge from \"../components/MonthGauge\";\nimport NoAccounts from \"../components/NoAccounts\"\n\nconst Month = (props) => {\n\n  const getMonthTrans = (event) => {\n    fetch(\"http://localhost:3000/month_transactions\",{\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.token}`\n      },\n      body: JSON.stringify({\n        month: event.target.value,\n        account_id: props.account_id\n      })\n    })\n    .then( resp => resp.json())\n    .then( transactions => {\n      let allTransactions = transactions[0] // figure out why this comes back twice\n      allTransactions = allTransactions.map( tran => {\n        let account = props.accounts.filter( acc=> acc.account_id === tran.account_id )\n        return {...tran, account_name: account[0].name}\n      })\n      props.storeMonth(allTransactions)\n    })\n  }\n\n  return (\n    props.accounts.length\n    ? props.transactions.length\n      ? <div className=\"month-grid-container\">\n          <div > \n            <div className=\"month-gauge\">\n              <MonthGauge />\n            </div>\n            <div className=\"month-pie\">\n              <MonthPie  />\n            </div>\n          </div>\n          <div className=\"month-transactions\">\n            <TransactionPanel transactions={props.transactions} />\n          </div>\n        </div>\n      :<div>\n       <div> no transactioins </div>\n        <select id=\"month\" name=\"asdfasd\" style={{display: \"block\"}} onChange={getMonthTrans}> \n          <option value={5}> Current Month </option>\n          <option value={4}> April  </option>\n          <option value={3}> March </option>\n          <option value={2}> February </option>\n          <option value={1}> January </option>\n        </select>\n        </div>\n    : <NoAccounts />\n\n    // props.accounts.length\n    // ? <div className=\"month-grid-container\">\n    //     <div > \n    //       <div className=\"month-gauge\">\n    //         <MonthGauge />\n    //       </div>\n    //       <div className=\"month-pie\">\n    //         <MonthPie  />\n    //       </div>\n    //     </div>\n    //     <div className=\"month-transactions\">\n    //       <TransactionPanel transactions={props.transactions} />\n    //     </div>\n    //   </div>\n    // : <NoAccounts />\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    transactions: state.linkReducer.monthTransactions,\n    accounts: state.linkReducer.accounts\n  }\n}\n\nexport default connect(mapStateToProps)(Month);\n\n\n"]},"metadata":{},"sourceType":"module"}