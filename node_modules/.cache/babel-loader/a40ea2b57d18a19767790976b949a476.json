{"ast":null,"code":"var _jsxFileName = \"/Users/flatironstudent/Desktop/moneys/frontend/src/components/MonthSummary.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport ToggleMonth from '../components/ToggleMonth';\n\nconst MonthSummary = props => {\n  const formatNumber = num => {\n    // return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\n    return '$' + num.toFixed(2).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n  };\n\n  let moneyIn = props.transactions.reduce((acc, i) => {\n    if (i.amount < 0) {\n      //  \"transaction with a negative amount represents money flowing into the account\"\n      return -i.amount + acc;\n    } else if (i.account_name.includes(\"Money Market\") && i.amount > 0) {\n      // these doesnt' align with plaid's above statement. review. \n      return i.amount + acc;\n    } else if (i.account_name.includes(\"CD\") && i.amount > 0) {\n      return i.amount + acc;\n    } else {\n      return acc;\n    }\n  }, 0);\n  let moneyOut = props.transactions.reduce((acc, i) => {\n    if (i.amount > 0 && !i.account_name.includes(\"Money Market\") && !i.account_name.includes(\"CD\")) {\n      return acc + i.amount;\n    } else {\n      return acc;\n    }\n  }, 0);\n  let saved = (moneyIn - moneyOut) / moneyIn * 100;\n  saved = saved < 0 ? 0 : saved;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, \" Summary: \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-group-item list-group-item-action active\",\n    style: {\n      \"background\": \"#cfd5db\",\n      \"border\": \"0px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-group-item list-group-item-action\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ToggleMonth, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, \"money in: $\", moneyIn), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }, \"money out: $\", moneyOut), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }, \"money saved: $\", moneyIn - moneyOut), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, \"percent saved: \", saved, \"%\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    class: \"btn btn-primary btn-lg btn-block\",\n    onClick: props.setShowCategories,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, \" Show Categories \")))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    // transactions: state.linkReducer.monthTransactions,\n    transactions: state.linkReducer.monthDisplay\n  };\n};\n\nconst mapDispacthToProps = dispatch => {\n  return {\n    setShowCategories: () => dispatch({\n      type: \"setShowCategories\"\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispacthToProps)(MonthSummary);","map":{"version":3,"sources":["/Users/flatironstudent/Desktop/moneys/frontend/src/components/MonthSummary.js"],"names":["React","connect","ToggleMonth","MonthSummary","props","formatNumber","num","toFixed","replace","moneyIn","transactions","reduce","acc","i","amount","account_name","includes","moneyOut","saved","setShowCategories","mapStateToProps","state","linkReducer","monthDisplay","mapDispacthToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { connect } from 'react-redux'\nimport ToggleMonth from '../components/ToggleMonth'\n\nconst MonthSummary = (props) => {\n\n  const formatNumber = (num) => {\n    // return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\n    return '$' + num.toFixed(2).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\n\n  }\n\n  let moneyIn = props.transactions.reduce( (acc, i) => {\n    if (i.amount < 0 ){ //  \"transaction with a negative amount represents money flowing into the account\"\n    return (-i.amount + acc)\n    } else if(i.account_name.includes(\"Money Market\") && i.amount > 0){ // these doesnt' align with plaid's above statement. review. \n    return (i.amount + acc)\n    } else if(i.account_name.includes(\"CD\") && i.amount > 0 ){\n      return (i.amount + acc)\n    } else { \n      return acc\n    }\n  }, 0)\n\n  let moneyOut = props.transactions.reduce ( (acc, i) => {\n    if(i.amount > 0 && !i.account_name.includes(\"Money Market\") && !i.account_name.includes(\"CD\")){\n      return(acc + i.amount)\n    } else { \n      return acc\n    }\n  }, 0)\n\n  let saved = ((moneyIn - moneyOut) / moneyIn )*100\n  saved = saved < 0 ? 0 : saved\n\n  return (\n    <div> \n    <h6> Summary: </h6>\n      <div className=\"list-group\">\n        <div className=\"list-group-item list-group-item-action active\" style={{\"background\": \"#cfd5db\", \"border\": \"0px\"}}>\n          <div className=\"list-group-item list-group-item-action\">\n              <ToggleMonth />\n              <h6>money in: ${moneyIn}</h6>\n              <h6>money out: ${moneyOut}</h6>\n              <h6>money saved: ${moneyIn - moneyOut}</h6>\n              <h6>percent saved: {saved}%</h6>\n              <button type=\"button\" class=\"btn btn-primary btn-lg btn-block\" onClick={props.setShowCategories}> Show Categories </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    // transactions: state.linkReducer.monthTransactions,\n    transactions: state.linkReducer.monthDisplay,\n\n\n  }\n}\n\nconst mapDispacthToProps = (dispatch) => {\n  return {\n    setShowCategories: () => dispatch({type: \"setShowCategories\"})\n  }\n}\n\nexport default connect(mapStateToProps, mapDispacthToProps)(MonthSummary)"]},"metadata":{},"sourceType":"module"}