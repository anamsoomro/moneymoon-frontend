{"ast":null,"code":"let savingSeed = [2000, 2200, 2400, 2600, 2600, 2650]; // this needs to be actual info.\n\nlet debtSeed = [10000, 9500, 9000, 8500, 8000, 7500]; // the current month will also be considered as a projected month\n\nlet investmentSeed = [4000, 4100, 3900, 3700, 3750, 3800];\nlet overallSeed = [];\n\nfor (let i = 0; i < savingSeed.length; i++) {\n  overallSeed.push(savingSeed[i] + investmentSeed[i] - debtSeed[i]);\n}\n\nconst initialState = {\n  savings: savingSeed,\n  debt: debtSeed,\n  investments: investmentSeed,\n  overall: overallSeed,\n  mSaving: (savingSeed[5] - savingSeed[0]) / 6,\n  mDebt: (debtSeed[5] - debtSeed[0]) / 6,\n  mInvestment: (investmentSeed[5] - investmentSeed[0]) / 6,\n  mOverall: (overallSeed[5] - overallSeed[0]) / 6\n};\nexport default function trendReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'adjustTrends':\n      let m;\n      return { ...state,\n        mSaving: m,\n        mDebt: m,\n        mOverall: m\n      };\n\n    case \"resetTrends\":\n      return {\n        initialState\n      };\n\n    default:\n      {\n        return state;\n      }\n  }\n}","map":{"version":3,"sources":["/Users/flatironstudent/Desktop/moneys/frontend/src/reducers/trendReducer.js"],"names":["savingSeed","debtSeed","investmentSeed","overallSeed","i","length","push","initialState","savings","debt","investments","overall","mSaving","mDebt","mInvestment","mOverall","trendReducer","state","action","type","m"],"mappings":"AAAA,IAAIA,UAAU,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,CAAjB,C,CAAsD;;AACtD,IAAIC,QAAQ,GAAG,CAAC,KAAD,EAAQ,IAAR,EAAc,IAAd,EAAoB,IAApB,EAA0B,IAA1B,EAAgC,IAAhC,CAAf,C,CAAqD;;AACrD,IAAIC,cAAc,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,CAArB;AACA,IAAIC,WAAW,GAAG,EAAlB;;AACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,UAAU,CAACK,MAA/B,EAAuCD,CAAC,EAAxC,EAA2C;AACzCD,EAAAA,WAAW,CAACG,IAAZ,CAAkBN,UAAU,CAACI,CAAD,CAAV,GAAgBF,cAAc,CAACE,CAAD,CAA9B,GAAoCH,QAAQ,CAACG,CAAD,CAA9D;AACD;;AAED,MAAMG,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAER,UADU;AAEnBS,EAAAA,IAAI,EAAER,QAFa;AAGnBS,EAAAA,WAAW,EAAER,cAHM;AAInBS,EAAAA,OAAO,EAAER,WAJU;AAOnBS,EAAAA,OAAO,EAAE,CAACZ,UAAU,CAAC,CAAD,CAAV,GAAgBA,UAAU,CAAC,CAAD,CAA3B,IAAkC,CAPxB;AAQnBa,EAAAA,KAAK,EAAE,CAACZ,QAAQ,CAAC,CAAD,CAAR,GAAcA,QAAQ,CAAC,CAAD,CAAvB,IAA8B,CARlB;AASnBa,EAAAA,WAAW,EAAE,CAACZ,cAAc,CAAC,CAAD,CAAd,GAAoBA,cAAc,CAAC,CAAD,CAAnC,IAA0C,CATpC;AAUnBa,EAAAA,QAAQ,EAAE,CAACZ,WAAW,CAAC,CAAD,CAAX,GAAiBA,WAAW,CAAC,CAAD,CAA7B,IAAoC;AAV3B,CAArB;AAaA,eAAe,SAASa,YAAT,CAAuBC,KAAK,GAACV,YAA7B,EAA2CW,MAA3C,EAAkD;AAC/D,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,cAAL;AACE,UAAIC,CAAJ;AACA,aAAM,EACJ,GAAGH,KADC;AAEJL,QAAAA,OAAO,EAAEQ,CAFL;AAGJP,QAAAA,KAAK,EAAEO,CAHH;AAIJL,QAAAA,QAAQ,EAAEK;AAJN,OAAN;;AAMF,SAAK,aAAL;AACE,aAAO;AACLb,QAAAA;AADK,OAAP;;AAGF;AAAS;AACP,eAAOU,KAAP;AACD;AAfH;AAiBD","sourcesContent":["let savingSeed = [2000, 2200, 2400, 2600, 2600, 2650] // this needs to be actual info.\nlet debtSeed = [10000, 9500, 9000, 8500, 8000, 7500] // the current month will also be considered as a projected month\nlet investmentSeed = [4000, 4100, 3900, 3700, 3750, 3800] \nlet overallSeed = []\nfor (let i = 0; i < savingSeed.length; i++){\n  overallSeed.push( savingSeed[i] + investmentSeed[i] - debtSeed[i] )\n}\n\nconst initialState = {\n  savings: savingSeed,\n  debt: debtSeed,\n  investments: investmentSeed,\n  overall: overallSeed,\n\n  \n  mSaving: (savingSeed[5] - savingSeed[0]) / 6,\n  mDebt: (debtSeed[5] - debtSeed[0]) / 6,\n  mInvestment: (investmentSeed[5] - investmentSeed[0]) / 6,\n  mOverall: (overallSeed[5] - overallSeed[0]) / 6,\n}\n\nexport default function trendReducer (state=initialState, action){\n  switch(action.type){\n    case 'adjustTrends':\n      let m\n      return{ \n        ...state,\n        mSaving: m,\n        mDebt: m,\n        mOverall: m\n      }\n    case \"resetTrends\":\n      return {\n        initialState\n      }\n    default: {\n      return state\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}