{"ast":null,"code":"var _jsxFileName = \"/Users/flatironstudent/Desktop/moneys/frontend/src/containers/Welcome.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst Welcome = props => {\n  const handleLogin = event => {\n    event.preventDefault();\n    let user = {\n      username: event.target[0].value,\n      password: event.target[1].value\n    };\n    fetch(\"http://localhost:3000/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    }).then(resp => resp.json()).then(user => {\n      if (user.token) {\n        props.setCurrentUser(user);\n        console.log(user.token);\n        localStorage.token = user.token;\n        localStorage.user_id = user.user_id; // idk if i need this actually\n\n        getData(user.account_id, user.token); // get their transactions and accounts related to their account\n      } else {\n        alert(\"wrong credentials\");\n      }\n    });\n\n    const getData = (account_id, token) => {\n      // this is their user auth token, not paid token. plaid token is related to items\n      fetch(`http://localhost:3000/accounts/${account_id}/get_data`, {\n        method: \"GET\",\n        // remember GET cant have a body\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        }\n      }).then(resp => resp.json()).then(data => {\n        // for as many items this acount has. each object in array is a link item\n        let allAccounts = [];\n        data.accounts.map(item => item.accounts.map(account => allAccounts.push(account)));\n        let allTransactions = [];\n        data.transactions.map(item => item.transactions.map(transaction => allTransactions.push(transaction)));\n        debugger;\n      });\n    };\n  };\n\n  const handleSignUp = event => {\n    event.preventDefault();\n    let user = {\n      email: event.target[0].value,\n      username: event.target[1].value,\n      password: event.target[2].value\n    };\n    fetch(\"http://localhost:3000/users\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    }).then(resp => resp.json()).then(user => {\n      if (user.token) {\n        props.setCurrentUser(user);\n        console.log(user.token);\n        localStorage.token = user.token;\n        localStorage.user_id = user.user_id;\n      } else {\n        alert(\"anam dont forget to put validations in here\");\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, \"Sign Up\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSignUp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst mapStateToProps = state => {\n  return (// something: state.somethingReduced.something\n    state\n  );\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setCurrentUser: user => dispatch({\n      type: \"setCurrentUser\",\n      user: user\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Welcome);","map":{"version":3,"sources":["/Users/flatironstudent/Desktop/moneys/frontend/src/containers/Welcome.js"],"names":["React","connect","Welcome","props","handleLogin","event","preventDefault","user","username","target","value","password","fetch","method","headers","body","JSON","stringify","then","resp","json","token","setCurrentUser","console","log","localStorage","user_id","getData","account_id","alert","Authorization","data","allAccounts","accounts","map","item","account","push","allTransactions","transactions","transaction","handleSignUp","email","mapStateToProps","state","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { connect } from \"react-redux\"\n\nconst Welcome = (props) => {\n\n  const handleLogin = (event) => {\n    event.preventDefault()\n    let user = {\n      username: event.target[0].value,\n      password: event.target[1].value\n    }\n\n    fetch(\"http://localhost:3000/login\", {\n      method: \"POST\", \n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    })\n    .then(resp => resp.json())\n    .then(user => {\n      if(user.token){\n        props.setCurrentUser(user) \n        console.log(user.token) \n        localStorage.token = user.token \n        localStorage.user_id = user.user_id // idk if i need this actually\n        getData(user.account_id, user.token) // get their transactions and accounts related to their account\n      } else { \n        alert(\"wrong credentials\")\n      }\n    })\n\n    const getData = (account_id, token) => {  // this is their user auth token, not paid token. plaid token is related to items\n      fetch(`http://localhost:3000/accounts/${account_id}/get_data`, {\n        method: \"GET\", // remember GET cant have a body\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        }\n      })\n      .then(resp => resp.json())\n      .then(data => {\n        // for as many items this acount has. each object in array is a link item\n\n        let allAccounts = []\n        data.accounts.map( item => item.accounts.map(account => allAccounts.push(account)))\n\n        let allTransactions = [] \n        data.transactions.map( item => item.transactions.map(transaction => allTransactions.push(transaction)))\n\n        debugger\n      })\n    }\n  }\n\n  const handleSignUp = (event) => {\n    event.preventDefault()\n    let user = {\n      email: event.target[0].value,\n      username: event.target[1].value,\n      password: event.target[2].value\n    }\n    fetch(\"http://localhost:3000/users\", {\n      method: \"POST\", \n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    })\n    .then(resp => resp.json())\n    .then(user => {\n      if(user.token){ \n        props.setCurrentUser(user) \n        console.log(user.token)\n        localStorage.token = user.token\n        localStorage.user_id = user.user_id\n      }\n      else{\n        alert(\"anam dont forget to put validations in here\")\n      }\n    })\n  }\n\n  return (\n    <div>\n      <h2>Login</h2>\n      <form onSubmit={handleLogin}>\n        <input type=\"text\" placeholder=\"username\" /> \n        <input type=\"text\" placeholder=\"password\"/> \n        <input type=\"submit\" />\n      </form>\n\n      <h2>Sign Up</h2>\n      <form onSubmit={handleSignUp}>\n        <input type=\"text\" placeholder=\"email\"/> \n        <input type=\"text\" placeholder=\"username\" /> \n        <input type=\"text\" placeholder=\"password\"/> \n        <input type=\"submit\" />\n      </form>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return(\n    // something: state.somethingReduced.something\n    state\n  )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return{\n    setCurrentUser: ( (user) => dispatch({type: \"setCurrentUser\", user: user}))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Welcome);\n\n\n"]},"metadata":{},"sourceType":"module"}