{"ast":null,"code":"var _jsxFileName = \"/Users/flatironstudent/Desktop/moneys/frontend/src/containers/Dash.js\";\nimport React, { useEffect } from \"react\";\nimport AccountsPanel from './AccountsPanel';\nimport TransactionsPanel from './TransactionPanel';\nimport BalancePanel from './BalancePanel';\nimport { connect } from 'react-redux';\n\nconst Dash = props => {\n  useEffect(() => {\n    if (localStorage.token) {\n      // im only doing this for that log out error. it doesnt make sense to my when dash renders again after logout\n      fetch(`http://localhost:3000/accounts/${localStorage.account_id}/get_data`, {\n        method: \"GET\",\n        // remember GET cant have a body\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.token}`\n        }\n      }).then(resp => resp.json()).then(data => {\n        debugger; // for as many items this acount has. each object in array is a link item\n\n        if (!!data.transactions.length) {\n          // if user has no plaid items {trans: [], balances: []}\n          let allAccounts = [];\n          data.accounts.map(item => item.accounts.map(account => allAccounts.push(account)));\n          let allTransactions = [];\n          data.transactions.map(item => item.transactions.map(transaction => allTransactions.push(transaction)));\n          props.storeData({\n            transactions: allTransactions,\n            accounts: allAccounts\n          });\n        }\n      });\n    }\n  });\n  return (\n    /*#__PURE__*/\n    // <div className=\"dash\"> \n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(BalancePanel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(AccountsPanel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(TransactionsPanel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }))\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    clearCurrentUser: () => dispatch({\n      type: \"clearCurrentUser\"\n    }),\n    storeData: data => dispatch({\n      type: \"storeData\",\n      data: data\n    }) // data = {transactions: [...], accounts: [...]}\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dash);","map":{"version":3,"sources":["/Users/flatironstudent/Desktop/moneys/frontend/src/containers/Dash.js"],"names":["React","useEffect","AccountsPanel","TransactionsPanel","BalancePanel","connect","Dash","props","localStorage","token","fetch","account_id","method","headers","Authorization","then","resp","json","data","transactions","length","allAccounts","accounts","map","item","account","push","allTransactions","transaction","storeData","mapStateToProps","state","mapDispatchToProps","dispatch","clearCurrentUser","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,iBAAP,MAA8B,oBAA9B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAEtBN,EAAAA,SAAS,CAAE,MAAK;AACd,QAAIO,YAAY,CAACC,KAAjB,EAAuB;AAAE;AACvBC,MAAAA,KAAK,CAAE,kCAAiCF,YAAY,CAACG,UAAW,WAA3D,EAAuE;AAC1EC,QAAAA,MAAM,EAAE,KADkE;AAC3D;AACfC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,aAAa,EAAG,UAASN,YAAY,CAACC,KAAM;AAFrC;AAFiE,OAAvE,CAAL,CAOCM,IAPD,CAOMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAPd,EAQCF,IARD,CAQMG,IAAI,IAAI;AACZ,iBADY,CAEZ;;AACA,YAAI,CAAC,CAACA,IAAI,CAACC,YAAL,CAAkBC,MAAxB,EAA+B;AAAE;AAC/B,cAAIC,WAAW,GAAG,EAAlB;AACAH,UAAAA,IAAI,CAACI,QAAL,CAAcC,GAAd,CAAmBC,IAAI,IAAIA,IAAI,CAACF,QAAL,CAAcC,GAAd,CAAkBE,OAAO,IAAIJ,WAAW,CAACK,IAAZ,CAAiBD,OAAjB,CAA7B,CAA3B;AACA,cAAIE,eAAe,GAAG,EAAtB;AACAT,UAAAA,IAAI,CAACC,YAAL,CAAkBI,GAAlB,CAAuBC,IAAI,IAAIA,IAAI,CAACL,YAAL,CAAkBI,GAAlB,CAAsBK,WAAW,IAAID,eAAe,CAACD,IAAhB,CAAqBE,WAArB,CAArC,CAA/B;AACArB,UAAAA,KAAK,CAACsB,SAAN,CAAgB;AAACV,YAAAA,YAAY,EAAEQ,eAAf;AAAgCL,YAAAA,QAAQ,EAAED;AAA1C,WAAhB;AACD;AACF,OAlBD;AAmBD;AACF,GAtBQ,CAAT;AAwBA;AAAA;AACE;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF;AAFF;AAQD,CAlCD;;AAoCA,MAAMS,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLA,IAAAA;AADK,GAAP;AAGD,CAJD;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLC,IAAAA,gBAAgB,EAAI,MAAMD,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAE;AAAP,KAAD,CAD7B;AAELN,IAAAA,SAAS,EAAKX,IAAD,IAAUe,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAE,WAAP;AAAoBjB,MAAAA,IAAI,EAAEA;AAA1B,KAAD,CAF1B,CAE8D;;AAF9D,GAAP;AAID,CALD;;AAOA,eAAeb,OAAO,CAACyB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C1B,IAA7C,CAAf","sourcesContent":["import React, { useEffect } from \"react\"\nimport AccountsPanel from './AccountsPanel'\nimport TransactionsPanel from './TransactionPanel'\nimport BalancePanel from './BalancePanel'\nimport {connect} from 'react-redux'\n\nconst Dash = (props) => {\n\n  useEffect( () =>{\n    if (localStorage.token){ // im only doing this for that log out error. it doesnt make sense to my when dash renders again after logout\n      fetch(`http://localhost:3000/accounts/${localStorage.account_id}/get_data`, {\n        method: \"GET\", // remember GET cant have a body\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.token}`\n        }\n      })\n      .then(resp => resp.json())\n      .then(data => {\n        debugger\n        // for as many items this acount has. each object in array is a link item\n        if (!!data.transactions.length){ // if user has no plaid items {trans: [], balances: []}\n          let allAccounts = []\n          data.accounts.map( item => item.accounts.map(account => allAccounts.push(account)))\n          let allTransactions = [] \n          data.transactions.map( item => item.transactions.map(transaction => allTransactions.push(transaction)))\n          props.storeData({transactions: allTransactions, accounts: allAccounts})\n        }\n      })\n    }\n  })\n\n  return (\n    // <div className=\"dash\"> \n    <div > \n      <BalancePanel /> \n      <AccountsPanel /> \n      <TransactionsPanel /> \n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return { \n    state\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    clearCurrentUser: ( () => dispatch({type: \"clearCurrentUser\"}) ),\n    storeData: ( (data) => dispatch({type: \"storeData\", data: data}) ) // data = {transactions: [...], accounts: [...]}\n  }\n} \n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dash);\n\n\n"]},"metadata":{},"sourceType":"module"}