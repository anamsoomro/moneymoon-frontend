{"ast":null,"code":"// // MAKE USER1\n// let u1Saving = [2000, 2200, 2400, 2600, 2600, 2650]\n// let u1Debt = [10000, 9500, 9000, 8500, 8000, 7500] \n// let u1Investment = [4000, 4100, 3900, 3700, 3750, 3800] \n// let u1Overall = []\n// for (let i = 0; i < u1Saving.length; i++){\n//   u1Overall.push( u1Saving[i] + u1Investment[i] - u1Debt[i] )\n// }\n// let user1 = {\n//   saving: u1Saving, \n//   debt: u1Debt, \n//   investment: u1Investment, \n//   overall: u1Overall,\n//   mSaving: (u1Saving[5] - u1Saving[0]) / 5,\n//   mDebt: (u1Debt[5] - u1Debt[0]) / 5,\n//   mInvestment: (u1Investment[5] - u1Investment[0]) / 5,\n//   mOverall: (u1Overall[5] - u1Overall[0]) / 5,\n// }\n// // MAKE USER2\n// let u2Saving = [2000, 2200, 2400, 2600, 2600, 2650]\n// let u2Debt = [10000, 9500, 9000, 8500, 8000, 7500] \n// let u2Investment = [4000, 4100, 3900, 3700, 3750, 3800] \n// let u2Overall = []\n// for (let i = 0; i < u2Saving.length; i++){\n//   u2Overall.push( u2Saving[i] + u2Investment[i] - u2Debt[i] )\n// }\n// let user2 = {\n//   saving: u2Saving, \n//   debt: u2Debt, \n//   investment: u2Investment, \n//   overall: u2Overall,\n//   mSaving: (u2Saving[5] - u2Saving[0]) / 5,\n//   mDebt: (u2Debt[5] - u2Debt[0]) / 5,\n//   mInvestment: (u2Investment[5] - u2Investment[0]) / 5,\n//   mOverall: (u2Overall[5] - u2Overall[0]) / 5,\n// }\n// const addTwoArrays = (arr1, arr2) => {\n//   let result = []\n//   for (let i=0; i<arr1.length; i++){\n//     result.push(arr1[i] + arr2[i])\n//   }\n//   return result\n// }\n// console.log(\"calculating both\")\n// let both = {\n//   saving: addTwoArrays(user1.saving, user2.saving), \n//   debt: addTwoArrays(user1.debt, user2.debt),\n//   investment: addTwoArrays(user1.investment, user2.investment),\n//   overall: addTwoArrays(user1.overall, user2.overall),\n//   mSaving: user1.mSaving + user2.mSaving,\n//   mDebt: user1.mDebt + user2.mDebt,\n//   mInvestment: user1.mInvestment + user2.mInvestment,\n//   mOverall: user1.mOverall + user2.mOverall,\n// }\n// console.log(user1)\n// console.log(user2)\n// console.log(both)\n// const initialState = {\n//     user1: user1,\n//     user2: user2, \n//     both: both,\n//     display: both // either u1, u2 or both\n// }\n// export default function trendReducer (state=initialState, action){\n//   switch(action.type){\n//     // case 'storeHistory':\n//     //   console.log(\"storeHistory\")\n//     //   let both = null // this is only part where both gets assigned, y is it getting reassigned\n//     //   // if(action.user2){\n//     //   //   both = {\n//     //   //     saving: addTwoArrays(action.user1.saving, action.user2.saving), \n//     //   //     debt: addTwoArrays(action.user1.debt, action.user2.debt),\n//     //   //     investment: addTwoArrays(action.user1.investment, action.user2.investment),\n//     //   //     overall: addTwoArrays(action.user1.overall, action.user2.overall),\n//     //   //     mSaving: action.user1.mSaving + action.user2.mSaving,\n//     //   //     mDebt: action.user1.mDebt + action.user2.mDebt,\n//     //   //     mInvestment: action.user1.mInvestment + action.user2.mInvestment,\n//     //   //     mOverall: action.user1.mOverall + action.user2.mOverall,\n//     //   //   }\n//     //   // }\n//     //   return {\n//     //     ...state,\n//     //     user1: action.user1,\n//     //     user2: action.user2,\n//     //     both: both, \n//     //     display: both\n//     //   }\n//     case 'handleTrendDisplay': \n//       // let display\n//       // if (action.userView === localStorage.user1 ){\n//       //   display = state.user1\n//       // } else if (localStorage.user2 && action.userView === localStorage.user2 ){\n//       //   display = state.user2\n//       // } else {\n//       //   display = state.both\n//       // }\n//     let display\n//     if (action.filter === \"user1\"){ display = state.user1} \n//     else if(action.filter === \"user2\"){display = state.user2}\n//     else if(action.filter === \"both\") {display = state.both} \n//     else {console.log(\"fucked up\")}\n//       return {\n//         ...state,\n//         display: display \n//       }\n//     case 'adjustSavings':\n//       debugger\n//       let a  = action.mSavings + state.display.mInvestment - state.display.mDebt\n//       return{ \n//         ...state,\n//         display:{\n//           ...state.display, /// NEVERMIND\n//           mSaving: action.mSavings,\n//           mOverall: a\n//         }\n//       }\n//     case 'adjustDebt':\n//       debugger\n//       let b = state.display.mSaving + state.display.mInvestment - action.mDebt\n//       return{ \n//         ...state,\n//         display:{\n//           ...state.display,\n//           mDebt: action.mDebt,\n//           mOverall: b\n//         }\n//       }\n//     case \"resetTrends\":\n//       let reset\n//       if (action.userView === localStorage.user1 ){reset = state.user1}\n//       else if (localStorage.user2 && action.userView === localStorage.user2 ){reset = state.user2}\n//       else {reset = state.both}\n//       return {\n//         ...state,\n//         display: reset\n//       }\n//     default: {\n//       return state\n//     }\n//   }\n// }\n// MAKE USER1\nlet u1Saving = [2000, 2200, 2400, 2600, 2600, 2650];\nlet u1Debt = [10000, 9500, 9000, 8500, 8000, 7500];\nlet u1Investment = [4000, 4100, 3900, 3700, 3750, 3800];\nlet u1Overall = [];\n\nfor (let i = 0; i < u1Saving.length; i++) {\n  u1Overall.push(u1Saving[i] + u1Investment[i] - u1Debt[i]);\n}\n\nlet user1 = {\n  saving: u1Saving,\n  debt: u1Debt,\n  investment: u1Investment,\n  overall: u1Overall,\n  mSaving: (u1Saving[5] - u1Saving[0]) / 5,\n  mDebt: (u1Debt[5] - u1Debt[0]) / 5,\n  mInvestment: (u1Investment[5] - u1Investment[0]) / 5,\n  mOverall: (u1Overall[5] - u1Overall[0]) / 5\n}; // MAKE USER2\n\nlet u2Saving = [2000, 2200, 2400, 2600, 2600, 2650];\nlet u2Debt = [10000, 9500, 9000, 8500, 8000, 7500];\nlet u2Investment = [4000, 4100, 3900, 3700, 3750, 3800];\nlet u2Overall = [];\n\nfor (let i = 0; i < u2Saving.length; i++) {\n  u2Overall.push(u2Saving[i] + u2Investment[i] - u2Debt[i]);\n}\n\nlet user2 = {\n  saving: u2Saving,\n  debt: u2Debt,\n  investment: u2Investment,\n  overall: u2Overall,\n  mSaving: (u2Saving[5] - u2Saving[0]) / 5,\n  mDebt: (u2Debt[5] - u2Debt[0]) / 5,\n  mInvestment: (u2Investment[5] - u2Investment[0]) / 5,\n  mOverall: (u2Overall[5] - u2Overall[0]) / 5\n};\n\nconst addTwoArrays = (arr1, arr2) => {\n  let result = [];\n\n  for (let i = 0; i < arr1.length; i++) {\n    result.push(arr1[i] + arr2[i]);\n  }\n\n  return [...result];\n};\n\nconsole.log(\"calculating both\");\nlet both = {\n  saving: addTwoArrays(user1.saving, user2.saving),\n  debt: addTwoArrays(user1.debt, user2.debt),\n  investment: addTwoArrays(user1.investment, user2.investment),\n  overall: addTwoArrays(user1.overall, user2.overall),\n  mSaving: user1.mSaving + user2.mSaving,\n  mDebt: user1.mDebt + user2.mDebt,\n  mInvestment: user1.mInvestment + user2.mInvestment,\n  mOverall: user1.mOverall + user2.mOverall\n};\nconsole.log(user1);\nconsole.log(user2);\nconsole.log(both);\nconst initialState = {\n  user1: user1,\n  user2: user2,\n  both: both,\n  display: { ...both\n  } // either u1, u2 or both\n\n};\nexport default function trendReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'handleTrendDisplay':\n      let display;\n\n      if (action.filter === \"user1\") {\n        display = state.user1;\n      } else if (action.filter === \"user2\") {\n        display = state.user2;\n      } else if (action.filter === \"both\") {\n        debugger; // at this point state.both is already mutated\n\n        display = { ...state.both\n        };\n      } else {\n        console.log(\"fucked up\");\n      }\n\n      return { ...state,\n        display: display\n      };\n\n    case 'adjustSavings':\n      let a = action.mSavings + state.display.mInvestment - state.display.mDebt;\n      return { ...state,\n        display: { ...state.display,\n          mSaving: action.mSavings,\n          mOverall: a\n        }\n      };\n\n    case 'adjustDebt':\n      let b = state.display.mSaving + state.display.mInvestment - action.mDebt;\n      return { ...state,\n        display: { ...state.display,\n          mDebt: action.mDebt,\n          mOverall: b\n        }\n      };\n\n    case \"resetTrends\":\n      let reset;\n\n      if (action.userView === localStorage.user1) {\n        reset = state.user1;\n      } else if (localStorage.user2 && action.userView === localStorage.user2) {\n        reset = state.user2;\n      } else {\n        reset = state.both;\n      }\n\n      return { ...state,\n        display: reset\n      };\n\n    default:\n      {\n        return state;\n      }\n  }\n}","map":{"version":3,"sources":["/Users/flatironstudent/Desktop/moneys/frontend/src/reducers/trendReducer.js"],"names":["u1Saving","u1Debt","u1Investment","u1Overall","i","length","push","user1","saving","debt","investment","overall","mSaving","mDebt","mInvestment","mOverall","u2Saving","u2Debt","u2Investment","u2Overall","user2","addTwoArrays","arr1","arr2","result","console","log","both","initialState","display","trendReducer","state","action","type","filter","a","mSavings","b","reset","userView","localStorage"],"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","sourcesContent":["// // MAKE USER1\n// let u1Saving = [2000, 2200, 2400, 2600, 2600, 2650]\n// let u1Debt = [10000, 9500, 9000, 8500, 8000, 7500] \n// let u1Investment = [4000, 4100, 3900, 3700, 3750, 3800] \n// let u1Overall = []\n// for (let i = 0; i < u1Saving.length; i++){\n//   u1Overall.push( u1Saving[i] + u1Investment[i] - u1Debt[i] )\n// }\n// let user1 = {\n//   saving: u1Saving, \n//   debt: u1Debt, \n//   investment: u1Investment, \n//   overall: u1Overall,\n//   mSaving: (u1Saving[5] - u1Saving[0]) / 5,\n//   mDebt: (u1Debt[5] - u1Debt[0]) / 5,\n//   mInvestment: (u1Investment[5] - u1Investment[0]) / 5,\n//   mOverall: (u1Overall[5] - u1Overall[0]) / 5,\n// }\n\n// // MAKE USER2\n// let u2Saving = [2000, 2200, 2400, 2600, 2600, 2650]\n// let u2Debt = [10000, 9500, 9000, 8500, 8000, 7500] \n// let u2Investment = [4000, 4100, 3900, 3700, 3750, 3800] \n// let u2Overall = []\n// for (let i = 0; i < u2Saving.length; i++){\n//   u2Overall.push( u2Saving[i] + u2Investment[i] - u2Debt[i] )\n// }\n// let user2 = {\n//   saving: u2Saving, \n//   debt: u2Debt, \n//   investment: u2Investment, \n//   overall: u2Overall,\n//   mSaving: (u2Saving[5] - u2Saving[0]) / 5,\n//   mDebt: (u2Debt[5] - u2Debt[0]) / 5,\n//   mInvestment: (u2Investment[5] - u2Investment[0]) / 5,\n//   mOverall: (u2Overall[5] - u2Overall[0]) / 5,\n// }\n\n// const addTwoArrays = (arr1, arr2) => {\n//   let result = []\n//   for (let i=0; i<arr1.length; i++){\n//     result.push(arr1[i] + arr2[i])\n//   }\n//   return result\n// }\n\n// console.log(\"calculating both\")\n// let both = {\n//   saving: addTwoArrays(user1.saving, user2.saving), \n//   debt: addTwoArrays(user1.debt, user2.debt),\n//   investment: addTwoArrays(user1.investment, user2.investment),\n//   overall: addTwoArrays(user1.overall, user2.overall),\n//   mSaving: user1.mSaving + user2.mSaving,\n//   mDebt: user1.mDebt + user2.mDebt,\n//   mInvestment: user1.mInvestment + user2.mInvestment,\n//   mOverall: user1.mOverall + user2.mOverall,\n// }\n\n// console.log(user1)\n// console.log(user2)\n// console.log(both)\n\n\n// const initialState = {\n//     user1: user1,\n//     user2: user2, \n//     both: both,\n//     display: both // either u1, u2 or both\n// }\n\n// export default function trendReducer (state=initialState, action){\n\n//   switch(action.type){\n\n//     // case 'storeHistory':\n//     //   console.log(\"storeHistory\")\n//     //   let both = null // this is only part where both gets assigned, y is it getting reassigned\n//     //   // if(action.user2){\n//     //   //   both = {\n//     //   //     saving: addTwoArrays(action.user1.saving, action.user2.saving), \n//     //   //     debt: addTwoArrays(action.user1.debt, action.user2.debt),\n//     //   //     investment: addTwoArrays(action.user1.investment, action.user2.investment),\n//     //   //     overall: addTwoArrays(action.user1.overall, action.user2.overall),\n//     //   //     mSaving: action.user1.mSaving + action.user2.mSaving,\n//     //   //     mDebt: action.user1.mDebt + action.user2.mDebt,\n//     //   //     mInvestment: action.user1.mInvestment + action.user2.mInvestment,\n//     //   //     mOverall: action.user1.mOverall + action.user2.mOverall,\n//     //   //   }\n//     //   // }\n//     //   return {\n//     //     ...state,\n//     //     user1: action.user1,\n//     //     user2: action.user2,\n//     //     both: both, \n//     //     display: both\n//     //   }\n    \n//     case 'handleTrendDisplay': \n//       // let display\n//       // if (action.userView === localStorage.user1 ){\n//       //   display = state.user1\n//       // } else if (localStorage.user2 && action.userView === localStorage.user2 ){\n//       //   display = state.user2\n//       // } else {\n//       //   display = state.both\n//       // }\n//     let display\n//     if (action.filter === \"user1\"){ display = state.user1} \n//     else if(action.filter === \"user2\"){display = state.user2}\n//     else if(action.filter === \"both\") {display = state.both} \n//     else {console.log(\"fucked up\")}\n//       return {\n//         ...state,\n//         display: display \n//       }\n\n//     case 'adjustSavings':\n//       debugger\n//       let a  = action.mSavings + state.display.mInvestment - state.display.mDebt\n//       return{ \n//         ...state,\n//         display:{\n//           ...state.display, /// NEVERMIND\n//           mSaving: action.mSavings,\n//           mOverall: a\n//         }\n//       }\n//     case 'adjustDebt':\n//       debugger\n//       let b = state.display.mSaving + state.display.mInvestment - action.mDebt\n//       return{ \n//         ...state,\n//         display:{\n//           ...state.display,\n//           mDebt: action.mDebt,\n//           mOverall: b\n//         }\n//       }\n//     case \"resetTrends\":\n//       let reset\n//       if (action.userView === localStorage.user1 ){reset = state.user1}\n//       else if (localStorage.user2 && action.userView === localStorage.user2 ){reset = state.user2}\n//       else {reset = state.both}\n//       return {\n//         ...state,\n//         display: reset\n//       }\n//     default: {\n//       return state\n//     }\n//   }\n// }\n\n\n// MAKE USER1\nlet u1Saving = [2000, 2200, 2400, 2600, 2600, 2650]\nlet u1Debt = [10000, 9500, 9000, 8500, 8000, 7500] \nlet u1Investment = [4000, 4100, 3900, 3700, 3750, 3800] \nlet u1Overall = []\nfor (let i = 0; i < u1Saving.length; i++){\n  u1Overall.push( u1Saving[i] + u1Investment[i] - u1Debt[i] )\n}\nlet user1 = {\n  saving: u1Saving, \n  debt: u1Debt, \n  investment: u1Investment, \n  overall: u1Overall,\n  mSaving: (u1Saving[5] - u1Saving[0]) / 5,\n  mDebt: (u1Debt[5] - u1Debt[0]) / 5,\n  mInvestment: (u1Investment[5] - u1Investment[0]) / 5,\n  mOverall: (u1Overall[5] - u1Overall[0]) / 5,\n}\n\n// MAKE USER2\nlet u2Saving = [2000, 2200, 2400, 2600, 2600, 2650]\nlet u2Debt = [10000, 9500, 9000, 8500, 8000, 7500] \nlet u2Investment = [4000, 4100, 3900, 3700, 3750, 3800] \nlet u2Overall = []\nfor (let i = 0; i < u2Saving.length; i++){\n  u2Overall.push( u2Saving[i] + u2Investment[i] - u2Debt[i] )\n}\nlet user2 = {\n  saving: u2Saving, \n  debt: u2Debt, \n  investment: u2Investment, \n  overall: u2Overall,\n  mSaving: (u2Saving[5] - u2Saving[0]) / 5,\n  mDebt: (u2Debt[5] - u2Debt[0]) / 5,\n  mInvestment: (u2Investment[5] - u2Investment[0]) / 5,\n  mOverall: (u2Overall[5] - u2Overall[0]) / 5,\n}\n\nconst addTwoArrays = (arr1, arr2) => {\n  let result = []\n  for (let i=0; i<arr1.length; i++){\n    result.push(arr1[i] + arr2[i])\n  }\n  return [...result]\n}\n\nconsole.log(\"calculating both\")\nlet both = {\n  saving: addTwoArrays(user1.saving, user2.saving), \n  debt: addTwoArrays(user1.debt, user2.debt),\n  investment: addTwoArrays(user1.investment, user2.investment),\n  overall: addTwoArrays(user1.overall, user2.overall),\n  mSaving: user1.mSaving + user2.mSaving,\n  mDebt: user1.mDebt + user2.mDebt,\n  mInvestment: user1.mInvestment + user2.mInvestment,\n  mOverall: user1.mOverall + user2.mOverall,\n}\n\nconsole.log(user1)\nconsole.log(user2)\nconsole.log(both)\n\n\nconst initialState = {\n    user1: user1,\n    user2: user2, \n    both: both,\n    display: {...both} // either u1, u2 or both\n}\n\nexport default function trendReducer (state=initialState, action){\n\n  switch(action.type){\n    case 'handleTrendDisplay': \n    let display\n    if (action.filter === \"user1\"){ display = state.user1 } \n    else if(action.filter === \"user2\"){display = state.user2}\n    else if(action.filter === \"both\") {\n      debugger // at this point state.both is already mutated\n      display = {...state.both}\n    } \n    else {console.log(\"fucked up\")}\n      return {\n        ...state,\n        display: display \n      }\n\n    case 'adjustSavings':\n      let a  = action.mSavings + state.display.mInvestment - state.display.mDebt\n      return{ \n        ...state,\n        display:{\n          ...state.display, \n          mSaving: action.mSavings,\n          mOverall: a\n        }\n      }\n    case 'adjustDebt':\n      let b = state.display.mSaving + state.display.mInvestment - action.mDebt\n      return{ \n        ...state,\n        display:{\n          ...state.display,\n          mDebt: action.mDebt,\n          mOverall: b\n        }\n      }\n    case \"resetTrends\":\n      let reset\n      if (action.userView === localStorage.user1 ){reset = state.user1}\n      else if (localStorage.user2 && action.userView === localStorage.user2 ){reset = state.user2}\n      else {reset = state.both}\n      return {\n        ...state,\n        display: reset\n      }\n    default: {\n      return state\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}