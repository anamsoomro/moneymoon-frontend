{"ast":null,"code":"let overallSeed = [];\nconst initialState = {\n  savings: [2000, 2200, 2400, 2600, 2600, 2650],\n  debt: [10000, 9500, 9000, 8500, 8000, 7500],\n  investments: [4000, 4100, 3900, 3700, 3750, 3800],\n  overall: []\n};\n\nfor (let i = 0; i < initialState.length; i++) {\n  overallSeed.push(savingSeed[i] + investmentSeed[i] - debtSeed[i]);\n}\n\nexport default function trendReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'adjustTrends':\n      let m;\n      return { ...state,\n        mSaving: m,\n        mDebt: m,\n        mOverall: m\n      };\n\n    case \"resetTrend\":\n      return {\n        initialState\n      };\n\n    default:\n      {\n        return state;\n      }\n  }\n}","map":{"version":3,"sources":["/Users/flatironstudent/Desktop/moneys/frontend/src/reducers/trendReducer.js"],"names":["overallSeed","initialState","savings","debt","investments","overall","i","length","push","savingSeed","investmentSeed","debtSeed","trendReducer","state","action","type","m","mSaving","mDebt","mOverall"],"mappings":"AAAA,IAAIA,WAAW,GAAG,EAAlB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,CADU;AAEnBC,EAAAA,IAAI,EAAE,CAAC,KAAD,EAAQ,IAAR,EAAc,IAAd,EAAoB,IAApB,EAA0B,IAA1B,EAAgC,IAAhC,CAFa;AAGnBC,EAAAA,WAAW,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,CAHM;AAInBC,EAAAA,OAAO,EAAE;AAJU,CAArB;;AAOA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,YAAY,CAACM,MAAjC,EAAyCD,CAAC,EAA1C,EAA6C;AAC3CN,EAAAA,WAAW,CAACQ,IAAZ,CAAkBC,UAAU,CAACH,CAAD,CAAV,GAAgBI,cAAc,CAACJ,CAAD,CAA9B,GAAoCK,QAAQ,CAACL,CAAD,CAA9D;AACD;;AAKD,eAAe,SAASM,YAAT,CAAuBC,KAAK,GAACZ,YAA7B,EAA2Ca,MAA3C,EAAkD;AAC/D,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,cAAL;AACE,UAAIC,CAAJ;AACA,aAAM,EACJ,GAAGH,KADC;AAEJI,QAAAA,OAAO,EAAED,CAFL;AAGJE,QAAAA,KAAK,EAAEF,CAHH;AAIJG,QAAAA,QAAQ,EAAEH;AAJN,OAAN;;AAMF,SAAK,YAAL;AACE,aAAO;AACLf,QAAAA;AADK,OAAP;;AAGF;AAAS;AACP,eAAOY,KAAP;AACD;AAfH;AAiBD","sourcesContent":["let overallSeed = []\n\nconst initialState = {\n  savings: [2000, 2200, 2400, 2600, 2600, 2650],\n  debt: [10000, 9500, 9000, 8500, 8000, 7500],\n  investments: [4000, 4100, 3900, 3700, 3750, 3800],\n  overall: []\n}\n\nfor (let i = 0; i < initialState.length; i++){\n  overallSeed.push( savingSeed[i] + investmentSeed[i] - debtSeed[i] )\n}\n\n\n\n\nexport default function trendReducer (state=initialState, action){\n  switch(action.type){\n    case 'adjustTrends':\n      let m\n      return{ \n        ...state,\n        mSaving: m,\n        mDebt: m,\n        mOverall: m\n      }\n    case \"resetTrend\":\n      return {\n        initialState\n      }\n    default: {\n      return state\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}