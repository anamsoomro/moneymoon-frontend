{"ast":null,"code":"var _jsxFileName = \"/Users/flatironstudent/Desktop/moneys/frontend/src/components/Link.js\";\nimport React, { Component } from \"react\";\nimport { PlaidLink } from \"react-plaid-link\";\nimport { connect } from 'react-redux';\n\nclass Link extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleOnSuccess = (public_token, metadata) => {\n      fetch(\"http://localhost:3000/get_access_token\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\" // this is going to need auth\n\n        },\n        body: JSON.stringify({\n          public_token: public_token,\n          user_id: localStorage.user_id // shouldnt this come from store. no store will go blank on page refresh \n\n        })\n      }).then(resp => resp.json()).then(response => {\n        console.log(\"sweet now you got a access token and some info\");\n        console.log(response);\n        this.props.storeData(response); // this props is undefined here. arrow functions implicitly carry context of this\n      });\n    };\n  }\n\n  render() {\n    console.log(\"Link\", this.props); // store transactions is here?!\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(PlaidLink, {\n      clientName: \"front-end\",\n      env: \"sandbox\" // \"development\"\n      ,\n      product: [\"transactions\"] // product={[\"auth\", \"transactions\"]} what ddoes this actually do \n      ,\n      publicKey: \"38e9fa8478f20a384db53c1176e9b7\",\n      onExit: this.handleOnExit,\n      onSuccess: this.handleOnSuccess,\n      className: \"test\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, \"Open Link and connect your bank!\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    storeData: data => dispatch({\n      type: \"storeData\",\n      data: data\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Link);","map":{"version":3,"sources":["/Users/flatironstudent/Desktop/moneys/frontend/src/components/Link.js"],"names":["React","Component","PlaidLink","connect","Link","handleOnSuccess","public_token","metadata","fetch","method","headers","body","JSON","stringify","user_id","localStorage","then","resp","json","response","console","log","props","storeData","render","handleOnExit","mapStateToProps","state","mapDispatchToProps","dispatch","data","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAAyB,kBAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAAA;AAAA;;AAAA,SAE3BI,eAF2B,GAET,CAACC,YAAD,EAAeC,QAAf,KAA4B;AAC5CC,MAAAA,KAAK,CAAC,wCAAD,EAA2C;AAC9CC,QAAAA,MAAM,EAAE,MADsC;AAE9CC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT,CAEP;;AAFO,SAFqC;AAM9CC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBP,UAAAA,YAAY,EAAEA,YADK;AAEnBQ,UAAAA,OAAO,EAAEC,YAAY,CAACD,OAFH,CAEW;;AAFX,SAAf;AANwC,OAA3C,CAAL,CAWCE,IAXD,CAWMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAXd,EAYCF,IAZD,CAYMG,QAAQ,IAAI;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAY,gDAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,aAAKG,KAAL,CAAWC,SAAX,CAAqBJ,QAArB,EAHgB,CAGe;AAChC,OAhBD;AAiBD,KApB0B;AAAA;;AAsB3BK,EAAAA,MAAM,GAAG;AACPJ,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB,KAAKC,KAAzB,EADO,CACyB;;AAChC,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AACE,MAAA,UAAU,EAAC,WADb;AAEE,MAAA,GAAG,EAAC,SAFN,CAEgB;AAFhB;AAGE,MAAA,OAAO,EAAE,CAAC,cAAD,CAHX,CAG6B;AAH7B;AAIE,MAAA,SAAS,EAAC,gCAJZ;AAKE,MAAA,MAAM,EAAE,KAAKG,YALf;AAME,MAAA,SAAS,EAAE,KAAKpB,eANlB;AAOE,MAAA,SAAS,EAAC,MAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADF,CADF;AAcD;;AAtC0B;;AAyC7B,MAAMqB,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLA,IAAAA;AADK,GAAP;AAGD,CAJD;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLN,IAAAA,SAAS,EAAKO,IAAD,IAAUD,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAE,WAAP;AAAoBD,MAAAA,IAAI,EAAEA;AAA1B,KAAD;AAD1B,GAAP;AAGD,CAJD;;AAMA,eAAe3B,OAAO,CAACuB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CxB,IAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { PlaidLink }from \"react-plaid-link\";\nimport {connect} from 'react-redux'\n\nclass Link extends Component {\n\n  handleOnSuccess = (public_token, metadata) => {\n    fetch(\"http://localhost:3000/get_access_token\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n        // this is going to need auth\n      },\n      body: JSON.stringify({\n        public_token: public_token,\n        user_id: localStorage.user_id // shouldnt this come from store. no store will go blank on page refresh \n      })\n    })\n    .then(resp => resp.json())\n    .then(response => {\n      console.log(\"sweet now you got a access token and some info\")\n      console.log(response)\n      this.props.storeData(response) // this props is undefined here. arrow functions implicitly carry context of this\n    })\n  }\n\n  render() {\n    console.log(\"Link\", this.props) // store transactions is here?!\n    return (\n      <div>\n        <PlaidLink\n          clientName=\"front-end\"\n          env=\"sandbox\" // \"development\"\n          product={[\"transactions\"]} // product={[\"auth\", \"transactions\"]} what ddoes this actually do \n          publicKey=\"38e9fa8478f20a384db53c1176e9b7\"\n          onExit={this.handleOnExit}\n          onSuccess={this.handleOnSuccess}\n          className=\"test\">\n          Open Link and connect your bank!\n        </PlaidLink>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { \n    state\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    storeData: ( (data) => dispatch({type: \"storeData\", data: data}) )\n  }\n} \n\nexport default connect(mapStateToProps, mapDispatchToProps)(Link);\n"]},"metadata":{},"sourceType":"module"}