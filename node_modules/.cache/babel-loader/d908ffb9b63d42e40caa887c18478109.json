{"ast":null,"code":"const initialState = {\n  transactions: [],\n  accounts: [],\n  monthTransactions: [],\n  transactionsDisplay: [],\n  accountsDisplay: [],\n  userView: null,\n  typeView: null,\n  accountView: null\n};\nexport default function linkReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'storeData':\n      // action.data = {transacton: [{trans}, {trans} ... ]}, accounts: [{acc}, {acc} ...]}\n      // would be nice to sort transactions by date\n      return { ...state,\n        transactions: action.data.transactions,\n        accounts: action.data.accounts\n      };\n\n    case 'addData':\n      return { ...state,\n        transactions: [...state.transactions, ...action.data.transactions],\n        accounts: [...state.accounts, ...action.data.accounts]\n      };\n\n    case 'storeMonth':\n      return { ...state,\n        monthTransactions: action.transactions.transactions\n      };\n    // I WOUL LIKE TO HAVE A SEPARATE VIEWCREDUCER\n    // BUT IDK HOW TO DEAL WITH GETTIING TRANSACTIONS AND ACCOUNTS FROM HERE INTO THERE\n\n    case 'setUserVew':\n      // filter trans and accounts for bal, trans, acc panels\n      debugger; // Y DOESNT THIS GET HIT\n      // it shows in redux console as getting called. hm.\n\n      let username;\n\n      switch (action.filter) {\n        case \"user1\":\n          username = state.accounts.users[0].username;\n          break;\n\n        case 'user2':\n          username = state.accounts.users[1].username;\n          break;\n\n        default:\n          // if it is both, userView is null\n          username = null;\n      }\n\n      return { ...state,\n        userView: username\n      };\n\n    case \"setTypeView\":\n      // filter trans and acc for balance, trans and acc panels\n      return { ...state,\n        typeView: action.filter\n      };\n\n    case \"setAccountView\":\n      // filter just trans for trans panel\n      return { ...state,\n        // accountView: account_id\n        accountView: action.filter\n      };\n\n    case \"resetApp\":\n      return initialState;\n\n    default:\n      {\n        return state;\n      }\n  }\n}","map":{"version":3,"sources":["/Users/flatironstudent/Desktop/moneys/frontend/src/reducers/linkReducer.js"],"names":["initialState","transactions","accounts","monthTransactions","transactionsDisplay","accountsDisplay","userView","typeView","accountView","linkReducer","state","action","type","data","username","filter","users"],"mappings":"AACA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,YAAY,EAAE,EADK;AAEnBC,EAAAA,QAAQ,EAAE,EAFS;AAGnBC,EAAAA,iBAAiB,EAAE,EAHA;AAKnBC,EAAAA,mBAAmB,EAAE,EALF;AAMnBC,EAAAA,eAAe,EAAE,EANE;AAQnBC,EAAAA,QAAQ,EAAE,IARS;AASnBC,EAAAA,QAAQ,EAAE,IATS;AAUnBC,EAAAA,WAAW,EAAE;AAVM,CAArB;AAaA,eAAe,SAASC,WAAT,CAAqBC,KAAK,GAACV,YAA3B,EAAyCW,MAAzC,EAAgD;AAC7D,UAAOA,MAAM,CAACC,IAAd;AAEE,SAAK,WAAL;AAAkB;AAClB;AACE,aAAM,EACJ,GAAGF,KADC;AAEJT,QAAAA,YAAY,EAAEU,MAAM,CAACE,IAAP,CAAYZ,YAFtB;AAGJC,QAAAA,QAAQ,EAAES,MAAM,CAACE,IAAP,CAAYX;AAHlB,OAAN;;AAMF,SAAK,SAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELT,QAAAA,YAAY,EAAE,CAAC,GAAGS,KAAK,CAACT,YAAV,EAAwB,GAAGU,MAAM,CAACE,IAAP,CAAYZ,YAAvC,CAFT;AAGLC,QAAAA,QAAQ,EAAE,CAAC,GAAGQ,KAAK,CAACR,QAAV,EAAoB,GAAGS,MAAM,CAACE,IAAP,CAAYX,QAAnC;AAHL,OAAP;;AAMF,SAAK,YAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELP,QAAAA,iBAAiB,EAAEQ,MAAM,CAACV,YAAP,CAAoBA;AAFlC,OAAP;AAMA;AACA;;AAGF,SAAK,YAAL;AAAmB;AACjB,eADF,CACW;AACT;;AACA,UAAIa,QAAJ;;AACA,cAAQH,MAAM,CAACI,MAAf;AACE,aAAK,OAAL;AACED,UAAAA,QAAQ,GAAGJ,KAAK,CAACR,QAAN,CAAec,KAAf,CAAqB,CAArB,EAAwBF,QAAnC;AACA;;AACF,aAAK,OAAL;AACEA,UAAAA,QAAQ,GAAGJ,KAAK,CAACR,QAAN,CAAec,KAAf,CAAqB,CAArB,EAAwBF,QAAnC;AACA;;AACF;AAAS;AACPA,UAAAA,QAAQ,GAAG,IAAX;AARJ;;AAUA,aAAO,EACL,GAAGJ,KADE;AAELJ,QAAAA,QAAQ,EAAEQ;AAFL,OAAP;;AAKF,SAAK,aAAL;AAAoB;AAClB,aAAO,EACL,GAAGJ,KADE;AAELH,QAAAA,QAAQ,EAAEI,MAAM,CAACI;AAFZ,OAAP;;AAKF,SAAK,gBAAL;AAAuB;AACrB,aAAO,EACL,GAAGL,KADE;AAEL;AACAF,QAAAA,WAAW,EAAEG,MAAM,CAACI;AAHf,OAAP;;AAMF,SAAK,UAAL;AACE,aAAOf,YAAP;;AAEF;AAAS;AACP,eAAOU,KAAP;AACD;AAjEH;AAsED","sourcesContent":["\nconst initialState = {\n  transactions: [],\n  accounts: [],\n  monthTransactions: [],\n\n  transactionsDisplay: [],\n  accountsDisplay: [],\n\n  userView: null,\n  typeView: null,\n  accountView: null\n}\n\nexport default function linkReducer(state=initialState, action){\n  switch(action.type){\n\n    case 'storeData': // action.data = {transacton: [{trans}, {trans} ... ]}, accounts: [{acc}, {acc} ...]}\n    // would be nice to sort transactions by date\n      return{\n        ...state,\n        transactions: action.data.transactions,\n        accounts: action.data.accounts,\n      }\n\n    case 'addData':\n      return {\n        ...state,\n        transactions: [...state.transactions, ...action.data.transactions],\n        accounts: [...state.accounts, ...action.data.accounts],\n      }\n\n    case 'storeMonth':\n      return {\n        ...state,\n        monthTransactions: action.transactions.transactions\n      }\n\n\n      // I WOUL LIKE TO HAVE A SEPARATE VIEWCREDUCER\n      // BUT IDK HOW TO DEAL WITH GETTIING TRANSACTIONS AND ACCOUNTS FROM HERE INTO THERE\n\n\n    case 'setUserVew': // filter trans and accounts for bal, trans, acc panels\n      debugger // Y DOESNT THIS GET HIT\n      // it shows in redux console as getting called. hm.\n      let username\n      switch (action.filter){\n        case \"user1\":\n          username = state.accounts.users[0].username\n          break \n        case 'user2': \n          username = state.accounts.users[1].username\n          break\n        default: // if it is both, userView is null\n          username = null\n      }\n      return {\n        ...state,\n        userView: username,\n      }\n\n    case \"setTypeView\": // filter trans and acc for balance, trans and acc panels\n      return {\n        ...state,\n        typeView: action.filter\n      }\n\n    case \"setAccountView\": // filter just trans for trans panel\n      return {\n        ...state,\n        // accountView: account_id\n        accountView: action.filter\n      }\n\n    case \"resetApp\":\n      return initialState;\n\n    default: {\n      return state\n    }\n  }\n\n\n\n}\n"]},"metadata":{},"sourceType":"module"}