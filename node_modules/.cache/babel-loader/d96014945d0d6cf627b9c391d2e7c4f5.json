{"ast":null,"code":"var _jsxFileName = \"/Users/flatironstudent/Desktop/moneys/frontend/src/containers/Trends.js\";\nimport React from \"react\";\nimport LineChart from '../components/LineChart';\nimport { connect } from 'react-redux';\nimport NoAccounts from \"../components/NoAccounts\";\nimport AdjustTrends from \"../components/AdjustTrends\";\nimport { usePromiseTracker } from \"react-promise-tracker\";\nimport PreLoader from \"../components/PreLoader\";\n\nconst Trends = props => {\n  const handleTypeFilter = event => {\n    props.setTypeView(event.target.id);\n  };\n\n  const {\n    promiseInProgress\n  } = usePromiseTracker(); // will return t or f. tracking promise in app useEffect \n\n  return promiseInProgress ? /*#__PURE__*/React.createElement(PreLoader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }) : props.accounts.length ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    id: \"depository\",\n    onClick: handleTypeFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, \" liquid funds \"), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"investment\",\n    onClick: handleTypeFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, \" investments \"), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"debt\",\n    onClick: handleTypeFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, \" debt \"), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"overall\",\n    onClick: handleTypeFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, \" overall \"), /*#__PURE__*/React.createElement(LineChart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(AdjustTrends, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(NoAccounts, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  });\n};\n\nconst mapStateToProps = state => {\n  return {\n    accounts: state.linkReducer.accounts\n  };\n};\n\nconst mapDispacthToProps = dispatch => {\n  return {\n    setTypeView: filter => dispatch({\n      type: \"setTypeView\",\n      filter: filter\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispacthToProps)(Trends);","map":{"version":3,"sources":["/Users/flatironstudent/Desktop/moneys/frontend/src/containers/Trends.js"],"names":["React","LineChart","connect","NoAccounts","AdjustTrends","usePromiseTracker","PreLoader","Trends","props","handleTypeFilter","event","setTypeView","target","id","promiseInProgress","accounts","length","mapStateToProps","state","linkReducer","mapDispacthToProps","dispatch","filter","type"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAExB,QAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAClCF,IAAAA,KAAK,CAACG,WAAN,CAAkBD,KAAK,CAACE,MAAN,CAAaC,EAA/B;AACD,GAFD;;AAGA,QAAM;AAAEC,IAAAA;AAAF,MAAwBT,iBAAiB,EAA/C,CALwB,CAK2B;;AAEnD,SACES,iBAAiB,gBACf,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADe,GAEfN,KAAK,CAACO,QAAN,CAAeC,MAAf,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,EAAE,EAAC,YAAX;AAAwB,IAAA,OAAO,EAAEP,gBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAQ,IAAA,EAAE,EAAC,YAAX;AAAwB,IAAA,OAAO,EAAEA,gBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,eAGE;AAAQ,IAAA,EAAE,EAAC,MAAX;AAAkB,IAAA,OAAO,EAAEA,gBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAQ,IAAA,EAAE,EAAC,SAAX;AAAqB,IAAA,OAAO,EAAEA,gBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,eAKE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAME,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF,gBASE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZN;AAcD,CArBD;;AAuBA,MAAMQ,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLH,IAAAA,QAAQ,EAAEG,KAAK,CAACC,WAAN,CAAkBJ;AADvB,GAAP;AAGD,CAJD;;AAMA,MAAMK,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLV,IAAAA,WAAW,EAAIW,MAAD,IAAYD,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAE,aAAP;AAAsBD,MAAAA,MAAM,EAAEA;AAA9B,KAAD;AAD7B,GAAP;AAGD,CAJD;;AAMA,eAAepB,OAAO,CAACe,eAAD,EAAkBG,kBAAlB,CAAP,CAA6Cb,MAA7C,CAAf","sourcesContent":["import React from \"react\"\nimport LineChart from '../components/LineChart'\nimport { connect } from 'react-redux'\nimport NoAccounts from \"../components/NoAccounts\"\nimport AdjustTrends from \"../components/AdjustTrends\"\nimport { usePromiseTracker } from \"react-promise-tracker\";\nimport PreLoader from \"../components/PreLoader\"\n\nconst Trends = (props) => {\n\n  const handleTypeFilter = (event) => {\n    props.setTypeView(event.target.id)\n  }\n  const { promiseInProgress } = usePromiseTracker(); // will return t or f. tracking promise in app useEffect \n\n  return (\n    promiseInProgress\n    ? <PreLoader />\n    : props.accounts.length \n      ? <div> \n          <button id=\"depository\" onClick={handleTypeFilter}> liquid funds </button>\n          <button id=\"investment\" onClick={handleTypeFilter}> investments </button>\n          <button id=\"debt\" onClick={handleTypeFilter}> debt </button>\n          <button id=\"overall\" onClick={handleTypeFilter}> overall </button>\n          <LineChart />\n          <AdjustTrends />\n        </div>\n      : <NoAccounts />\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    accounts: state.linkReducer.accounts\n  }\n}\n\nconst mapDispacthToProps = (dispatch) => {\n  return {\n    setTypeView: ((filter) => dispatch({type: \"setTypeView\", filter: filter})),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispacthToProps)(Trends)\n\n\n\n"]},"metadata":{},"sourceType":"module"}