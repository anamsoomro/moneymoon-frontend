{"ast":null,"code":"var _jsxFileName = \"/Users/flatironstudent/Desktop/moneys/frontend/src/components/ToggleMonth.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\n\nconst ToggleMonth = props => {\n  let month = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n  const getMonthTrans = event => {\n    props.setMonthView(event.target.value);\n    fetch(\"http://localhost:3000/month_transactions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.token}`\n      },\n      body: JSON.stringify({\n        month: event.target.value,\n        account_id: props.account_id\n      })\n    }).then(resp => resp.json()).then(transactions => {\n      transactions = transactions.map(tran => {\n        let account = props.accounts.filter(acc => acc.account_id === tran.account_id);\n        return { ...tran,\n          account_name: account[0].name\n        };\n      });\n      props.storeMonth(transactions);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"select\", {\n    id: \"month\",\n    name: \"asdfasd\",\n    style: {\n      display: \"block\"\n    },\n    onChange: getMonthTrans,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: today.getMonth() + 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \" \", month[props.monthView - 1], \" \"), /*#__PURE__*/React.createElement(\"option\", {\n    value: today.getMonth() + 1 - 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \" \", month[props.monthView - 2], \"  \"), /*#__PURE__*/React.createElement(\"option\", {\n    value: today.getMonth() + 1 - 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \" \", month[props.monthView - 3], \" \"), /*#__PURE__*/React.createElement(\"option\", {\n    value: today.getMonth() + 1 - 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \" \", month[props.monthView - 4], \" \"), /*#__PURE__*/React.createElement(\"option\", {\n    value: today.getMonth() + 1 - 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \" \", month[props.monthView - 5], \" \"));\n};\n\nconst mapStateToProps = state => {\n  return {\n    accounts: state.linkReducer.accounts,\n    account_id: state.authReducer.account.id,\n    accounts: state.linkReducer.accounts,\n    monthView: state.linkReducer.monthView\n  };\n};\n\nconst mapDispacthToProps = dispatch => {\n  return {\n    storeMonth: transactions => dispatch({\n      type: \"storeMonth\",\n      transactions: transactions\n    }),\n    setMonthView: month => dispatch({\n      type: \"setMonthView\",\n      month: month\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispacthToProps)(ToggleMonth);","map":{"version":3,"sources":["/Users/flatironstudent/Desktop/moneys/frontend/src/components/ToggleMonth.js"],"names":["React","connect","ToggleMonth","props","month","getMonthTrans","event","setMonthView","target","value","fetch","method","headers","Authorization","localStorage","token","body","JSON","stringify","account_id","then","resp","json","transactions","map","tran","account","accounts","filter","acc","account_name","name","storeMonth","display","today","getMonth","monthView","mapStateToProps","state","linkReducer","authReducer","id","mapDispacthToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport {connect} from 'react-redux'\n\nconst ToggleMonth = (props) => {\n\n  let month = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n\n\n  const getMonthTrans = (event) => {\n    props.setMonthView(event.target.value)\n    fetch(\"http://localhost:3000/month_transactions\",{\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.token}`\n      },\n      body: JSON.stringify({\n        month: event.target.value,\n        account_id: props.account_id\n      })\n    })\n    .then( resp => resp.json())\n    .then( transactions => {\n      transactions = transactions.map( tran => {\n        let account = props.accounts.filter( acc=> acc.account_id === tran.account_id )\n        return {...tran, account_name: account[0].name}\n      })\n      props.storeMonth(transactions)\n    })\n  }\n\n  return (\n    <select id=\"month\" name=\"asdfasd\" style={{display: \"block\"}} onChange={getMonthTrans}> \n      <option value={today.getMonth() + 1}> {month[props.monthView - 1]} </option>\n      <option value={today.getMonth() + 1 - 1}> {month[props.monthView - 2]}  </option>\n      <option value={today.getMonth() + 1 - 2}> {month[props.monthView - 3]} </option>\n      <option value={today.getMonth() + 1 - 3}> {month[props.monthView - 4]} </option>\n      <option value={today.getMonth() + 1 - 4}> {month[props.monthView - 5]} </option>\n    </select>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    accounts: state.linkReducer.accounts,\n    account_id: state.authReducer.account.id,\n    accounts: state.linkReducer.accounts,\n    monthView: state.linkReducer.monthView\n  }\n}\n\nconst mapDispacthToProps = (dispatch) => {\n  return {\n    storeMonth: ((transactions) => dispatch({type:\"storeMonth\", transactions: transactions})),\n    setMonthView: ((month)=>dispatch({type: \"setMonthView\", month: month}))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispacthToProps)(ToggleMonth);\n\n\n"]},"metadata":{},"sourceType":"module"}