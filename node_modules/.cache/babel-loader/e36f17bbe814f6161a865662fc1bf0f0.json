{"ast":null,"code":"var _jsxFileName = \"/Users/flatironstudent/Desktop/moneys/frontend/src/components/LineChart.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { Line } from 'react-chartjs-2';\n\nconst LineChart = props => {\n  let today = new Date();\n  let month = [\"July\", \"August\", \"September\", \"October\", \"November\", \"December\", \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\", \"January\", \"February\", \"March\", \"April\", \"May\"];\n  let lastSix = month.slice(today.getMonth() + 6 - 6, today.getMonth() + 6);\n  let nextSix = month.slice(today.getMonth() + 6, today.getMonth() + 6 + 6);\n\n  const project = (arr, m) => {\n    let projected = [];\n    let x;\n\n    for (x = 0; x < 7; x++) {\n      projected.push(arr[5] + x * m);\n    }\n\n    return projected;\n  };\n\n  let data = [];\n  useEffect(() => {\n    const depository = [{\n      label: 'Savings',\n      fill: false,\n      backgroundColor: 'rgb(51, 153, 102)',\n      borderColor: 'rgb(51, 153, 102)',\n      borderWidth: 2,\n      data: [...props.savings],\n      lineTension: 0\n    }, {\n      label: 'Savings Projected',\n      fill: false,\n      backgroundColor: '#808080',\n      borderColor: '#808080',\n      borderWidth: 2,\n      data: [null, null, null, null, null, ...project(props.savings, props.mSaving)],\n      lineTension: 0\n    }];\n    const debt = [{\n      label: 'Debt',\n      fill: false,\n      backgroundColor: 'rgb(102, 153, 255)',\n      borderColor: 'rgb(102, 153, 255)',\n      borderWidth: 2,\n      data: [...props.debt],\n      lineTension: 0\n    }, {\n      label: 'Debt Projected',\n      fill: false,\n      backgroundColor: '#808080',\n      borderColor: '#808080',\n      borderWidth: 2,\n      data: [null, null, null, null, null, ...project(props.debt, props.mDebt)],\n      lineTension: 0\n    }];\n    const investment = [{\n      label: 'Investments',\n      fill: false,\n      backgroundColor: 'rgb(230, 184, 0)',\n      borderColor: 'rgb(230, 184, 0)',\n      borderWidth: 2,\n      data: [...props.investments],\n      lineTension: 0\n    }, {\n      label: 'Investments Projected',\n      fill: false,\n      backgroundColor: '#808080',\n      borderColor: '#808080',\n      borderWidth: 2,\n      data: [null, null, null, null, null, ...project(props.investments, props.mInvestment)],\n      lineTension: 0\n    }];\n    const overall = [{\n      label: 'Overall',\n      fill: false,\n      backgroundColor: '\t#B22222',\n      borderColor: '\t#B22222',\n      borderWidth: 2,\n      data: [...props.overall],\n      lineTension: 0\n    }, {\n      label: 'Overall Projected',\n      fill: false,\n      backgroundColor: '#808080',\n      borderColor: '#808080',\n      borderWidth: 2,\n      data: [null, null, null, null, null, ...project(props.overall, props.mOverall)],\n      lineTension: 0\n    }];\n\n    const displayData = () => {\n      switch (props.filter) {\n        case \"depository\":\n          return depository;\n\n        case \"investment\":\n          return investment;\n\n        case \"debt\":\n          return debt;\n\n        case \"overall\":\n          return overall;\n\n        default:\n          return [...depository, ...investment, ...debt, ...overall];\n      }\n    }; // const data = {\n\n\n    data = {\n      labels: [...lastSix, ...nextSix],\n      datasets: displayData()\n    };\n  });\n  const options = {\n    title: {\n      display: true,\n      text: \"trends\",\n      fontSize: 20\n    },\n    legend: {\n      display: true,\n      position: 'right'\n    },\n    elements: {\n      point: {\n        radius: 0.5\n      }\n    },\n    maintainAspectRatio: false\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    data: data,\n    options: options,\n    width: 200,\n    height: 400,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    transactions: state.linkReducer.monthTransactions,\n    filter: state.linkReducer.typeView,\n    savings: state.trendReducer.savings,\n    debt: state.trendReducer.debt,\n    investments: state.trendReducer.investments,\n    overall: state.trendReducer.overall,\n    mSaving: state.trendReducer.mSaving,\n    mDebt: state.trendReducer.mDebt,\n    mInvestment: state.trendReducer.mInvestment,\n    mOverall: state.trendReducer.mOverall\n  };\n};\n\nconst mapDispacthToProps = dispatch => {\n  return {\n    dispatch\n  };\n};\n\nexport default connect(mapStateToProps, mapDispacthToProps)(LineChart);","map":{"version":3,"sources":["/Users/flatironstudent/Desktop/moneys/frontend/src/components/LineChart.js"],"names":["React","useEffect","connect","Line","LineChart","props","today","Date","month","lastSix","slice","getMonth","nextSix","project","arr","m","projected","x","push","data","depository","label","fill","backgroundColor","borderColor","borderWidth","savings","lineTension","mSaving","debt","mDebt","investment","investments","mInvestment","overall","mOverall","displayData","filter","labels","datasets","options","title","display","text","fontSize","legend","position","elements","point","radius","maintainAspectRatio","mapStateToProps","state","transactions","linkReducer","monthTransactions","typeView","trendReducer","mapDispacthToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\"\nimport { connect } from 'react-redux'\nimport {Line} from 'react-chartjs-2'\n\nconst LineChart = (props) => { \n\n  let today = new Date\n  let month = [ \"July\", \"August\", \"September\", \"October\", \"November\", \"December\", \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\", \"January\", \"February\", \"March\", \"April\", \"May\"]\n  let lastSix = month.slice( today.getMonth() + 6 - 6 , today.getMonth() + 6)\n  let nextSix = month.slice( today.getMonth() + 6, today.getMonth() + 6 + 6)  \n\n  const project = (arr, m) => {\n    let projected = []\n    let x\n    for (x =0; x < 7; x++) { \n      projected.push(arr[5] + x * m)\n    }\n    return projected\n  }\n\n  let data = []\n\n  useEffect( () => {\n    const depository = [\n      {label: 'Savings',\n       fill: false,\n       backgroundColor: 'rgb(51, 153, 102)',\n       borderColor: 'rgb(51, 153, 102)',\n       borderWidth: 2,\n       data: [...props.savings],\n       lineTension: 0}, \n      {label: 'Savings Projected',\n       fill: false,\n       backgroundColor: '#808080',\n       borderColor: '#808080',\n       borderWidth: 2,\n       data: [null,null,null,null,null, ...project(props.savings, props.mSaving)],\n       lineTension: 0}\n    ]\n  \n    const debt = [\n      {label: 'Debt',\n       fill: false,\n       backgroundColor: 'rgb(102, 153, 255)',\n       borderColor: 'rgb(102, 153, 255)',\n       borderWidth: 2,\n       data: [...props.debt],\n       lineTension: 0}, \n      {label: 'Debt Projected',\n       fill: false,\n       backgroundColor: '#808080',\n       borderColor: '#808080',\n       borderWidth: 2,\n       data: [null,null,null,null,null, ...project(props.debt, props.mDebt)],\n       lineTension: 0}\n    ]\n  \n    const investment = [\n      {label: 'Investments',\n       fill: false,\n       backgroundColor: 'rgb(230, 184, 0)',\n       borderColor: 'rgb(230, 184, 0)',\n       borderWidth: 2,\n       data: [...props.investments],\n       lineTension: 0}, \n      {label: 'Investments Projected',\n       fill: false,\n       backgroundColor: '#808080',\n       borderColor: '#808080',\n       borderWidth: 2,\n       data: [null,null,null,null,null, ...project(props.investments, props.mInvestment)],\n       lineTension: 0}\n    ]\n  \n    const overall = [\n      {label: 'Overall',\n       fill: false,\n       backgroundColor: '\t#B22222',\n       borderColor: '\t#B22222',\n       borderWidth: 2,\n       data: [...props.overall],\n       lineTension: 0}, \n      {label: 'Overall Projected',\n       fill: false,\n       backgroundColor: '#808080',\n       borderColor: '#808080',\n       borderWidth: 2,\n       data: [null,null,null,null,null, ...project(props.overall, props.mOverall)],\n       lineTension: 0}\n    ]\n  \n    const displayData = () => {\n      switch(props.filter){\n        case \"depository\":\n          return depository\n        case \"investment\":\n          return investment\n        case \"debt\":\n          return debt\n        case \"overall\":\n          return overall\n        default: \n          return [...depository, ...investment, ...debt, ...overall]\n      }\n    }\n    // const data = {\n     data = {\n      labels: [...lastSix, ...nextSix],\n      datasets: displayData()\n    }\n  })\n\n  \n\n  const options = {\n    title:{\n      display:true,\n      text: \"trends\",\n      fontSize:20\n    },\n    legend:{\n      display:true,\n      position:'right'\n    },\n    elements: {\n      point:{radius: 0.5}\n    },\n    maintainAspectRatio: false\n  }\n\n  return (\n    <div>\n      <Line data={data} options={options} width={200} height={400} />\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    transactions: state.linkReducer.monthTransactions,\n    filter: state.linkReducer.typeView,\n\n    savings: state.trendReducer.savings,\n    debt: state.trendReducer.debt,\n    investments: state.trendReducer.investments,\n    overall: state.trendReducer.overall, \n\n    mSaving: state.trendReducer.mSaving,\n    mDebt: state.trendReducer.mDebt,\n    mInvestment: state.trendReducer.mInvestment,\n    mOverall: state.trendReducer.mOverall\n  }\n}\n\nconst mapDispacthToProps = (dispatch) => {\n  return {\n    dispatch\n  }\n}\n\nexport default connect(mapStateToProps, mapDispacthToProps)(LineChart)"]},"metadata":{},"sourceType":"module"}