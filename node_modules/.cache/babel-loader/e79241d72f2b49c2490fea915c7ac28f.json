{"ast":null,"code":"var _jsxFileName = \"/Users/flatironstudent/Desktop/moneys/frontend/src/containers/Dash.js\";\nimport React, { useEffect } from \"react\";\nimport AccountsPanel from './AccountsPanel';\nimport TransactionsPanel from './TransactionPanel';\nimport BalancePanel from './BalancePanel';\nimport { connect } from 'react-redux';\n\nconst Dash = props => {\n  useEffect(() => {\n    getData(account_id, token); // now where does account_id and token come from\n  });\n\n  const getData = (account_id, token) => {\n    // this is their user auth token, not paid token. plaid token is related to items\n    fetch(`http://localhost:3000/accounts/${account_id}/get_data`, {\n      method: \"GET\",\n      // remember GET cant have a body\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    }).then(resp => resp.json()).then(data => {\n      // for as many items this acount has. each object in array is a link item\n      let allAccounts = [];\n      data.accounts.map(item => item.accounts.map(account => allAccounts.push(account)));\n      let allTransactions = [];\n      data.transactions.map(item => item.transactions.map(transaction => allTransactions.push(transaction)));\n      props.storeData({\n        transactions: allTransactions,\n        accounts: allAccounts\n      });\n    });\n  };\n\n  return (\n    /*#__PURE__*/\n    // <div className=\"dash\"> \n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(BalancePanel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(AccountsPanel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(TransactionsPanel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }))\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    clearCurrentUser: () => dispatch({\n      type: \"clearCurrentUser\"\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dash);","map":{"version":3,"sources":["/Users/flatironstudent/Desktop/moneys/frontend/src/containers/Dash.js"],"names":["React","useEffect","AccountsPanel","TransactionsPanel","BalancePanel","connect","Dash","props","getData","account_id","token","fetch","method","headers","Authorization","then","resp","json","data","allAccounts","accounts","map","item","account","push","allTransactions","transactions","transaction","storeData","mapStateToProps","state","mapDispatchToProps","dispatch","clearCurrentUser","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,iBAAP,MAA8B,oBAA9B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAEtBN,EAAAA,SAAS,CAAE,MAAK;AACdO,IAAAA,OAAO,CAACC,UAAD,EAAaC,KAAb,CAAP,CADc,CACa;AAC5B,GAFQ,CAAT;;AAIA,QAAMF,OAAO,GAAG,CAACC,UAAD,EAAaC,KAAb,KAAuB;AAAG;AACxCC,IAAAA,KAAK,CAAE,kCAAiCF,UAAW,WAA9C,EAA0D;AAC7DG,MAAAA,MAAM,EAAE,KADqD;AAC9C;AACfC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAG,UAASJ,KAAM;AAFxB;AAFoD,KAA1D,CAAL,CAOCK,IAPD,CAOMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAPd,EAQCF,IARD,CAQMG,IAAI,IAAI;AACZ;AACA,UAAIC,WAAW,GAAG,EAAlB;AACAD,MAAAA,IAAI,CAACE,QAAL,CAAcC,GAAd,CAAmBC,IAAI,IAAIA,IAAI,CAACF,QAAL,CAAcC,GAAd,CAAkBE,OAAO,IAAIJ,WAAW,CAACK,IAAZ,CAAiBD,OAAjB,CAA7B,CAA3B;AACA,UAAIE,eAAe,GAAG,EAAtB;AACAP,MAAAA,IAAI,CAACQ,YAAL,CAAkBL,GAAlB,CAAuBC,IAAI,IAAIA,IAAI,CAACI,YAAL,CAAkBL,GAAlB,CAAsBM,WAAW,IAAIF,eAAe,CAACD,IAAhB,CAAqBG,WAArB,CAArC,CAA/B;AACApB,MAAAA,KAAK,CAACqB,SAAN,CAAgB;AAACF,QAAAA,YAAY,EAAED,eAAf;AAAgCL,QAAAA,QAAQ,EAAED;AAA1C,OAAhB;AACD,KAfD;AAgBD,GAjBD;;AAoBA;AAAA;AACE;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF;AAFF;AAQD,CAlCD;;AAoCA,MAAMU,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLA,IAAAA;AADK,GAAP;AAGD,CAJD;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLC,IAAAA,gBAAgB,EAAI,MAAMD,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAE;AAAP,KAAD;AAD7B,GAAP;AAGD,CAJD;;AAMA,eAAe7B,OAAO,CAACwB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CzB,IAA7C,CAAf","sourcesContent":["import React, { useEffect } from \"react\"\nimport AccountsPanel from './AccountsPanel'\nimport TransactionsPanel from './TransactionPanel'\nimport BalancePanel from './BalancePanel'\nimport {connect} from 'react-redux'\n\nconst Dash = (props) => {\n\n  useEffect( () =>{\n    getData(account_id, token) // now where does account_id and token come from\n  })\n\n  const getData = (account_id, token) => {  // this is their user auth token, not paid token. plaid token is related to items\n    fetch(`http://localhost:3000/accounts/${account_id}/get_data`, {\n      method: \"GET\", // remember GET cant have a body\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    })\n    .then(resp => resp.json())\n    .then(data => {\n      // for as many items this acount has. each object in array is a link item\n      let allAccounts = []\n      data.accounts.map( item => item.accounts.map(account => allAccounts.push(account)))\n      let allTransactions = [] \n      data.transactions.map( item => item.transactions.map(transaction => allTransactions.push(transaction)))\n      props.storeData({transactions: allTransactions, accounts: allAccounts})\n    })\n  }\n\n\n  return (\n    // <div className=\"dash\"> \n    <div > \n      <BalancePanel /> \n      <AccountsPanel /> \n      <TransactionsPanel /> \n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return { \n    state\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    clearCurrentUser: ( () => dispatch({type: \"clearCurrentUser\"}) )\n  }\n} \n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dash);\n\n\n"]},"metadata":{},"sourceType":"module"}