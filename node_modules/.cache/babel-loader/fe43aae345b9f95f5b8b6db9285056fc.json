{"ast":null,"code":"const initialState = {\n  transactions: [],\n  accounts: [],\n  monthTransactions: [],\n  // transactionsDisplay: [],\n  // accountsDisplay: [],\n  viewUser: null\n};\nexport default function linkReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'storeData':\n      // action.data = {transacton: [{trans}, {trans} ... ]}, accounts: [{acc}, {acc} ...]}\n      return { ...state,\n        transactions: action.data.transactions,\n        transactionsDisplay: action.data.transactions,\n        accounts: action.data.accounts,\n        accountsDisplay: action.data.accounts\n      };\n\n    case 'addData':\n      return { ...state,\n        transactions: [...state.transactions, ...action.data.transactions],\n        // transactionsDisplay: [...state.transactions, ...action.data.transactions],\n        accounts: [...state.accounts, ...action.data.accounts] // accountsDisplay: [...state.accounts, ...action.data.accounts],\n\n      };\n\n    case 'storeMonth':\n      return { ...state,\n        monthTransactions: action.transactions.transactions\n      };\n\n    case 'setUserVew':\n      debugger; // why doesnt this get hit \n\n      let username;\n\n      switch (action.filter) {\n        case \"user1\":\n          username = state.accounts.users[0].username;\n          break;\n\n        case 'user2':\n          username = state.accounts.users[1].username;\n          break;\n\n        default:\n          // if it is both, userView is null\n          username = null;\n      } // let filteredAccounts\n      // let filteredTransactions\n      // if (username){\n      //   filteredTransactions = state.transactions.filter( transaction => transaction.user.username === username)\n      //   filteredAccounts = state.accounts.filter( account => account.user.username === username)\n      // }\n      // debugger\n\n\n      return { ...state,\n        viewUser: username // transactionsDisplay: filteredTransactions,\n        // accountsDisplay: filteredAccounts\n\n      };\n\n    case \"resetApp\":\n      return initialState;\n\n    default:\n      {\n        return state;\n      }\n  }\n}","map":{"version":3,"sources":["/Users/flatironstudent/Desktop/moneys/frontend/src/reducers/linkReducer.js"],"names":["initialState","transactions","accounts","monthTransactions","viewUser","linkReducer","state","action","type","data","transactionsDisplay","accountsDisplay","username","filter","users"],"mappings":"AACA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,YAAY,EAAE,EADK;AAEnBC,EAAAA,QAAQ,EAAE,EAFS;AAGnBC,EAAAA,iBAAiB,EAAE,EAHA;AAInB;AACA;AACAC,EAAAA,QAAQ,EAAE;AANS,CAArB;AASA,eAAe,SAASC,WAAT,CAAqBC,KAAK,GAACN,YAA3B,EAAyCO,MAAzC,EAAgD;AAE7D,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,WAAL;AAAkB;AAChB,aAAM,EACJ,GAAGF,KADC;AAEJL,QAAAA,YAAY,EAAEM,MAAM,CAACE,IAAP,CAAYR,YAFtB;AAGJS,QAAAA,mBAAmB,EAAEH,MAAM,CAACE,IAAP,CAAYR,YAH7B;AAIJC,QAAAA,QAAQ,EAAEK,MAAM,CAACE,IAAP,CAAYP,QAJlB;AAKJS,QAAAA,eAAe,EAAEJ,MAAM,CAACE,IAAP,CAAYP;AALzB,OAAN;;AAOF,SAAK,SAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELL,QAAAA,YAAY,EAAE,CAAC,GAAGK,KAAK,CAACL,YAAV,EAAwB,GAAGM,MAAM,CAACE,IAAP,CAAYR,YAAvC,CAFT;AAGL;AACAC,QAAAA,QAAQ,EAAE,CAAC,GAAGI,KAAK,CAACJ,QAAV,EAAoB,GAAGK,MAAM,CAACE,IAAP,CAAYP,QAAnC,CAJL,CAKL;;AALK,OAAP;;AAOF,SAAK,YAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELH,QAAAA,iBAAiB,EAAEI,MAAM,CAACN,YAAP,CAAoBA;AAFlC,OAAP;;AAIF,SAAK,YAAL;AACE,eADF,CACW;;AACT,UAAIW,QAAJ;;AACA,cAAQL,MAAM,CAACM,MAAf;AACE,aAAK,OAAL;AACED,UAAAA,QAAQ,GAAGN,KAAK,CAACJ,QAAN,CAAeY,KAAf,CAAqB,CAArB,EAAwBF,QAAnC;AACA;;AACF,aAAK,OAAL;AACEA,UAAAA,QAAQ,GAAGN,KAAK,CAACJ,QAAN,CAAeY,KAAf,CAAqB,CAArB,EAAwBF,QAAnC;AACA;;AACF;AAAS;AACPA,UAAAA,QAAQ,GAAG,IAAX;AARJ,OAHF,CAaE;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,aAAO,EACL,GAAGN,KADE;AAELF,QAAAA,QAAQ,EAAEQ,QAFL,CAGL;AACA;;AAJK,OAAP;;AAMF,SAAK,UAAL;AACE,aAAOZ,YAAP;;AACF;AAAS;AACP,eAAOM,KAAP;AACD;AApDH;AAsDD","sourcesContent":["\nconst initialState = {\n  transactions: [],\n  accounts: [],\n  monthTransactions: [],\n  // transactionsDisplay: [],\n  // accountsDisplay: [],\n  viewUser: null\n}\n\nexport default function linkReducer(state=initialState, action){\n\n  switch(action.type){\n    case 'storeData': // action.data = {transacton: [{trans}, {trans} ... ]}, accounts: [{acc}, {acc} ...]}\n      return{\n        ...state,\n        transactions: action.data.transactions,\n        transactionsDisplay: action.data.transactions,\n        accounts: action.data.accounts,\n        accountsDisplay: action.data.accounts,\n      }\n    case 'addData':\n      return {\n        ...state,\n        transactions: [...state.transactions, ...action.data.transactions],\n        // transactionsDisplay: [...state.transactions, ...action.data.transactions],\n        accounts: [...state.accounts, ...action.data.accounts],\n        // accountsDisplay: [...state.accounts, ...action.data.accounts],\n      }\n    case 'storeMonth':\n      return {\n        ...state,\n        monthTransactions: action.transactions.transactions\n      }\n    case 'setUserVew':\n      debugger // why doesnt this get hit \n      let username\n      switch (action.filter){\n        case \"user1\":\n          username = state.accounts.users[0].username\n          break \n        case 'user2': \n          username = state.accounts.users[1].username\n          break\n        default: // if it is both, userView is null\n          username = null\n      }\n      // let filteredAccounts\n      // let filteredTransactions\n      // if (username){\n      //   filteredTransactions = state.transactions.filter( transaction => transaction.user.username === username)\n      //   filteredAccounts = state.accounts.filter( account => account.user.username === username)\n      // }\n      // debugger\n      return {\n        ...state,\n        viewUser: username,\n        // transactionsDisplay: filteredTransactions,\n        // accountsDisplay: filteredAccounts\n      }\n    case \"resetApp\":\n      return initialState;\n    default: {\n      return state\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}