{"ast":null,"code":"console.log(localStorage);\nconst initialState = {\n  // all this local storage business is to keep whats needed to be functional on refresh\n  user: {\n    id: localStorage.user_id ? localStorage.user_id : null,\n    // this state goes to \"undefined\" not null when logout, idk if that has anything to do with it\n    username: null\n  },\n  account: {\n    id: localStorage.account_id ? localStorage.account_id : null,\n    code: localStorage.account_code ? localStorage.account_code : null,\n    users: [{\n      username: localStorage.user1 ? localStorage.user1 : null\n    }, !!localStorage.user2 && {\n      username: localStorage.user2\n    }]\n  }\n};\nexport default function authReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'setCurrentUser':\n      return { ...state,\n        user: action.user.user,\n        account: action.user.account\n      };\n\n    case \"resetAppAuth\":\n      return initialState;\n\n    default:\n      {\n        return state;\n      }\n  }\n}","map":{"version":3,"sources":["/Users/flatironstudent/Desktop/moneys/frontend/src/reducers/authReducer.js"],"names":["console","log","localStorage","initialState","user","id","user_id","username","account","account_id","code","account_code","users","user1","user2","authReducer","state","action","type"],"mappings":"AAAAA,OAAO,CAACC,GAAR,CAAYC,YAAZ;AAEA,MAAMC,YAAY,GAAG;AACnB;AACAC,EAAAA,IAAI,EAAE;AACJC,IAAAA,EAAE,EAAEH,YAAY,CAACI,OAAb,GAAuBJ,YAAY,CAACI,OAApC,GAA8C,IAD9C;AACqD;AACzDC,IAAAA,QAAQ,EAAE;AAFN,GAFa;AAMnBC,EAAAA,OAAO,EAAE;AACPH,IAAAA,EAAE,EAAEH,YAAY,CAACO,UAAb,GAA0BP,YAAY,CAACO,UAAvC,GAAoD,IADjD;AAEPC,IAAAA,IAAI,EAAER,YAAY,CAACS,YAAb,GAA4BT,YAAY,CAACS,YAAzC,GAAwD,IAFvD;AAGPC,IAAAA,KAAK,EAAE,CACL;AAACL,MAAAA,QAAQ,EAAEL,YAAY,CAACW,KAAb,GAAqBX,YAAY,CAACW,KAAlC,GAA0C;AAArD,KADK,EAEL,CAAC,CAACX,YAAY,CAACY,KAAf,IAAwB;AAACP,MAAAA,QAAQ,EAAEL,YAAY,CAACY;AAAxB,KAFnB;AAHA;AANU,CAArB;AAgBA,eAAe,SAASC,WAAT,CAAqBC,KAAK,GAACb,YAA3B,EAAyCc,MAAzC,EAAgD;AAC7D,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,gBAAL;AACE,aAAM,EAAE,GAAGF,KAAL;AACJZ,QAAAA,IAAI,EAAEa,MAAM,CAACb,IAAP,CAAYA,IADd;AAEJI,QAAAA,OAAO,EAAES,MAAM,CAACb,IAAP,CAAYI;AAFjB,OAAN;;AAIF,SAAK,cAAL;AACE,aAAOL,YAAP;;AACF;AAAS;AACP,eAAOa,KAAP;AACD;AAVH;AAYD","sourcesContent":["console.log(localStorage)\n\nconst initialState = {\n  // all this local storage business is to keep whats needed to be functional on refresh\n  user: {\n    id: localStorage.user_id ? localStorage.user_id : null , // this state goes to \"undefined\" not null when logout, idk if that has anything to do with it\n    username: null \n  },\n  account: {\n    id: localStorage.account_id ? localStorage.account_id : null, \n    code: localStorage.account_code ? localStorage.account_code : null,\n    users: [\n      {username: localStorage.user1 ? localStorage.user1 : null},\n      !!localStorage.user2 && {username: localStorage.user2} \n    ]\n  }\n}\n\nexport default function authReducer(state=initialState, action){\n  switch(action.type){\n    case 'setCurrentUser':\n      return{ ...state,\n        user: action.user.user,\n        account: action.user.account\n      }\n    case \"resetAppAuth\":\n      return initialState;\n    default: {\n      return state\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}